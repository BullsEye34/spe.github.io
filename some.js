!function(){"use strict";angular.module("vrm.template",[]).run(["$templateCache",function($templateCache){$templateCache.put("messages.html",'<span class="sg-input-error" ng-message="required" data-i18n="form.required"></span><span class="sg-input-error" ng-message="email" data-i18n="form.email"></span><span class="sg-input-error" ng-message="compareTo" data-i18n="form.compareTo"></span><span class="sg-input-error" ng-message="min" data-i18n="form.toLow"></span><span class="sg-input-error" ng-message="max" data-i18n="form.toHigh"></span><span class="sg-input-error" ng-message="imei" data-i18n="form.imei"></span><span class="sg-input-error" ng-message="installationId" data-i18n="form.installationId"></span>'),$templateCache.put("infowindow.tpl.html",'<div class="infowindow2"> <strong><a ng-click="map.navigate(parameter.id)" ui-sref="base.installation.dashboard({id: parameter.id})">{{parameter.description}}</a></strong> <div><span data-i18n="installationoverview.status"></span>: {{(parameter.alarm ? "installationoverview.ok" : "installationoverview.alarm") | i18n}} </div><div ng-if="parameter.lastLogSecondsAgo > 0"><span data-i18n="installationoverview.lastConnection"></span>: <span am-time-ago="parameter.lastLogSecondsAgo * 1000"></span> </div><div data-i18n="core.running_on_{{parameter.runningOn}}"></div></div></div>')}])}(),angular.module("vrm.template").run(["$templateCache",function($templateCache){$templateCache.put("vrm-components/admin-table/admin-table-header.template.html",'<tr>\n\t<th title="{{$column.headerTitle(this)}}" ng-repeat="$column in $columns" ng-class="{ \'vrm-table--admin__th--sortable\': $column.sortable(this), \'vrm-table--sort-ascending\': params.sorting()[$column.sortable(this)]==\'asc\', \'vrm-table--sort-descending\': params.sorting()[$column.sortable(this)]==\'desc\' }" ng-click="sortBy($column, $event)" ng-if="$column.show(this)" ng-init="template=$column.headerTemplateURL(this)" class="header {{$column.class(this)}}">\n\t\t<span ng-bind="$column.title(this)" ng-class="{\'sort-indicator\': params.settings().sortingIndicator==\'span\'}"></span>\n\t</th>\n</tr>\n'),$templateCache.put("vrm-components/alarm-widget/alarm-widget.template.html",'<div class="vrm-widget">\n    <div class="vrm-widget__header vrm-widget__header--oneline" ng-class="{\'sg-color-red\': data.records.data.activeAlarms > 0}">\n        <div class="vrm-widget__header__title">{{title}}</div>\n        <span ng-if="data.records.data.activeAlarms > 0" class="vrm-widget__header__icon sg-vrm-icon_12_alarm-32px"></span>\n    </div>\n    <div class="vrm-widget__items">\n        <div class="vrm-widget__items__item" ng-repeat="alarm in ::data.records.data.alarms">\n            <table class="vrm-alarm-table">\n                <thead>\n                <tr>\n                    <td class="vrm-minimal-table__td-hide-overflow" title="{{alarm.description}}">{{::alarm.description}}</td>\n                    <td data-i18n="advanced.cleared_after">Cleared after</td>\n                </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <td class="sg-color-red">{{::alarm.started * 1000 | date:\'yyyy-MM-dd HH:mm:ss\':installation.timezone_offset_textual}}</td>\n                    <td class="sg-color-blue">{{::alarm.duration}}</td>\n                </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>'),$templateCache.put("vrm-components/avatar/avatar.template.html",'<div class="vrm-table__with-image__image" ng-class="{\'vrm-initials--fc\': user.fullControl}" ng-hide="hideImage"><img ng-src="{{user.avatar_url}}" /></div>\n<div class="vrm-initials" ng-class="{\'vrm-initials--fc\': user.fullControl}" ng-show="hideImage">{{getInitials(user.name)}}</div>'),$templateCache.put("vrm-components/date/date.template.html",'<span ng-if="pickadata">\n    <span ng-hide="noIcon" class="vrm-dashboard__actions__item sg-vrm-icon_04_clock-32px hidden-sm hidden-xs"></span>\n    <span ng-if="!onlyDates">\n        <div class="vrm-dashboard__actions__item" ng-if="!toggles.customDate">\n            <ui-select class="vrm-select" theme="select2" ng-model="picker.range" search-enabled="false" remove-selected="false">\n                <ui-select-match><span data-i18n="datepicker.{{$select.selected.name}}"></span></ui-select-match>\n                <ui-select-choices repeat="item in ranges">\n                    <span data-i18n="datepicker.{{item.name}}"></span>\n                </ui-select-choices>\n            </ui-select>\n        </div>\n        <div class="vrm-dashboard__actions__item vrm-pickadate" ng-if="!custom">\n            <input type="text" pick-a-date="picker.date" max-date="picker.maxDate" pick-a-date-options="pickadata.dateOptions" />\n        </div>\n        <div class="vrm-dashboard__actions__item vrm-pickadate" ng-if="toggles.picker">\n            <input type="text" pick-a-date="picker.startDate" max-date="picker.maxDate" pick-a-date-options="pickadata.dateOptions" />\n            <input type="text" pick-a-time="picker.startDate" pick-a-time-options="pickadata.timeOptions" />\n        </div>\n        <div class="vrm-dashboard__actions__item vrm-pickadate" ng-if="toggles.picker">\n            <input type="text" pick-a-date="picker.date" max-date="picker.maxDate" pick-a-date-options="pickadata.dateOptions" />\n            <input type="text" pick-a-time="picker.date" pick-a-time-options="pickadata.timeOptions" />\n        </div>\n        <div class="vrm-dashboard__actions__item vrm-pickadate vrm-pickadate--toggle" ng-if="custom">\n            <vrm-toggle-button ng-model="toggles.customDate"><span ng-show="toggles.customDate">{{\'core.default_date\' |\n                    i18n}}\n                    {{\'datepicker.\'+picker.range.name | i18n}}</span><span ng-show="!toggles.customDate" data-i18n="core.custom_date"></span></vrm-toggle-button>\n        </div>\n    </span>\n\n    <span ng-if="onlyDates && withLabels">\n        <div class="col-xxs-12 col-xxs-offset-0 col-xs-5 col-xs-offset-1">\n            <div class="vrm-form__fieldset-item">\n                <div class="sg-textfield-label" style="display: block;">\n                    <span data-i18n="reporting.date">Date</span>\n                </div>\n                <input type="text" pick-a-date="picker.startDate" max-date="picker.maxDate" pick-a-date-options="pickadata.dateOptions" />\n            </div>\n        </div>\n        <div class="col-xxs-12 col-xxs-offset-0 col-xs-5 col-xs-offset-1">\n            <div class="vrm-form__fieldset-item">\n                <div class="sg-textfield-label" style="display: block;">\n                    <span data-i18n="reporting.till">till</span>\n                </div>\n                <input type="text" pick-a-date="picker.date" max-date="picker.maxDate" pick-a-date-options="pickadata.dateOptions" />\n            </div>\n        </div>\n    </span>\n\n    <span ng-if="onlyDates && !withLabels">\n        <div class="col-xxs-12 col-xs-6">\n            <div class="vrm-form__fieldset-item">\n                <input type="text" pick-a-date="picker.startDate" max-date="picker.maxDate" pick-a-date-options="pickadata.dateOptions" />\n            </div>\n        </div>\n        <div class="col-xs-1 hidden-xxs">\n            \x3c!-- <span data-i18n="reporting.till">till</span> --\x3e\n        </div>\n        <div class="col-xxs-12 col-xs-6">\n            <div class="vrm-form__fieldset-item vrm-form__fieldset-item--no-margin">\n                <input type="text" pick-a-date="picker.date" max-date="picker.maxDate" pick-a-date-options="pickadata.dateOptions" class="pull-right" />\n            </div>\n        </div>\n    </span>\n</span>\n\n'),$templateCache.put("vrm-components/dropdown/dropdown.template.html",'<div class="vrm-dropdown" ng-transclude></div>\n'),$templateCache.put("vrm-components/gps-widget/gps-widget.template.html",'<div class="vrm-widget vrm-widget--download vrm-widget--gps" style="max-height: 100%;">\n    <div class="vrm-widget__header vrm-widget__header--twolines">\n        <div class="vrm-widget__header__title" data-i18n="advanced.gps">GPS</div>\n        <div ng-hide="data.records.data.geofenceAlarmActive" class="vrm-widget__header__subtitle" data-i18n="{{\'advanced.geofence_\' + (data.records.data.geofenceEnabled == \'1\' ? \'armed\' : \'disarmed\')}}"></div>\n        <div ng-show="data.records.data.geofenceAlarmActive" class="vrm-widget__header__subtitle">{{\'advanced.outside_geofence_since\' | i18n}} {{outsideSince | vrmTimeIntervalTextual:now:\'short\'}}</div>\n    </div>\n    <div class="vrm-widget__items" >\n        <div class="vrm-widget__items__item" >\n            <table class="vrm-minimal-table">\n                <thead>\n                <tr>\n                    <td data-i18n="advanced.speed">Speed</td>\n                </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <td class="sg-color-blue">{{getField(\'ls\').valueFormattedWithUnit | vrmNotApplicable}}</td>\n                </tr>\n                </tbody>\n            </table>\n\n        </div>\n        <div ng-if="map">\n            <ui-gmap-google-map control="map.control" center="map.center" zoom="map.zoom" options="map.options" style="height: 200px">\n                <ui-gmap-marker idKey="1" coords="map.coords" options="map.markerOptions"></ui-gmap-marker>\n            </ui-gmap-google-map>\n        </div>\n    </div>\n    <div class="vrm-widget__footer">\n        <a href ng-click="download()"><span class="sg-vrm-icon_42_download-16px"></span>{{\'advanced.download_gps\' | i18n}}</a>\n    </div>\n</div>'),$templateCache.put("vrm-components/graph-widget/graph-widget.template.html",'<div class="vrm-widget" in-view="inview = $inview" in-view-options="{ throttle: 200 }">\n    <div class="vrm-widget__header vrm-widget__header--twolines">\n        <div class="vrm-widget__header__title">{{title}} <span ng-if="instance && instance != 0">[{{instance}}]</span></div>\n        <div class="vrm-widget__header__subtitle">\n           <span ng-repeat="meta in metas" ng-click="chart.series[$index].visible = !chart.series[$index].visible" ng-class="{\'vrm-widget__item--disabled\': !chart.series[$index].visible, \'vrm-widget__item--blue\': $index == 0, \'vrm-widget__item--orange\': $index == 1, \'vrm-widget__item--black\': $index == 2, \'vrm-widget__item--green\' : $index == 3}">\n                <i class="sg-vrm-icon_84_graph-16px"></i> {{::meta.description}} {{::meta.formatWithUnit ? "(" + (meta.formatWithUnit.replace(meta.formatValueOnly, \'\').replace(\'%%\',\'%\').replace(\'%.0F\',\'\').trim()) + ")" : \'\'}}\n           </span>\n        </div>\n    </div>\n    <div class="vrm-widget__items vrm-widget__items--graph">\n        <highchart config="chart" ng-if="chart"></highchart>\n    </div>\n    <div class="vrm-widget__tabs" ng-if="meta.length > 1">\n        <a ng-repeat="tab in meta" ng-click="setCurrent(tab)" ng-class="{\'vrm-widget__tab--active\': tab === current}" class="vrm-widget__tab">{{tab.name}}</a>\n    </div>\n</div>\n'),$templateCache.put("vrm-components/header/header.template.html",'<div class="vrm-header">\n    <div class="container">\n        <div class="row">\n            <div class="col-xs-12 vrm-header__inner">\n                <div class="vrm-nav-handle" vrm-nav-toggle>\n                    <span class="sg-vrm-icon_32_menu-16px"></span>\n                </div>\n                <span class="vrm-header__title" ng-transclude="headerTitle" ng-if="hasTitle"></span>\n                <span class="vrm-header__title vrm-header__title--tasks" ng-transclude="headerTitleTasks" ng-if="hasTitleTasks"></span>\n                <div class="vrm-header__controls hidden-lg" ng-transclude="headerControls" ng-if="hasControls"></div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class="vrm-header__container">\n    <div ng-transclude="headerPanels"></div>\n\n    <div class="container">\n        <div class="row">\n            <div class="col-sm-8" ng-class="{\'visible-lg-block\': hasMobileTitle}" ng-transclude="pageTitle"></div>\n            <div class="col-xs-12 col-sm-8 hidden-lg" ng-transclude="mobilePageTitle"></div>\n            <div class="col-sm-4" ng-transclude="titleControls"></div>\n            <div class="vrm-header__controls visible-lg-block" ng-transclude="headerControls" ng-if="hasControls"></div>\n        </div>\n    </div>\n</div>\n\n'),$templateCache.put("vrm-components/hr/hr.template.html",'<div class="vrm-hr__info" ng-if="!realtime" ng-show="time > 0">\n    <span class="vrm-hr__info__caption">{{\'common.last_update\' | i18n}} <span am-time-ago="time"></span></span>\n</div>\n<div class="vrm-hr__info" ng-if="realtime" ng-show="time > 0">\n    <span class="vrm-hr__info__caption">{{\'common.last_update\' | i18n}} {{\'common.realtime\' | i18n}} </span>\n</div>'),$templateCache.put("vrm-components/icon-button/icon-button.template.html",'<a class="sg-btn sg-btn-icon">\n    <span class="sg-btn-toggle-icon-icon" ng-class="iconClass"></span>\n</a>\n'),$templateCache.put("vrm-components/input/input.template.html",'<div class="vrm-input">\n    <label class="sg-textfield-label" ng-class="{\'sg-required\': required}">\n        <span class="sg-textfield-label-caption">{{label}}</span>\n    </label>\n    <input class="sg-element" type="text" data-ng-blur="blur" />\n    <div ng-show="invalid" class="sg-input-error">Explanation text field incorrect</div>\n</div>'),$templateCache.put("vrm-components/installation-overview-item/installation-overview-item.template.html",'<div class="row">\n    <div class="col-xs-1"><span class="vrm-block__inline_icon" ng-class="installation.device_icon | vrmDeviceIcon" vrm-tooltip="{{\'core.running_on_\'+installation.device_icon | i18n}}"></span></div>\n    <div class="col-xs-11">\n        <h4 ui-sref="base.installation.dashboard({id: installation.id})">\n            {{installation.name}}\n        </h4>\n        <span class="vrm-block__inline_icon sg-vrm-icon_12_alarm-32px sg-color-red" ng-if="installation.alarm"></span>\n        <span class="vrm-block__error" data-i18n="installationoverview.alarm" ng-if="installation.alarm">Alarm</span>\n        <span data-i18n="installationoverview.last_update">Last update</span>:\n        <span ng-show="isRealtime(installation)" data-i18n="installationoverview.realtime"></span>\n        <span ng-hide="isRealtime(installation)" am-time-ago="installation.last_timestamp*1000"></span>\n\n        <div class="vrm-block__scroll__container" vrm-block-scroll-indication>\n            <div class="vrm-block__scroll__shadow">\n                <span class="vrm-block__scroll__shadow__left"></span>\n                <span class="vrm-block__scroll__shadow__right"></span>\n            </div>\n            <div class="vrm-block__scroll">\n                <div class="vrm-block__scroll__inner">\n                    <div class="vrm-block__scroll__item"\n                         ng-if="installation.data.bs.formattedValue || installation.data.soc_status.textValue"\n                         ng-class="{ \'sg-color-red\': installation.data.bs.formattedValue.replace(\' %\',\'\') < 20, \'sg-color-orange\': installation.data.bs.formattedValue.replace(\' %\',\'\') < 60 }">\n                        <label class="vrm-block__scroll__label" data-i18n="installationoverview.stateOfCharge">State of charge</label>\n                        <span class="vrm-block__scroll__icon sg-vrm-icon_21_battery-16px sg-color-green"></span>\n                        <strong>{{installation.data.bs.formattedValue || (\'common.not_applicable\' | i18n) }}</strong><br />\n                        {{installation.data.soc_status.textValue}}\n                    </div>\n                    <div class="vrm-block__scroll__item" ng-if="installation.data.bv.formattedValue || installation.data.bv.textValue">\n                        <label class="vrm-block__scroll__label" data-i18n="installationoverview.dcVoltage">DC voltage</label>\n                        <span class="vrm-block__scroll__icon sg-vrm-icon_21_battery-16px sg-color-blue"></span>\n                        <strong>{{installation.data.bv.formattedValue}}</strong><br />\n                    </div>\n                    <div class="vrm-block__scroll__item" ng-if="installation.data.solar_yield.formattedValue || installation.data.solar_yield.textValue">\n                        <label class="vrm-block__scroll__label" data-i18n="installationoverview.solarYield">Solar yield</label>\n                        <span class="vrm-block__scroll__icon sg-vrm-icon_22_solar-16px sg-color-orange"></span>\n                        <strong>{{installation.data.solar_yield.formattedValue}}</strong><br />\n                    </div>\n                    <div class="vrm-block__scroll__item" ng-if="installation.data.consumption.formattedValue || installation.data.consumption.textValue">\n                        <label class="vrm-block__scroll__label" data-i18n="installationoverview.consumption">Consumption</label>\n                        <span class="vrm-block__scroll__icon sg-vrm-icon_24_consumption-16px sg-color-red"></span>\n                        <strong>{{installation.data.consumption.formattedValue}}</strong><br />\n                    </div>\n                    <div class="vrm-block__scroll__item" ng-if="installation.data.from_to_grid.formattedValue || installation.data.from_to_grid.textValue">\n                        <label class="vrm-block__scroll__label" data-i18n="installationoverview.grid">Grid</label>\n                        <span class="vrm-block__scroll__icon sg-vrm-icon_23_grid-16px sg-color-red"></span>\n                        <strong>{{installation.data.from_to_grid.formattedValue}}</strong><br />\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n'),$templateCache.put("vrm-components/nav/nav.template.html",'<div class="vrm-nav">\n    <div class="vrm-nav__header">\n        <a ui-sref="base.installation-overview" ng-show="$root.userState.isShare || $root.user != null"  >\n            <img class="vrm-logo" ng-src="{{$root.logo}}">\n        </a>\n        <span class="vrm-nav__handle js-vrm-nav-handle sg-vrm-icon_55_cross-16px" vrm-nav-toggle></span>\n        <div class="vrm-nav__section">\n            <div class="vrm-search">\n                <span class="sg-vrm-icon_40_search-16px vrm-search__icon"></span>\n                <input ng-model="searchInstallation" type="text" class="sg-element vrm-search__input needsclick" data-i18n-attr="{\'placeholder\': \'nav.search_installation\'}" ng-keydown="goToResultsOnEnter($event)"/>\n                <span class="sg-vrm-icon_55_cross-16px vrm-search__clear" ng-show="searchInstallation" ng-click="searchInstallation = \'\'"></span>\n            </div>\n        </div>\n    </div>\n    <div class="vrm-nav__section--no-overflow">\n        <div ng-class="{\'vrm--transition-right\': direction == \'right\', \'vrm--transition-left\': direction == \'left\'}">\n            <ul ng-class="{\'vrm--inactive\' : currentMenu != \'installations\', \'vrm--active\' : currentMenu == \'installations\'}" class="vrm-nav__items">\n                <li class="vrm-nav__items__item vrm-nav__back"><a class="vrm-nav__items__item__link" ng-click="openMenu(\'root\', false, \'right\')"><span class="sg-vrm-icon_48_arrow-left-16px"></span> <span data-i18n="nav.back">Back</span></a></li>\n                <li class="vrm-nav__items__item" ng-show="$root.userState.isShare || $root.user != null" ng-class="{\'vrm--active\': $state.includes(\'base.installation-overview\')}">\n                    <a class="vrm-nav__items__item__link" ui-sref="base.installation-overview"><span class="sg-vrm-icon_05_pointer-my-32px"></span><span data-i18n="nav.installation_overview">All installations</span></a>\n                </li>\n                <li class="vrm-nav__items__item vrm-nav__installation" ng-class="{\'vrm--has-warning\': activeInstallation.alarm}" ng-if="!isActiveInstallationInList() && $state.includes(\'base.installation\', {id: activeInstallation.id})" ui-sref="base.installation.dashboard({id: activeInstallation.id})" ng-click="openMenu(\'installation\', activeInstallation, undefined, true)">\n                    <a class="vrm-nav__items__item__link" class="vrm-nav__items__item__link">\n                        <span ng-class="activeInstallation.device_icon | vrmDeviceIcon" class="vrm-tooltip--arrow-left vrm-tooltip--light" vrm-tooltip="{{\'core.running_on_\'+activeInstallation.device_icon | i18n}}"></span>\n                        {{activeInstallation.name}}\n                    </a>\n                    <a class="vrm-nav__items__item__open"><span class="sg-vrm-icon_88_plus_12px"></span></a>\n                </li>\n\n                \x3c!--Loop over installations--\x3e\n                <li class="vrm-nav__items__item vrm-nav__installation" ng-class="{\'vrm--has-warning\': item.alarm}" ng-repeat="item in installations | navInstallationFilter : searchInstallation track by item.id" ui-sref="base.installation.dashboard({id: item.id})" ng-click="openMenu(\'installation\', item, undefined, true)">\n                    <a class="vrm-nav__items__item__link">\n                        <span ng-class="item.device_icon | vrmDeviceIcon" class="vrm-tooltip--arrow-left vrm-tooltip--light" vrm-tooltip="{{\'core.running_on_\'+item.device_icon | i18n}}"></span>\n                        {{item.name}}\n                    </a>\n                    <a class="vrm-nav__items__item__open"><span class="sg-vrm-icon_88_plus_12px"></span></a>\n                </li>\n\n                \x3c!--No installations are visible--\x3e\n                <li class="vrm-nav__items__item vrm-nav__installation" ng-show="installations.length == 0 && !loading" data-i18n="nav.no_installations_visible">No installations visible</li>\n                <li class="vrm-nav__items__item vrm-nav__installation" ng-show="loading || searchingForPortalId" data-i18n="core.loading">Loading...</li>\n            </ul>\n            <ul ng-class="{\'vrm--inactive\' : currentMenu != \'installation\', \'vrm--active\' : currentMenu == \'installation\'}" class="vrm-nav__items">\n                <li class="vrm-nav__items__item vrm-nav__back"><a class="vrm-nav__items__item__link" ng-click="installations.length === 1 ? openMenu(\'root\', false, \'right\') : openMenu(\'installations\', false, \'right\')"><span class="sg-vrm-icon_48_arrow-left-16px"></span> <span data-i18n="nav.back">Back</span></a></li>\n                <li class="vrm-nav__items__item" ng-class="{\'vrm--active\': $state.includes(\'base.installation.dashboard\', {id: currentInstallation.id})}">\n                    <a class="vrm-nav__items__item__link" class="vrm-nav__items__item__link" ui-sref="base.installation.dashboard({id: currentInstallation.id})" ng-click="closeMenu()">\n                        <span class="sg-vrm-icon_89_dashboard-16px"></span><span data-i18n="nav.dashboard">Dashboard</span>\n                    </a>\n                </li>\n                <li class="vrm-nav__items__item" ng-class="{\'vrm--active\': $state.includes(\'base.installation.advanced\', {id: currentInstallation.id})}">\n                    <a class="vrm-nav__items__item__link" ui-sref="base.installation.advanced({id: currentInstallation.id})">\n                        <span class="sg-vrm-icon_90_advanced-16px"></span><span data-i18n="nav.advanced">Advanced</span>\n                    </a>\n                </li>\n                <li ng-show="currentInstallation.view_permissions.settings" class="vrm-nav__items__item" ng-class="{\'vrm--active\': $state.includes(\'base.installation.overview\', {id: currentInstallation.id})}">\n                    <a class="vrm-nav__items__item__link" ui-sref="base.installation.overview({id: currentInstallation.id})">\n                        <span class="sg-vrm-icon_91_pointer-my-16px"></span><span data-i18n="nav.system_overview">Device list</span>\n                    </a>\n                </li>\n                <li ng-show="currentInstallation.view_permissions.settings" class="vrm-nav__items__item" ng-click="openMenu(\'settings\')">\n                    <a class="vrm-nav__items__item__link">\n                        <span class="sg-vrm-icon_45_settings-16px"></span><span data-i18n="nav.settings">Settings</span>\n                    </a>\n                    <a class="vrm-nav__items__item__open"><span class="sg-vrm-icon_88_plus_12px"></span></a>\n                </li>\n                <li ng-show="currentInstallation.view_permissions.vnc" class="vrm-nav__items__item">\n                    <a class="vrm-nav__items__item__link" ng-click="openRemoteConsoleModal(currentInstallation)">\n                        <span class="sg-vrm-icon_34_vnc-16px"></span><span data-i18n="nav.vnc"></span>\n                    </a>\n                </li>\n                <li ng-hide="$root.userState.isDemo || $root.userState.isShare || !currentInstallation.view_permissions.settings" class="vrm-nav__items__item">\n                    <a class="vrm-nav__items__item__link" ng-click="openWysiwygModal(currentInstallation)">\n                        <span class="sg-vrm-icon_35_notes-16px"></span><span data-i18n="nav.notes"></span>\n                    </a>\n                </li>\n                <li class="vrm-nav__items__item">\n                    <a class="vrm-nav__items__item__link" ng-click="openCarouselModal(currentInstallation)">\n                        <span class="sg-vrm-icon_36_photo-16px"></span><span data-i18n="nav.photos"></span>\n                    </a>\n                </li>\n                <li ng-show="currentInstallation.view_permissions.share" class="vrm-nav__items__item">\n                    <a class="vrm-nav__items__item__link" ng-click="openShareModal(currentInstallation)">\n                        <span class="sg-vrm-icon_37_share-16px"></span><span data-i18n="nav.share"></span>\n                    </a>\n                </li>\n                <li ng-show="currentInstallation.view_permissions.settings" class="vrm-nav__items__item" ng-class="{\'vrm--active\': $state.includes(\'base.installation.alarmlogs\', {id: currentInstallation.id})}">\n                    <a class="vrm-nav__items__item__link" ui-sref="base.installation.alarmlogs({id: currentInstallation.id})">\n                        <span class="sg-vrm-icon_47_alarm-log-16px"></span><span data-i18n="nav.alarm_logs"></span>\n                    </a>\n                </li>\n                <li ng-show="currentInstallation.view_permissions.settings" class="vrm-nav__items__item" ng-class="{\'vrm--active\': $state.includes(\'base.installation.reporting\', {id: currentInstallation.id})}">\n                    <a class="vrm-nav__items__item__link" ui-sref="base.installation.reporting({id: currentInstallation.id})">\n                        <span class="sg-vrm-icon_95_report_16px"></span><span data-i18n="nav.reporting"></span>\n                    </a>\n                </li>\n                <li ng-show="currentInstallation.view_permissions.diagnostics" class="vrm-nav__items__item" ng-class="{\'vrm--active\': $state.includes(\'base.installation.diagnostics\', {id: currentInstallation.id})}">\n                    <a class="vrm-nav__items__item__link" ui-sref="base.installation.diagnostics({id: currentInstallation.id})">\n                        <span class="sg-vrm-icon_61_info-round-16px"></span><span data-i18n="nav.diagnostics"></span>\n                    </a>\n                </li>\n            </ul>\n            <ul ng-class="{\'vrm--inactive\' : currentMenu != \'settings\', \'vrm--active\' : currentMenu == \'settings\'}" class="vrm-nav__items">\n                <li class="vrm-nav__items__item vrm-nav__back"><a class="vrm-nav__items__item__link" ng-click="openMenu(\'installation\', false, \'right\')"><span class="sg-vrm-icon_48_arrow-left-16px"></span> <span data-i18n="nav.back">Back</span></a></li>\n                <li class="vrm-nav__items__item" ng-class="{\'vrm--active\': $state.includes(\'base.installation.settings.general\', {id: currentInstallation.id})}">\n                    <a class="vrm-nav__items__item__link" ng-show="currentInstallation.view_permissions.update_settings" ui-sref="base.installation.settings.general({id: currentInstallation.id})">\n                        <span class="sg-vrm-icon_45_settings-16px"></span><span data-i18n="nav.general">General</span>\n                    </a>\n                </li>\n                <li ng-show="currentInstallation.view_permissions.update_settings" class="vrm-nav__items__item" ng-class="{\'vrm--active\': $state.includes(\'base.installation.settings.tags\', {id: currentInstallation.id})}">\n                    <a class="vrm-nav__items__item__link" ui-sref="base.installation.settings.tags({id: currentInstallation.id})">\n                        <span class="sg-vrm-icon_41_tags-16px"></span><span data-i18n="nav.tags">Tags</span>\n                    </a>\n                </li>\n                <li ng-show="currentInstallation.view_permissions.update_settings" class="vrm-nav__items__item" ng-class="{\'vrm--active\': $state.includes(\'base.installation.settings.location\', {id: currentInstallation.id})}">\n                    <a class="vrm-nav__items__item__link" ui-sref="base.installation.settings.location({id: currentInstallation.id})">\n                        <span class="sg-vrm-icon_26_globe-16px"></span><span data-i18n="nav.set_location">Set location</span>\n                    </a>\n                </li>\n                <li ng-show="currentInstallation.view_permissions.update_settings" class="vrm-nav__items__item" ng-class="{\'vrm--active\': $state.includes(\'base.installation.settings.geofence\', {id: currentInstallation.id})}">\n                    <a class="vrm-nav__items__item__link" ui-sref="base.installation.settings.geofence({id: currentInstallation.id})">\n                        <span class="sg-vrm-icon_27_geofence-16px"></span><span data-i18n="nav.set_geofence">Set geofence</span>\n                    </a>\n                </li>\n                <li class="vrm-nav__items__item" ng-class="{\'vrm--active\': $state.includes(\'base.installation.settings.users\', {id: currentInstallation.id})}">\n                    <a class="vrm-nav__items__item__link" ui-sref="base.installation.settings.users({id: currentInstallation.id})">\n                        <span class="sg-vrm-icon_29_profile-16px"></span><span data-i18n="nav.users">Users</span>\n                    </a>\n                </li>\n                <li class="vrm-nav__items__item" ng-class="{\'vrm--active\': $state.includes(\'base.installation.settings.alarms\', {id: currentInstallation.id})}">\n                    <a class="vrm-nav__items__item__link" ui-sref="base.installation.settings.alarms({id: currentInstallation.id})">\n                        <span class="sg-vrm-icon_11_notification-32px"></span><span data-i18n="nav.alarm_rules">Alarm rules</span>\n                    </a>\n                </li>\n                \x3c!-- Moved to installation overview --\x3e\n                \x3c!-- <li ng-show="currentInstallation.view_permissions.update_settings &&\n                                                currentInstallation.view_permissions.mqtt_rpc &&\n                                                currentInstallation.view_permissions.twoway &&\n                                                currentInstallation.view_permissions.vebus &&\n                                                mqttEnabled" class="vrm-nav__items__item">\n                    <a class="vrm-nav__items__item__link" ui-sref="base.installation.settings.remote-configuration({id: currentInstallation.id})">\n                        <span class="sg-vrm-icon_43_filter-16px"></span>\n                        <span data-i18n="nav.remote-configuration"></span>\n                    </a>\n                </li> --\x3e\n                \x3c!-- <li ng-show="currentInstallation.view_permissions.update_settings &&\n                                                currentInstallation.view_permissions.mqtt_rpc &&\n                                                currentInstallation.view_permissions.twoway &&\n                                                mqttEnabled" class="vrm-nav__items__item">\n                    <a class="vrm-nav__items__item__link" ui-sref="base.installation.settings.firmware-update({id: currentInstallation.id})">\n                        <span class="sg-vrm-icon_97_updatefirmware_16px"></span>\n                        <span data-i18n="nav.firmware-update"></span>\n                    </a>\n                </li> --\x3e\n            </ul>\n            <ul ng-class="{\'vrm--inactive\' : currentMenu != \'profile\', \'vrm--active\' : currentMenu == \'profile\'}" class="vrm-nav__items">\n                <li class="vrm-nav__items__item vrm-nav__back"><a class="vrm-nav__items__item__link" ng-click="openMenu(\'root\', false, \'right\')"><span class="sg-vrm-icon_48_arrow-left-16px"></span> <span data-i18n="nav.back">Back</span></a></li>\n                <li class="vrm-nav__items__item" ng-class="{\'vrm--active\': $state.includes(\'base.profile.settings\')}">\n                    <a class="vrm-nav__items__item__link" href="#" ui-sref="base.profile.settings">\n                        <span class="sg-vrm-icon_07_profile-32px"></span><span data-i18n="nav.profile">Profile</span>\n                    </a>\n                </li>\n                <li class="vrm-nav__items__item" ng-class="{\'vrm--active\': $state.includes(\'base.profile.twofactor\')}">\n                    <a class="vrm-nav__items__item__link" href="#" ui-sref="base.profile.twofactor">\n                        <span class="sg-vrm-icon_92_two-step-authentication-16px"></span><span data-i18n="nav.two_step_verification">2-step verification</span>\n                    </a>\n                </li>\n                <li class="vrm-nav__items__item" ng-class="{\'vrm--active\': $state.includes(\'base.profile.dealer\')}">\n                    <a class="vrm-nav__items__item__link" href="#" ui-sref="base.profile.dealer">\n                        <span class="sg-vrm-icon_85_star-16px"></span><span data-i18n="nav.dealer">Dealer</span>\n                    </a>\n                </li>\n            </ul>\n            <ul ng-class="{\'vrm--inactive\' : currentMenu != \'admin\', \'vrm--active\' : currentMenu == \'admin\'}" class="vrm-nav__items">\n                <li class="vrm-nav__items__item vrm-nav__back"><a class="vrm-nav__items__item__link" ng-click="openMenu(\'root\', false, \'right\')"><span class="sg-vrm-icon_48_arrow-left-16px"></span> <span data-i18n="nav.back">Back</span></a></li>\n                <li class="vrm-nav__items__item" ng-class="{\'vrm--active\': $state.includes(\'base.admin.users\')}">\n                    <a class="vrm-nav__items__item__link" ui-sref="base.admin.users">\n                        <span class="sg-vrm-icon_29_profile-16px"></span><span data-i18n="nav.users">Users</span>\n                    </a>\n                </li>\n                <li class="vrm-nav__items__item" ng-class="{\'vrm--active\': $state.includes(\'base.admin.dealers\')}">\n                    <a class="vrm-nav__items__item__link" ui-sref="base.admin.dealers">\n                        <span class="sg-vrm-icon_08_profile-photo-32px"></span><span data-i18n="nav.dealers">Dealers</span>\n                    </a>\n                </li>\n                <li class="vrm-nav__items__item" ng-class="{\'vrm--active\': $state.includes(\'base.admin.installations\')}">\n                    <a class="vrm-nav__items__item__link" ui-sref="base.admin.installations">\n                        <span class="sg-vrm-icon_91_pointer-my-16px"></span><span data-i18n="nav.installations">Installations</span>\n                    </a>\n                </li>\n                <li class="vrm-nav__items__item" ng-class="{\'vrm--active\': $state.includes(\'base.admin.ccgx\')}">\n                    <a class="vrm-nav__items__item__link" ui-sref="base.admin.ccgx">\n                        <span class="sg-vrm-icon_04_clock-32px"></span><span data-i18n="nav.ccgx">CCGX</span>\n                    </a>\n                </li>\n                <li class="vrm-nav__items__item" ng-class="{\'vrm--active\': $state.includes(\'base.admin.devices\')}">\n                    <a class="vrm-nav__items__item__link" ui-sref="base.admin.devices">\n                        <span class="sg-vrm-icon_40_search-16px"></span>\n                        <span data-i18n="nav.devices">Device search</span>\n                    </a>\n                </li>\n                <li class="vrm-nav__items__item" ng-class="{\'vrm--active\': $state.includes(\'base.admin.attributes\')}">\n                    <a class="vrm-nav__items__item__link" ui-sref="base.admin.attributes">\n                        <span class="sg-vrm-icon_61_info-round-16px"></span>\n                        <span data-i18n="nav.attributes">Attributes</span>\n                    </a>\n                </li>\n            </ul>\n            <ul ng-class="{\'vrm--inactive\' : currentMenu != \'root\', \'vrm--active\' : currentMenu == \'root\'}" class="vrm-nav__items">\n                <li ng-show="installations.length !== 1" ng-click="openMenu(\'installations\')" class="vrm-nav__items__item">\n                    <a class="vrm-nav__items__item__link"><span class="sg-vrm-icon_87_installations-16px"></span> <span data-i18n="nav.installations">Installations</span></a>\n                    <a class="vrm-nav__items__item__open"><span class="sg-vrm-icon_88_plus_12px"></span></a>\n                </li>\n                <li ng-if="installations.length === 1" class="vrm-nav__items__item vrm-nav__installation" ng-class="{\'vrm--has-warning\': item.alarm}" ng-repeat="item in installations | navInstallationFilter : searchInstallation track by item.id" ui-sref="base.installation.dashboard({id: item.id})" ng-click="openMenu(\'installation\', item, undefined, true)">\n\n                    <a class="vrm-nav__items__item__link">\n                        <span ng-class="item.device_icon | vrmDeviceIcon" class="vrm-tooltip--arrow-left vrm-tooltip--light" vrm-tooltip="{{\'core.running_on_\'+item.device_icon | i18n}}"></span>\n                        {{::item.name}}\n                    </a>\n                    <a class="vrm-nav__items__item__open"><span class="sg-vrm-icon_88_plus_12px"></span></a>\n                </li>\n                <li ng-if="installations.length === 1"  class="vrm-nav__items__item" ng-show="$root.userState.isShare || $root.user != null" ng-class="{\'vrm--active\': $state.includes(\'base.installation-overview\')}">\n                    <a class="vrm-nav__items__item__link" ui-sref="base.installation-overview"><span class="sg-vrm-icon_05_pointer-my-32px"></span><span data-i18n="nav.installation_overview">All installations</span></a>\n                </li>\n                <li class="vrm-nav__items__item" ng-hide="$root.userState.isDemo || $root.userState.isShare" ng-class="{\'vrm--active\': $state.includes(\'base.add-installation\')}"><a class="vrm-nav__items__item__link" ui-sref="base.add-installation"><span class="sg-vrm-icon_58_plus-round-16px"></span> <span data-i18n="addinstallation.pageTitle">Add Installation</span></a></li>\n                <li class="vrm-nav__items__item" ng-hide="$root.userState.isDemo || $root.userState.isShare" ng-click="openMenu(\'profile\')">\n                    <a class="vrm-nav__items__item__link"><span class="sg-vrm-icon_29_profile-16px"></span> <span data-i18n="nav.profile">Profile</span></a>\n                    <a class="vrm-nav__items__item__open"><span class="sg-vrm-icon_88_plus_12px"></span></a>\n                </li>\n                <li class="vrm-nav__items__item" ng-hide="$root.userState.isDemo || $root.userState.isShare"><a class="vrm-nav__items__item__link" ng-click="openCCGXUploadModal()"><span class="sg-vrm-icon_86_upload-16px"></span> <span data-i18n="nav.upload_ccgx">Upload CCGX</span></a></li>\n                <li class="vrm-nav__items__item" ng-show="$root.userState.isAdmin" ng-click="openMenu(\'admin\')">\n                    <a class="vrm-nav__items__item__link"><span class="sg-vrm-icon_85_star-16px"></span> <span data-i18n="nav.admin">Admin</span></a>\n                    <a class="vrm-nav__items__item__open"><span class="sg-vrm-icon_88_plus_12px"></span></a>\n                </li>\n                <li class="vrm-nav__items__item"><a class="vrm-nav__items__item__link" target="_blank"  href="https://www.victronenergy.com/live/vrm_portal:start"><span class="sg-vrm-icon_30_faq-16px"></span> <span data-i18n="nav.faq">FAQ</span></a></li>\n                <li class="vrm-nav__items__item" ng-if="lang"><a class="vrm-nav__items__item__link" ng-click="openLanguageModal()"><span class="sg-vrm-icon_31_flag-16px"></span> <span data-i18n="language.{{lang}}">Language</span></a></li>\n                \x3c!--<li class="vrm-nav__items__item"><a ui-sref="base.access-tokens" class="vrm-nav__items__item__link"><span class="sg-vrm-icon_29_profile-16px"></span><span data-i18n="nav.access_tokens">Access tokens</span></a>--\x3e\n                </li>\n            </ul>\n            <div class="clear"></div>\n        </div>\n    </div>\n    <div class="vrm-nav__button">\n        <a ui-sref="logout" ng-hide="$root.userState.isShare || isImpersonatedUser" class="sg-btn sg-site sg-element"><span class="sg-vrm-icon_33_logout-16px"></span> <span data-i18n="nav.log_out">Log out</span></a>\n        <a ui-sref="logout" ng-show="$root.userState.isShare" class="sg-btn sg-site sg-element"><span class="sg-vrm-icon_33_logout-16px"></span> <span data-i18n="login.login">Log in</span></a>\n        <a ui-sref="logout" ng-show="!$root.userState.isShare && isImpersonatedUser" class="sg-btn sg-site sg-element"><span class="sg-vrm-icon_33_logout-16px"></span> <span data-i18n="nav.return_to_admin">Return to admin</span></a>\n    </div>\n</div>\n'),$templateCache.put("vrm-components/state-widget/state-widget.template.html",'<div class="vrm-widget" in-view="inview = $inview" in-view-options="{ throttle: 200 }">\n    <div class="vrm-widget__header vrm-widget__header--oneline">\n        <div class="vrm-widget__header__title">{{title}} <span ng-if="instance && instance != 0">[{{instance}}]</span></div>\n    </div>\n    <div class="vrm-widget__items vrm-widget__items--graph">\n        <highchart config="chart" ng-if="chart"></highchart>\n    </div>\n    <div class="vrm-widget__tabs" ng-if="meta.length > 1">\n        <a ng-repeat="tab in meta" ng-click="setCurrent(tab)" ng-class="{\'vrm-widget__tab--active\': tab === current}" class="vrm-widget__tab">{{tab.name}}</a>\n    </div>\n</div>'),$templateCache.put("vrm-components/summary-graph-widget/summary-graph-widget.template.html",'<div class="vrm-widget" in-view="inview = $inview" in-view-options="{ throttle: 200 }">\n    <div class="vrm-widget__header vrm-widget__header--twolines">\n        <div class="vrm-widget__header__title">{{title}} <span ng-if="instance && instance != 0">[{{instance}}]</span></div>\n        <div class="vrm-widget__header__subtitle">\n           <span ng-repeat="meta in metas" ng-click="chart.series[$index].visible = !chart.series[$index].visible" ng-class="{\'vrm-widget__item--disabled\': !chart.series[$index].visible, \'vrm-widget__item--blue\': $index == 0, \'vrm-widget__item--orange\': $index == 1, \'vrm-widget__item--black\': $index == 2, \'vrm-widget__item--green\' : $index == 3}">\n               <i class="sg-vrm-icon_84_graph-16px"></i> {{::meta.description}} {{::meta.formatWithUnit ? "(" + (meta.formatWithUnit.replace(meta.formatValueOnly, \'\').replace(\'%%\',\'%\').replace(\'%.0F\',\'\').trim()) + ")" : \'\'}}\n           </span>\n        </div>\n    </div>\n    <div class="vrm-widget__items vrm-widget__items--graph">\n        <highchart config="chart" ng-if="chart"></highchart>\n    </div>\n    <div class="vrm-widget__items__dynamic">\n        <div class="vrm-widget__items__item vrm-widget__items__item__small"\n              ng-if="data.records"  ng-repeat="(itemName, item) in widgetConfig.extended" ng-hide="typeOf(item) == \'function\' && item(this).length < 1" >\n            <div data-i18n="{{itemName}}"></div>\n            <table class="vrm-minimal-table">\n                <tbody ng-switch="typeOf(item)">\n                <tr ng-switch-when="object" ng-repeat="row in item">\n                    <td ng-class="::isCurrent(data.records.data[field].formatWithUnit) ? \'sg-color-blue\' : \'sg-color-orange\'" ng-repeat="field in row">\n                        {{data.records.data[field].valueFormattedWithUnit}}\n                    </td>\n                </tr>\n                <tr ng-switch-when="function">\n                    <td ng-repeat="field in item(this) track by $index" ng-class="::isCurrent(field) ? \'sg-color-blue\' : \'sg-color-orange\'">\n                        {{field}}\n                    </td>\n                </tr>\n                </tbody>\n            </table>\n        </div>\n        <div class="vrm-widget__items__item" ng-class="{\'vrm-widget__items__item__small\': filteredItems.length > 2, \'vrm-widget__items__item__medium\': filteredItems.length <= 2}"\n            ng-repeat="item in data.records.data | notExtendedFilter:extended | validSummaryDataFilter | orderBy:sortAttributes as filteredItems">\n            <div>{{item.dataAttributeName}}</div>\n            <table class="vrm-minimal-table">\n                <tbody>\n                <tr>\n                    <td ng-class="::isCurrent(item.formatWithUnit) ? \'sg-color-blue\' : \'sg-color-orange\'">\n                        {{item.valueFormattedWithUnit}}\n                        <span ng-if="widgetConfig.subdata[item.code]">({{data.records.data[widgetConfig.subdata[item.code]].dataAttributeName}}: {{data.records.data[widgetConfig.subdata[item.code]].valueFormattedWithUnit}})</span>\n                    </td>\n                </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n    <div class="vrm-widget__tabs" ng-if="meta.length > 1">\n        <a ng-repeat="tab in meta" ng-click="setCurrent(tab)" ng-class="{\'vrm-widget__tab--active\': tab === current}" class="vrm-widget__tab">{{tab.name}}</a>\n    </div>\n</div>\n'),$templateCache.put("vrm-components/summary-widget/summary-widget.template.html",'<div class="vrm-widget">\n    <div class="vrm-widget__header" ng-class="{\'sg-color-orange\': data.records.hasOldData, \'vrm-widget__header--twolines\': data.records.hasOldData || widgetConfig.status}">\n        <div class="vrm-widget__header__title">{{title}} <span ng-if="instance && instance != 0">[{{instance}}]</span></div>\n        <div class="vrm-widget__header__subtitle" ng-if="data.records.data.hasOldData">\n            <span data-i18n="advanced.old_data_go_to">Old Data! go to</span> <a class="sg-color-orange" ui-sref="base.installation.overview" data-i18n="advanced.system_overview">system overview</a>\n        </div>\n        <div class="vrm-widget__header__subtitle" ng-if="!data.records.data.hasOldData && widgetConfig.status">\n            {{data.records.data[widgetConfig.status].valueFormattedWithUnit}}\n        </div>\n    </div>\n    <div class="vrm-widget__items">\n        <div class="vrm-widget__items__item" ng-if="data.records"  ng-repeat="(itemName, item) in widgetConfig.extended" ng-hide="typeOf(item) == \'function\' && item(this).length < 1" >\n            <div data-i18n="{{itemName}}"></div>\n            <table class="vrm-minimal-table">\n                <tbody ng-switch="typeOf(item)">\n                <tr ng-switch-when="object" ng-repeat="row in item">\n                    <td ng-class="::isCurrent(data.records.data[field].formatWithUnit) ? \'sg-color-orange\' : \'sg-color-blue\'" ng-repeat="field in row">\n                        {{data.records.data[field].valueFormattedWithUnit}}\n                    </td>\n                </tr>\n                <tr ng-switch-when="function">\n                    <td ng-repeat="field in item(this) track by $index" ng-class="::isCurrent(field) ? \'sg-color-orange\' : \'sg-color-blue\'">\n                        {{field}}\n                    </td>\n                </tr>\n                </tbody>\n            </table>\n        </div>\n        <div class="vrm-widget__items__item" ng-repeat="item in data.records.data | notExtendedFilter:extended | validSummaryDataFilter | orderBy:sortAttributes">\n            <div>{{item.dataAttributeName}}</div>\n            <table class="vrm-minimal-table">\n                <tbody>\n                <tr>\n                    <td ng-class="::isCurrent(item.formatWithUnit) ? \'sg-color-orange\' : \'sg-color-blue\'">\n                        {{item.valueFormattedWithUnit}}\n                        <span ng-if="typeOf(widgetConfig.subdata[item.code]) == \'function\' && widgetConfig.subdata[item.code](this)">\n                            ({{data.records.data[widgetConfig.subdata[item.code](this)].dataAttributeName}}: {{data.records.data[widgetConfig.subdata[item.code](this)].valueFormattedWithUnit}})\n                        </span>\n                        <span ng-if="typeOf(widgetConfig.subdata[item.code]) == \'string\' && widgetConfig.subdata[item.code]">\n                            ({{data.records.data[widgetConfig.subdata[item.code]].dataAttributeName}}: {{data.records.data[widgetConfig.subdata[item.code]].valueFormattedWithUnit}})\n                        </span>\n                    </td>\n                </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>\n'),$templateCache.put("vrm-components/tags/tags.template.html",'<div class="vrm-tags">\n    <span class="vrm-tags__tag" ng-repeat="tag in tags">\n        <label for="{{tag.idTag}}">\n            <input id="{{tag.idTag}}" type="checkbox" ng-model="tag.selected" ng-true-value="true" ng-false-value="false" />\n            <span class="vrm-tags__tag__button" ng-bind="tag.label"></span>\n        </label>\n    </span>\n    <span class="vrm-tags__tag" ng-show="tags.length == 0">\n        <label>{{\'installationoverview.no_tags\' | i18n}}</label>\n    </span>\n</div>'),$templateCache.put("vrm-components/tags-list/tags-list.template.html",'<div class="vrm-tags-list" ng-show="tags">\n        <span>\n            <strong>{{\'general.tags\' | i18n}}:</strong>\n        </span>\n        <span class="vrm-tags-list__tag" ng-repeat="tag in tags" ng-class="{\'vrm-tags-list__tag--red\': containsAlarm(tag), \'vrm-tags-list__tag--orange\': containsWarning(tag)}">{{tag.name}}</span>\n</div>\n'),$templateCache.put("vrm-components/toggles/toggle-button.template.html",'<div class="sg-custom-check-and-radio sg-btn-toggle-icon">\n    <label>\n        <input type="checkbox" ng-model="toggle" />\n        <div class="sg-btn {{customClass}}" ng-class="{\'sg-btn-icon\': iconClass}">\n            <span class="sg-btn-toggle-icon-icon"  ng-class="iconClass"></span>\n            <span ng-transclude></span>\n        </div>\n    </label>\n</div>'),$templateCache.put("vrm-components/toggles/toggle-checkmark.template.html",'<div class="sg-custom-toggle sg-checkmark">\n    <label>\n        <input type="checkbox" ng-model="toggle" />\n        <div class="sg-alternative-display">\n            <div class="sg-vrm-icon_54_check-16px"></div>\n        </div>\n        <div class="sg-caption-container">\n            <div class="sg-caption" ng-transclude></div>\n        </div>\n    </label>\n</div>\n'),$templateCache.put("vrm-components/toggles/toggle-custom.template.html",'<div class="sg-custom-toggle sg-slide-colors" ng-class="{\'sg-disabled\': disabled}">\n    <label for="toggle_{{$id}}">\n        <input type="checkbox" id="toggle_{{$id}}" ng-disabled="disabled" ng-model="toggle">\n        <div class="sg-alternative-display">\n            <div class="sg-on"></div>\n            <div class="sg-off"></div>\n            <div class="sg-knob">\n                <div class="sg-dot"></div>\n            </div>\n        </div>\n        <div class="sg-caption-container">\n            <div class="sg-caption">\n                <span class="sg-on">{{on}}</span>\n                <span class="sg-off">{{off}}</span>\n            </div>\n        </div>\n    </label>\n</div>'),$templateCache.put("vrm-components/tooltip/tooltip.template.html","<div class=\"vrm-tooltip\" ng-class=\"{'vrm-active': tooltipOpen }\">\n    {{tooltipContent}}\n</div>\n<div class='vrm-tooltip__arrow' data-tooltip-arrow-id=\"vrm-demo-1\">\n    <div class='vrm-tooltip__arrow-inner'></div>\n</div>\n<ng-transclude></ng-transclude>\n"),$templateCache.put("vrm-components/veconfigure-widget/veconfigure-widget.template.html",'<div class="vrm-widget vrm-widget--download vrm-widget--gps">\n    <div class="vrm-widget__header vrm-widget__header--oneline">\n        <div class="vrm-widget__header__title" data-i18n="advanced.remote_veconfigure">Remote VEConfigure</div>\n    </div>\n    <div class="vrm-widget__items">\n        <div class="vrm-widget__items__item" ng-repeat="file in files" ng-click="select(file)" ng-show="selected == null || selected == file">\n            <div>{{file.name}}</div>\n            <div class="sg-color-blue">{{file.timestamp * 1000 | date:\'yyyy-MM-dd HH:mm:ss\':installation.timezone_offset_textual}}</div>\n        </div>\n        <div class="vrm-widget__items__filepopup" ng-class="{\'active\': selected != null}">\n            <div class="close-wrapper clearfix">\n                <div class="vrm-widget__items__filepopup__close" ng-click="close()"><span class="sg-vrm-icon_60_cross-round-16px"></span> <span data-i18n="advanced.close">close</span></div>\n            </div>\n            <p data-i18n="advanced.ve_description">Here you can download stored VSC files. You can also replace existing ones.</p>\n            <div class="vrm-widget__buttons">\n                <div class="row">\n                    <div class="col-md-6">\n                        <div class="vrm-widget__button sg-btn sg-element sg-site" data-i18n="advanced.download" ng-click="download(selected)">Download</div>\n                    </div>\n                    <vrm-upload class="col-md-6" upload-callback="replace">\n                        <div class="vrm-widget__button sg-btn sg-element sg-site vrm-upload--button" data-i18n="advanced.replace_file">Replace file</div>\n                    </vrm-upload>\n                </div>\n            </div>\n        </div>\n        <div class="vrm-widget__items__item" ng-if="files.length == 0">\n            <div data-i18n="advanced.no_ve_files">No configuration files found</div>\n        </div>\n    </div>\n    <div class="vrm-widget__footer">\n        <a href="http://www.victronenergy.com/upload/documents/Manual%20-%20Remote%20VEConfigure%20-%20rev%2001%20-%20EN.pdf"><span class="sg-vrm-icon_42_download-16px"></span>{{\'advanced.download_veconfigure_manual\' | i18n}}</a>\n    </div>\n</div>'),$templateCache.put("vrm-components/modal/access-tokens/access-tokens-modal.template.html",'<div class="vrm-modal mfp-hide mfp-with-anim">\n    <div class="vrm-modal__content">\n        <div class="vrm-modal__title-icon"></div>\n        <div class="vrm-modal__title" data-i18n="accesstokens.access_token_modal_title">Access token generated successfully</div>\n        <div class="vrm-modal__text" data-i18n="accesstokens.access_token_modal_copy">Please save this token carefully. After you close this window, there is no way to retrieve it.</div>\n\n        <div class="vrm-code">{{token}}</div>\n    </div>\n</div>\n'),$templateCache.put("vrm-components/modal/carousel/carousel.template.html",'<div id="vrm-modal--carousel" class="vrm-modal vrm-modal--carousel mfp-hide mfp-with-anim">\n\t<div class="vrm-carousel">\n\t\t<div class="vrm-carousel__items-wrap">\n\t\t\t<div ng-if="images.length == 0" class="vrm-modal__text">\n\t\t\t\t{{\'photos.no_photos\' | i18n}}<br /><br />\n\t\t\t</div>\n\t\t\t<div class="vrm-carousel__items-wrap__items">\n\t\t\t\t<img ng-repeat="(index, image) in initialImages" ng-class="{\'ng-hide\': index > 0}" ng-src="{{image.url}}"/>\n\t\t\t</div>\n\t\t\t<div class="vrm-carousel__items-wrap__control vrm-carousel__items-wrap__control--previous"></div>\n\t\t\t<div class="vrm-carousel__items-wrap__control vrm-carousel__items-wrap__control--next"></div>\n\t\t</div>\n\t\t<div class="vrm-carousel__legend">\n\t\t\t<div class="container-fluid">\n\t\t\t\t<div class="row">\n\t\t\t\t\t<div class="col-xs-12 col-sm-6">\n\t\t\t\t\t\t<div class="vrm-carousel__legend__info">\n\t\t\t\t\t\t\t<span class="vrm-carousel__legend__info__number">{{images.length > 0 ? index + 1 : 0}}/{{images.length}}</span>\n\t\t\t\t\t\t\t<span class="vrm-carousel__legend__info__name">{{images[index].imageName}}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="col-xs-12 col-sm-6" ng-hide="$root.userState.isShare || $root.userState.isDemo" >\n\t\t\t\t\t\t<div class="vrm-carousel__legend__controls">\n                                    <span class="vrm-carousel__legend__controls__control" ng-click="addPhoto()">\n                                        <span class="sg-vrm-icon_63_add-photo"></span>\n                                        <span data-i18n="photos.add_photo">Add photo</span>\n                                    </span>\n\t\t\t\t\t\t\t<span ng-show="images.length > 0" class="vrm-carousel__legend__controls__control vrm-carousel__legend__controls__control--remove" ng-click="removePhoto()">\n                                        <span class="sg-vrm-icon_62_remove-photo"></span>\n                                        <span data-i18n="photos.remove_photo">Remove photo</span>\n                                    </span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>'),$templateCache.put("vrm-components/modal/common-modals/error.template.html",'<div id="vrm-modal" class="vrm-modal--alert vrm-modal mfp-hide mfp-with-anim">\n\t<div class="vrm-modal__content">\n\t\t<div class="vrm-modal__title-icon sg-vrm-icon_12_alarm-32px"></div>\n\t\t<div data-i18n="common.error" class="vrm-modal__title">Error</div>\n        <div ng-if="message" class="vrm-modal__text" ng-bind-html="message | i18n"></div>\n        <div ng-if="errorMessage" class="vrm-modal__text"><em>Error Message: {{errorMessage}}</em></div>\n        <div ng-if="errorCode" class="vrm-modal__text"><em>Error Code: {{errorCode}}</em></div>\n\t</div>\n</div>\n'),$templateCache.put("vrm-components/modal/common-modals/success.template.html",'<div id="vrm-modal" class="vrm-modal--alert vrm-modal mfp-hide mfp-with-anim">\n\t<div class="vrm-modal__content">\n\t\t<div class="vrm-modal__title-icon sg-vrm-icon_10_dealer-32px"></div>\n\t\t<div data-i18n="common.success" class="vrm-modal__title">Success</div>\n\t\t<div ng-if="message" class="vrm-modal__text" ng-bind-html="message | i18n"></div>\n\t</div>\n</div>\n'),$templateCache.put("vrm-components/modal/configuring/configuring.template.html",'<div id="vrm-modal" class="vrm-modal--alert vrm-modal mfp-hide mfp-with-anim">\n\t<div class="vrm-modal__content">\n\t\t<div class="vrm-modal__title-icon sg-vrm-icon_43_filter-16px"></div>\n\t\t<div data-i18n="remote-configuration.configuring-title" class="vrm-modal__title">Configuring...</div>\n\t\t\x3c!-- <div class="vrm-modal__text" ng-bind-html="\'remote-configuration.configuring-content\' | i18n"></div> --\x3e\n        \x3c!-- <div class="vrm-modal__text">{{\'remote-configuration.progress\' | i18n}}: {{progress | number:0}}%</div>\n        <progress class="vrm-progress" max="100" value="{{progress}}"></progress> --\x3e\n        <div class="vrm-modal__text">{{\'remote-configuration.status\' | i18n}}: {{status}}</div>\n\t</div>\n</div>\n'),$templateCache.put("vrm-components/modal/confirm/confirm-modal.template.html",'<div class="vrm-modal vrm-modal--alert mfp-hide mfp-with-anim">\n    <div class="vrm-modal__content">\n        <div class="vrm-modal__title-icon sg-vrm-icon_55_cross-16px"></div>\n        <div class="vrm-modal__title" data-i18n="common.{{action}}_confirm_title"></div>\n        <div class="vrm-modal__text" data-i18n="common.{{action}}_confirm_message"></div>\n        <div class="vrm-modal__main-button vrm-modal__close-button">\n            <a href ng-click="callback(true)" class="sg-btn sg-orange ">{{\'common.yes\' | i18n}}</a>\n            <a href ng-click="callback(false)" class="sg-btn sg-blue ">{{\'common.no\' | i18n}}</a>\n        </div>\n    </div>\n</div>\n'),$templateCache.put("vrm-components/modal/confirm-field/confirm-field-modal.template.html",'<div class="vrm-modal vrm-modal--alert mfp-hide mfp-with-anim">\n    <div class="vrm-modal__content">\n        <div class="vrm-modal__title-icon sg-vrm-icon_55_cross-16px"></div>\n        <div class="vrm-modal__title" data-i18n="common.{{action}}_confirm_title"></div>\n        <div class="vrm-modal__text" data-i18n="common.{{action}}_confirm_message"></div>\n        <br />\n        <form name="confirmForm" ng-submit="confirm()">\n            <input class="sg-element" type="text" ng-required="true" ng-model="$parent.inputValue" name="confirmation-field" vrm-validation>\n            <div class="vrm-modal__main-button vrm-modal__close-button">\n                <button ng-disabled="inputValue.toLowerCase().trim() !== expected" class="sg-btn sg-blue sg-element" ng-class="{\'sg-disabled\': inputValue.toLowerCase().trim() !== expected}" type="submit">{{\'common.confirm\' | i18n}}</button>\n            </div>\n        </form>\n    </div>\n</div>\n'),$templateCache.put("vrm-components/modal/delete/delete-modal.template.html",'<div class="vrm-modal vrm-modal--alert mfp-hide mfp-with-anim">\n    <div class="vrm-modal__content">\n        <div class="vrm-modal__title-icon sg-vrm-icon_55_cross-16px"></div>\n        <div ng-if="!object" class="vrm-modal__title" data-i18n="common.{{type}}_delete_default_title"></div>\n        <div ng-if="object" class="vrm-modal__title" data-i18n="common.{{type}}_delete_title" ng-attr-data-object="{{object}}"></div>\n        <div class="vrm-modal__text" data-i18n="common.{{type}}_delete_message"></div>\n        <div class="vrm-modal__main-button vrm-modal__close-button">\n            <a href ng-click="callback(false)" class="sg-btn sg-alt" data-i18n="common.cancel"></a>\n            <a href ng-click="callback(true)" class="sg-btn sg-red" data-i18n="common.{{type}}_delete_action"></a>\n        </div>\n    </div>\n</div>\n'),$templateCache.put("vrm-components/modal/download/download.template.html",'<div id="vrm-modal" class="vrm-modal--alert vrm-modal mfp-hide mfp-with-anim">\n\t<div class="vrm-modal__content">\n\t\t<div class="vrm-modal__title-icon sg-vrm-icon_42_download-16px"></div>\n\t\t<div data-i18n="advanced.preparing_download_title" class="vrm-modal__title">Downloading...</div>\n\t\t<div ng-if="message" class="vrm-modal__text" ng-bind-html="message | i18n"></div>\n\t</div>\n</div>\n'),$templateCache.put("vrm-components/modal/download-configuration/download-configuration.template.html",'<div id="vrm-modal" class="vrm-modal--alert vrm-modal mfp-hide mfp-with-anim">\n\t<div class="vrm-modal__content">\n\t\t<div class="vrm-modal__title-icon sg-vrm-icon_42_download-16px"></div>\n\t\t<div data-i18n="advanced.preparing_download_title" class="vrm-modal__title">Downloading...</div>\n        \x3c!-- <div class="vrm-modal__text">{{\'remote-configuration.progress\' | i18n}}: {{progress | number:0}}%</div> --\x3e\n        \x3c!-- <progress class="vrm-progress" max="100" value="{{progress}}"></progress> --\x3e\n        <div class="vrm-modal__text">{{\'remote-configuration.status\' | i18n}}: {{status}}</div>\n\t</div>\n</div>\n'),$templateCache.put("vrm-components/modal/download-production-report/download-production-report.template.html",'<div id="vrm-modal--download-production-report" class="vrm-modal vrm-modal--language-selection mfp-hide mfp-with-anim">\n    <div>\n        <div class="vrm-modal__header--border">\n            <div class="vrm-modal__title" data-i18n="installationoverview.download_production_report"></div>\n        </div>\n        <div class="vrm-modal__content reporting__modal">\n            <div class="vrm-form__fieldset">\n                <div class="row" ng-if="pickadata">\n                    <div class="col-xs-12 col-sm-5">\n                        <div class="vrm-form__fieldset-item">\n                            <div class="sg-textfield-label" data-i18n="installationoverview.dateRangeUtc">Date Range (UTC)</div>\n                            <input type="text" pick-a-date="picker.from" min-date="picker.fromMinDate" max-date="picker.fromMaxDate" pick-a-date-options="pickadata.dateOptions" class="picker__input picker__input--align_left" />\n                        </div>\n                    </div>\n                    <div class="col-sm-1 hidden-xs">\n                        <p class="p--line_height" data-i18n="installationoverview.till">till</p>\n                    </div>\n                    <div class="col-xs-12 col-sm-5">\n                        <div class="vrm-form__fieldset-item">\n                            <div class="sg-textfield-label"><span class="visible-xs" data-i18n="installationoverview.till">till</span> <span class="hidden-xs">&nbsp;</span></div>\n\n                            <input type="text" pick-a-date="picker.till" min-date="picker.tillMinDate" max-date="picker.tillMaxDate" pick-a-date-options="pickadata.dateOptions" class="picker__input picker__input--align_left" />\n                        </div>\n                    </div>\n                </div>\n\n                <div class="row">\n                    <div class="col-xs-11">\n                        <div class="vrm-form__fieldset-item">\n                            <div class="sg-textfield-label" data-i18n="installationoverview.select_month">Or select a month</div>\n\n                            <ui-select class="sg-element vrm-select" theme="select2" ng-model="selectedMonthObj.value" search-enabled="false" remove-selected="false" on-select="setMonth($item)">\n                                <ui-select-match data-placeholder="Select month">{{$select.selected.monthName}} {{$select.selected.year}} {{$select.selected.postString}}</ui-select-match>\n                                <ui-select-choices repeat="item in monthObjs track by $index">\n                                    {{item.monthName}} {{item.year}} {{item.postString}}\n                                </ui-select-choices>\n                            </ui-select>\n                        </div>\n                    </div>\n                </div>\n\n                <div class="row">\n                    <div class="col-xs-12">\n                        <div class="vrm-form__fieldset-item">\n                            <a href="" class="sg-btn sg-blue" ng-click="downloadReport()" data-i18n="installationoverview.download">Download .pdf</a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n'),$templateCache.put("vrm-components/modal/invite/invite.template.html",'<div id="vrm-modal--share" class="vrm-modal vrm-modal--share mfp-hide mfp-with-anim">\n    <div class="vrm-modal__header">\n        <div class="vrm-modal__title" data-i18n="invite.invite_user">Invite</div>\n    </div>\n    <div class="vrm-hr"></div>\n    <form class="vrm-modal__content" name="inviteForm" ng-submit="save()">\n        <div class="row vrm-modal--share__content__control-row">\n            <div class="col-xs-12" data-i18n="invite.name">Name:</div>\n        </div>\n        <div class="row vrm-modal--share__content__control-row">\n            <div class="col-xs-12">\n                <input type="text" class="sg-element" required ng-model="inviteModel.name" autocomplete="off" />\n            </div>\n        </div>\n        <div class="row vrm-modal--share__content__control-row">\n            <div class="col-xs-12" data-i18n="invite.email">Email:</div>\n        </div>\n        <div class="row vrm-modal--share__content__control-row">\n            <div class="col-xs-12">\n                <input type="email" class="sg-element" required ng-model="inviteModel.email" autocomplete="off" />\n            </div>\n        </div>\n        <div ng-show="installation.view_permissions.update_settings" class="row vrm-modal--share__content__control-row">\n            <div class="col-xxs-12 col-xs-9" data-i18n="invite.full_control">Grant full control:</div>\n            <div class="col-xxs-12 col-xs-3">\n                <vrm-toggle ng-model="inviteModel.fullControl"></vrm-toggle>\n            </div>\n        </div>\n        <div class="row vrm-modal--share__content__control-row">\n            <div class="col-xs-12" data-i18n="invite.personal_message">Personal message:</div>\n        </div>\n        <div class="row">\n            <div class="col-xs-12">\n                <textarea class="sg-element" ng-model="inviteModel.message" autocomplete="off" />\n            </div>\n        </div>\n        <div class="row vrm-modal--share__content__control-row">\n            <div class="col-xs-12">\n                <br />\n                <input type="submit" ng-value="\'common.send\' | i18n" class="sg-btn sg-green pull-right" ng-model="inviteModel.email" autocomplete="off" />\n            </div>\n        </div>\n    </form>\n</div>'),$templateCache.put("vrm-components/modal/lang/lang-selector.template.html",'<div id="vrm-modal--language-selection" class="vrm-modal vrm-modal--language-selection mfp-hide mfp-with-anim">\n    <div class="vrm-modal__header">\n        <div class="vrm-modal__title">Select your language</div>\n    </div>\n    <div class="vrm-hr"></div>\n    <div class="vrm-modal__content">\n        <div class="sg-custom-toggle sg-checkmark vrm-modal__language-toggle" ng-repeat="language in languages">\n            <label title="">\n                <input type="radio" name="vrm-select-language" ng-model="selector.lang" ng-value="language"/>\n                <div class="sg-alternative-display">\n                    <div class="sg-icon-check"></div>\n                </div>\n                <div class="sg-caption-container">\n                    <div class="sg-caption" data-i18n="language.{{language}}">Language</div>\n                </div>\n            </label>\n        </div>\n    </div>\n</div>'),$templateCache.put("vrm-components/modal/notifications/notification.template.html",'<div id="vrm-modal--alert--notification" ng-class="[\'vrm-modal--alert--\' + notification.type]" class="vrm-modal vrm-modal--alert mfp-hide mfp-with-anim">\n    <div class="vrm-modal__content">\n        <div class="vrm-modal__title-icon" ng-class="{\'sg-vrm-icon_11_notification-32px\': notification.type == \'notification\', \'sg-vrm-icon_12_alarm-32px\': notification.type == \'error\'}"></div>\n        <div class="vrm-modal__title">{{notification.title}}</div>\n        <div class="vrm-modal__text">{{notification.message}}</div>\n        <div class="vrm-modal__main-button vrm-modal__close-button">\n            <input type="button" class="sg-btn sg-site" value="{{\'common.ok\' | i18n}}" ng-click="close()">\n        </div>\n    </div>\n</div>\n'),$templateCache.put("vrm-components/modal/notifications/notifications.template.html",'<div class="vrm-notifications" ng-click="hideNotification()">\n    <div class="vrm-notifications__notification animate-repeat" ng-class="notificationClass(notification)"\n         ng-repeat="notification in notifications"  ng-click="close(notification)">\n        <button class="vrm-notifications__notification__close"><span class="sg-vrm-icon_60_cross-round-16px"></span></button>\n        <div class="vrm-notifications__notification__title">{{::notification.title}}</div>\n        <div class="vrm-notifications__notification__message" ng-bind-html="notification.message"></div>\n    </div>\n\n    <div class="vrm-notifications__notification animate-repeat vrm-notifications__notification--danger"\n         ng-if="!online">\n        <div class="vrm-notifications__notification__title">{{\'core.offline\' | i18n}}</div>\n        <div class="vrm-notifications__notification__message">{{\'core.offline_description\' | i18n}}</div>\n    </div>\n\n    <div ng-hide="!notificationShown" class="vrm-notifications__notification animate-repeat "\n         ng-class="\'vrm-notifications__notification--\' + messageType" ng-if="message">\n        <button class="vrm-notifications__notification__close" ng-click="hideNotification()"><span class="sg-vrm-icon_60_cross-round-16px"></span></button>\n        <div class="vrm-notifications__notification__title">{{messageTitle}}</div>\n        <div class="vrm-notifications__notification__message" ng-bind-html="message"></div>\n    </div>\n</div>'),$templateCache.put("vrm-components/modal/remote-console/remote-console.template.html",'<div id="vrm-modal--remote-console" class="vrm-modal vrm-modal--remote-console mfp-hide mfp-with-anim">\n    <div class="remote-console-status">\n        <div class="remote-console-status-content">\n            <div class="remote-console-login-icon alarm">\n                <span class="remote-console-control-icon sg-vrm-icon_12_alarm-32px" />\n            </div>\n            <div class="remote-console-login-icon notification">\n                <span class="remote-console-control-icon sg-vrm-icon_34_vnc-16px" />\n            </div>\n            <h2 class="remote-console-login-title" data-i18n="remoteconsole.title">Remote console</h2>\n            <div class="remote-console-status-text"></div>\n        </div>\n    </div>\n    <div class="remote-console-login">\n        <div class="remote-console-display-container">\n            <div class="remote-console-login-contents">\n                <div class="remote-console-login-icon">\n                    <span class="remote-console-control-icon sg-vrm-icon_09_two-step-authentication-32px"></span>\n                </div>\n                <h2 class="remote-console-login-title" data-i18n="remoteconsole.title">Remote console</h2>\n                <div class="remote-console-login-fields-container">\n                    <div class="remote-console-login-field-title">Password <span class="remote-console-login-field-title-asterisk">*</span></div>\n                    <div class="remote-console-login-fields">\n                        <input type="password" id="remote-console-password" autocomplete="off"><button id="remote-console-login" class="sg-btn sg-green" value="Button"><span class="sg-vrm-icon_82_enter-16px"></span></button>\n                        <div class="sg-custom-check-and-radio sg-custom-check">\n                            <label title="">\n                                <input type="checkbox" name="remote-console-password-remember" id="remote-console-password-remember">\n                                <span class="sg-caption" data-i18n="remoteconsole.login_save_password">Save password</span>\n                                <div class="sg-alternative-display">\n                                    <div class="sg-icon-check"></div>\n                                </div>\n                            </label>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class="remote-console-controls-container">\n            <div class="remote-console-controls-text">\n                <h3 class="remote-console-controls-title" data-i18n="remoteconsole.login_title">Forgot the password?</h3>\n                <div class="remote-console-controls-explanation" data-i18n="remoteconsole.login_explanation">Enter a new one on the Color Control.</div>\n            </div>\n        </div>\n    </div>\n    <div class="remote-console-logged-in">\n        <div class="remote-console-display-container">\n            <div class="remote-console-display">\n                <div class="remote-console-display-inner">\n                    <canvas id="remote-console-canvas" data-i18n="remoteconsole.canvas_support">\n                        Your browser does not support canvas, which is required for using the remote console.\n                    </canvas>\n                </div>\n            </div>\n        </div>\n        <div class="remote-console-controls-container">\n            <svg class="remote-console-controls-left-button" xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="37 -37 90 90">\n                <g data-button="left-button">\n                    <circle cx="82" cy="8" r="40" fill-opacity="0" />\n                    <path fill="#E5E4E0" d="M82-37C57.187-37,37-16.813,37,8s20.187,45,45,45s45-20.187,45-45S106.813-37,82-37z M73.945,8.42h-11.07\n                        c0.15,3.33,2.52,5.01,5.22,5.01c2.61,0,4.5-1.77,4.5-1.77l1.2,2.13c0,0-2.25,2.16-5.88,2.16c-4.77,0-8.04-3.45-8.04-7.95\n                        c0-4.83,3.27-7.95,7.59-7.95c4.29,0,6.569,3.18,6.569,7.11C74.035,7.55,73.945,8.42,73.945,8.42z M68.824,11.004v0.012h-0.002\n                        l-0.004-0.006L68.824,11.004z M82.105,15.95c-3.72,0-5.76-2.22-5.76-2.22l1.41-2.07c0,0,1.71,1.77,4.35,1.77\n                        c1.26,0,2.52-0.66,2.52-1.89c0-2.79-7.8-2.22-7.8-7.17c0-2.76,2.46-4.32,5.49-4.32c3.33,0,4.89,1.68,4.89,1.68l-1.17,2.19\n                        c0,0-1.35-1.35-3.75-1.35c-1.26,0-2.49,0.54-2.49,1.86c0,2.73,7.799,2.13,7.799,7.11C87.595,14.06,85.435,15.95,82.105,15.95z\n                         M98.065,15.95c-4.77,0-8.129-3.39-8.129-7.95c0-4.5,3.359-7.95,8.129-7.95c3.81,0,5.7,2.22,5.7,2.22l-1.38,2.04\n                        c0,0-1.62-1.74-4.2-1.74c-3.06,0-5.28,2.28-5.28,5.4c0,3.09,2.22,5.459,5.37,5.459c2.82,0,4.68-2.04,4.68-2.04l1.17,2.13\n                        C104.125,13.52,102.025,15.95,98.065,15.95z M67.405,2.36c-2.22,0-4.02,1.38-4.44,3.87h8.1C70.975,3.62,69.355,2.36,67.405,2.36z"/>\n                </g>\n            </svg>\n            <svg class="remote-console-controls-right-button" xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="37 -37 90 90">\n                <g data-button="right-button">\n                    <circle cx="82" cy="8" r="40" fill-opacity="0" />\n                    <path fill="#E5E4E0" d="M82-37C57.187-37,37-16.813,37,8s20.187,45,45,45s45-20.187,45-45S106.813-37,82-37z M98-2v14H69.812v0.006\n                        l6.592,6.592L75,20l-9-9l9-9l1.414,1.414L69.828,10H96V-2H84v-2h12h2V-2z"/>\n                </g>\n            </svg>\n               <svg class="remote-console-controls-dpad" xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="-307 -67 220 220">\n                <g data-button="up">\n                    <rect x="-217" y="-49" width="40" height="25" fill-opacity="0" />\n                    <path fill="#E5E4E0" d="M-272-37.289L-231.639,3c19.768-17.451,49.51-17.451,69.278,0L-122-37.288\n                        C-142.366-56.464-168.921-67-197-67C-225.078-67-251.634-56.464-272-37.289z M-208.932-31.844L-197-44.518l11.932,12.674\n                        l-2.148,2.214L-197-40.09l-9.784,10.46L-208.932-31.844z"/>\n                </g>\n                <g data-button="left">\n                    <rect x="-289" y="23" width="25" height="40" fill-opacity="0" />\n                    <path fill="#E5E4E0" d="M-277.289,118L-237,77.639c-17.451-19.768-17.451-49.51,0-69.278L-277.288-32\n                        C-296.464-11.634-307,14.921-307,43C-307,71.078-296.464,97.634-277.289,118z M-271.844,54.932L-284.518,43l12.674-11.932\n                        l2.214,2.148L-280.09,43l10.46,9.784L-271.844,54.932z"/>\n                </g>\n                <g data-button="center">\n                    <rect x="-219.5" y="32" width="45" height="20" fill-opacity="0" />\n                    <path fill="#E5E4E0" d="M-197-2c-24.813,0-45,20.187-45,45s20.187,45,45,45s45-20.187,45-45S-172.187-2-197-2z M-181,44\n                        c0,1.65-1.35,3-3,3h-26c-1.65,0-3-1.35-3-3v-5h2v5c0,0.542,0.458,1,1,1h26c0.542,0,1-0.458,1-1v-5h2V44z"/>\n                </g>\n                <g data-button="right">\n                    <rect x="-130" y="23" width="25" height="40" fill-opacity="0" />\n                    <path fill="#E5E4E0" d="M-116.711-32L-157,8.361c17.451,19.768,17.451,49.51,0,69.278L-116.712,118C-97.536,97.634-87,71.079-87,43\n                        C-87,14.922-97.536-11.634-116.711-32z M-122.156,31.068L-109.482,43l-12.674,11.932l-2.214-2.148L-113.91,43l-10.46-9.784\n                        L-122.156,31.068z"/>\n                </g>\n                <g data-button="down">\n                    <rect x="-217" y="110" width="40" height="25" fill-opacity="0" />\n                    <path fill="#E5E4E0" d="M-122,123.289L-162.361,83c-19.768,17.451-49.51,17.451-69.278,0L-272,123.288\n                        C-251.634,142.464-225.079,153-197,153C-168.922,153-142.366,142.464-122,123.289z M-185.068,117.844L-197,130.518l-11.932-12.674\n                        l2.148-2.214l9.784,10.46l9.784-10.46L-185.068,117.844z"/>\n                </g>\n            </svg>\n            <div class="remote-console-controls-text">\n                <h2 class="remote-console-controls-title"></h2>\n                <h2 class="remote-console-controls-subtitle"><span data-i18n="remoteconsole.remote">Remote</span> <span class="bold" data-i18n="remoteconsole.console">Console</span></h2>\n            </div>\n        </div>\n    </div>\n    <div class="remote-console-rotate-message-container">\n        <div class="rotate-message-contents">\n            <span class="sg-vrm-icon_77_rotate-screen-64px rotate-message-icon" ></span>\n            <h1 class="rotate-message-title" data-i18n="remoteconsole.rotate_screen">Rotate your screen</h1>\n        </div>\n    </div>\n</div>'),$templateCache.put("vrm-components/modal/share/share.template.html",'<div id="vrm-modal--share" class="vrm-modal vrm-modal--share mfp-hide mfp-with-anim">\n\t<div class="vrm-modal__header">\n\t\t<div class="vrm-modal__title" data-i18n="share.share_your_site">Share your site</div>\n\t</div>\n\t<div class="vrm-hr"></div>\n\t<div class="vrm-modal__content">\n\t\t<div class="row vrm-modal--share__content__control-row">\n\t\t\t<div class="col-xxs-12 col-xs-9">\n                <label class="sg-textfield-label" data-i18n="share.enable"> Enable site sharing</label>\n            </div>\n\t\t\t<div class="col-xxs-12 col-xs-3">\n\t\t\t\t<vrm-toggle ng-model="siteShare.enabled"></vrm-toggle>\n\t\t\t</div>\n\t\t</div>\n\t\t<div ng-show="siteShare.enabled">\n\t\t\t<div class="row vrm-modal--share__content__control-row">\n\t\t\t\t<div class="col-xxs-12 col-xs-9" >\n\t\t\t\t\t<label class="sg-textfield-label" data-i18n="share.password_protect">Password protect</label>\n\t\t\t\t</div>\n\t\t\t\t<div class="col-xxs-12 col-xs-3">\n\t\t\t\t\t<vrm-toggle ng-model="passwordEnabled"></vrm-toggle>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div ng-class="{\'vrm-force-hidden\': !passwordEnabled}" class="row vrm-modal--share__content__control-row vrm-modal--share__content__control-row--password">\n\t\t\t\t<div class="col-xxs-12 col-xs-9">\n\t\t\t\t\t<input type="password" class="sg-element" ng-model="passwordModel.password" placeholder="{{\'share.enter_password\' | i18n}}" autocomplete="off" maxlength="20"/>\n\t\t\t\t</div>\n\t\t\t\t<div class="col-xxs-12 col-xs-3">\n\t\t\t\t\t<input type="button" class="clickable sg-btn sg-green completed" value="{{\'common.save\' | i18n}}" ng-click="savePassword()"/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="row vrm-modal--share__content__control-row">\n\t\t\t\t<div class="col-xxs-12 col-xs-9" data-i18n="share.hide_location">\n                    <label class="sg-textfield-label" data-i18n="share.hide_location">Hide my exact location</label>\n                </div>\n\t\t\t\t<div class="col-xxs-12 col-xs-3">\n\t\t\t\t\t<vrm-toggle ng-model="siteShare.hideExactLocation"></vrm-toggle>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="row vrm-modal--share__content__control-row">\n\t\t\t\t<div class="col-xxs-12 col-xs-9" data-i18n="share.show_victron_world">\n                    <label class="sg-textfield-label" data-i18n="share.show_victron_world">Show on Victron World</label>\n                </div>\n\t\t\t\t<div class="col-xxs-12 col-xs-3">\n\t\t\t\t\t<vrm-toggle ng-model="siteShare.publicSharingEnabled"></vrm-toggle>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="vrm-hr vrm-modal--share__hr"></div>\n\t\t\t<div class="row vrm-modal--share__content__control-row">\n\t\t\t\t<div class="col-xs-12" data-i18n="share.copy_url">Copy this private url to share:</div>\n\t\t\t</div>\n\t\t\t<div class="row vrm-modal--share__content__control-row">\n\t\t\t\t<div class="col-xxs-12 col-xs-9">\n\t\t\t\t\t<input type="url" class="sg-element" id="private-share-url" readonly="readonly" ng-model="url" autocomplete="off"/>\n\t\t\t\t</div>\n\t\t\t\t<div class="col-xxs-12 col-xs-3">\n\t\t\t\t\t<input type="button" class="clickable sg-btn sg-green sg-element" value="{{\'common.copy\' | i18n}}" ng-click="copyUrl()"/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="vrm-hr vrm-modal--share__hr"></div>\n\t\t\t<div class="row vrm-modal--share__content__control-row">\n\t\t\t\t<div class="col-xs-12" data-i18n="share.send_mail">Or, send the private url by email:</div>\n\t\t\t</div>\n\t\t\t<div class="row vrm-modal--share__content__control-row">\n\t\t\t\t<div class="col-xxs-12 col-xs-9">\n\t\t\t\t\t<input type="email" class="sg-element" ng-model="mailAddress"/>\n\t\t\t\t</div>\n\t\t\t\t<div class="col-xxs-12 col-xs-3">\n\t\t\t\t\t<input type="button" class="clickable sg-btn sg-green sg-element" value="{{\'common.send\' | i18n}}" ng-click="sendMail()"/>\n\t\t\t\t</div>\n\t\t\t\t<div class="col-xs-12 hide error" id="private-share-email-error">\n\t\t\t\t\t<p></p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n'),$templateCache.put("vrm-components/modal/reporting/reporting.template.html",'<div id="vrm-modal--reporting" class="vrm-modal vrm-modal--language-selection mfp-hide mfp-with-anim">\n    <div>\n        <div class="vrm-modal__header--border">\n            <div class="vrm-modal__title" data-i18n="reporting.hybrid_genset_report"></div>\n        </div>\n        <div class="vrm-modal__content reporting__modal">\n            <div class="vrm-form__fieldset">\n                <div class="row" ng-if="pickadata">\n                    <div class="col-xs-12 col-sm-5">\n                        <div class="vrm-form__fieldset-item">\n                            <div class="sg-textfield-label" data-i18n="reporting.date">Date</div>\n                            <input type="text" pick-a-date="picker.from" max-date="picker.maxDate" pick-a-date-options="pickadata.dateOptions" class="picker__input picker__input--align_left" />\n                        </div>\n                    </div>\n                    <div class="col-sm-1 hidden-xs">\n                        <p class="p--line_height" data-i18n="reporting.till">till</p>\n                    </div>\n                    <div class="col-xs-12 col-sm-5">\n                        <div class="vrm-form__fieldset-item">\n                            <div class="sg-textfield-label"><span class="visible-xs" data-i18n="reporting.till">till</span> <span class="hidden-xs">&nbsp;</span></div>\n\n                            <input type="text" pick-a-date="picker.till" max-date="picker.maxDate" pick-a-date-options="pickadata.dateOptions" class="picker__input picker__input--align_left" />\n                        </div>\n                    </div>\n                </div>\n\n                <div class="row">\n                    <div class="col-xs-12 col-sm-5">\n                        <div class="vrm-form__fieldset-item">\n                            <div class="sg-textfield-label" data-i18n="reporting.tank_start">Tank at the start in liters</div>\n                            <input class="sg-element" type="number" ng-model="picker.liters">\n                        </div>\n                    </div>\n                    <div class="col-xs-12 col-sm-5 col-sm-offset-1">\n                        <div class="vrm-form__fieldset-item">\n                            <div class="sg-textfield-label" data-i18n="reporting.diesel_price">Liter diesel price</div>\n                            <input class="sg-element" type="number" ng-model="picker.price">\n                        </div>\n                    </div>\n                </div>\n\n\n                <div class="row">\n                    <div class="col-xs-12 col-sm-5">\n                        <div class="vrm-form__fieldset-item">\n                            <div class="sg-textfield-label" data-i18n="reporting.currency">Currency</div>\n                            <ui-select class="vrm-select sg-element" ng-model="picker.currency" theme="select2" remove-selected="false">\n                                <ui-select-match><span ng-bind-html="$select.selected"></span></ui-select-match>\n                                <ui-select-choices repeat="currency in currencies">\n                                  <span ng-bind-html="currency"></span>\n                                </ui-select-choices>\n                            </ui-select>\n                        </div>\n                    </div>\n                </div>\n                \x3c!--<div class="row">\n                    <div class="col-xs-12">\n                        <p data-i18n="reporting.select_widgets">Select graphs</p>\n                    </div>\n                    <div class="col-xs-12" >\n                        <ul>\n                            <li ng-repeat="widget in widgets" class="vrm-togglable-panel__widget as-sortable-item">\n                                <vrm-toggle-checkmark ng-model="widget.active">\n                                    {{::widget.name}}\n                                    <span ng-show="::widget.instance && widget.instance != 0">[{{::widget.instance}}]</span>\n                                </vrm-toggle-checkmark>\n                            </li>\n                        </ul>\n                        <p>&nbsp;</p>\n                    </div>\n                </div>--\x3e\n                <div class="row">\n                    <div class="col-xs-12">\n                        <div class="vrm-form__fieldset-item">\n                            <a href="" class="sg-btn sg-blue" ng-click="downloadReport()" data-i18n="reporting.download">Generate .pdf</a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n'),$templateCache.put("vrm-components/modal/update-device/update-device-modal.template.html",'<div class="vrm-modal vrm-modal--alert mfp-hide mfp-with-anim">\n    <div class="vrm-modal__content">\n        <div class="vrm-modal__title-icon sg-vrm-icon_97_updatefirmware_16px"></div>\n        <div class="vrm-modal__title" data-i18n="firmware-update.updating"></div>\n        <div class="vrm-modal__text">{{\'firmware-update.progress\' | i18n}}: {{progress | number:0}}%</div>\n        <progress class="vrm-progress" max="100" ng-attr-value="{{progress}}"></progress>\n        <div class="vrm-modal__text">{{\'firmware-update.status\' | i18n}}: {{status}}</div>\n    </div>\n</div>\n'),$templateCache.put("vrm-components/modal/upload/upload-modal.template.html",'<div class="vrm-modal vrm-modal--alert mfp-hide mfp-with-anim">\n    <div class="vrm-modal__content">\n        <vrm-upload upload-callback="callback" type="type">\n            <div class="vrm-upload--drop">\n                <div class="vrm-modal__title-icon sg-vrm-icon_63_add-photo"></div>\n                <div class="vrm-modal__title" data-i18n="{{\'upload.title_\' + type}}">Title</div>\n                <div class="vrm-modal__text" data-i18n="{{\'upload.message_\' + type}}">Message</div>\n                <div class="vrm-modal__text" ng-show="extraData.productId" data-i18n="upload.message_current_product" data-name="{{extraData.name}}" data-productid="{{extraData.productId}}"></div>\n                <div class="vrm-modal__main-button vrm-modal__close-button">\n                    <input type="button" class="sg-btn sg-blue vrm-upload--button" value="{{\'upload.upload\' | i18n}}">\n                </div>\n            </div>\n        </vrm-upload>\n    </div>\n</div>\n'),$templateCache.put("vrm-components/modal/upload/upload.template.html",'<div class="vrm-upload">\n    <input type="file" accept="{{getAcceptedMIME()}}">\n    <ng-transclude/>\n</div>\n'),$templateCache.put("vrm-components/modal/warning/warning-modal.template.html",'<div class="vrm-modal vrm-modal--alert mfp-hide mfp-with-anim">\n    <div class="vrm-modal__content">\n        <div class="vrm-modal__title-icon sg-vrm-icon_12_alarm-32px sg-color-orange"></div>\n        <div class="vrm-modal__title sg-color-orange" data-i18n="common.warning"></div>\n        <div class="vrm-modal__text" data-i18n="{{description}}"></div>\n\n        <div class="row">\n            <div class="col-xs-10 col-xs-offset-1">\n                <div class="vrm-modal__main-button vrm-modal__close-button">\n                    <button class="sg-btn sg-blue sg-element" type="submit" ng-click="callback()" data-i18n="{{action}}">Continue</button>\n                </div>\n                <div class="vrm-modal__main-button--cancel vrm-modal__close-button">\n                    <button class="sg-btn sg-site sg-element" type="submit" ng-click="close()" data-i18n="common.cancel">Cancel</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n'),$templateCache.put("vrm-components/modal/wysiwyg/wysiwyg.template.html",'<div id="vrm-modal--wysiwyg" class="vrm-modal vrm-modal--wysiwyg mfp-hide mfp-with-anim">\n    <div class="vrm-modal__header">\n        <div class="vrm-modal__title">{{document.title}}</div>\n        <div class="vrm-modal__subtitle" ng-if="document.timestamp"><span data-i18n="core.last_edited">Last edited</span> <span am-time-ago="document.timestamp"></span></div>\n    </div>\n    <div ng-if="options" ckeditor="options" id="vrm-modal__wysiwyg" ng-model="document.content"></div>\n    <div class="vrm-modal__footer">\n        <a href="" class="sg-btn sg-green pull-right" ng-click="save()" data-i18n="common.save">Save</a>\n    </div>\n</div>')}]),function(){"use strict";function Config(highchartsNGProvider,vrmConfig){highchartsNGProvider.basePath("/dependencies/highcharts/"),highchartsNGProvider.lazyLoad([highchartsNGProvider.HIGHCHART+"?"+vrmConfig.buildVersion,"highcharts-more.js?"+vrmConfig.buildVersion,"../../libs/vrm-highcharts-no-data.js?"+vrmConfig.buildVersion,"../../libs/vrm-highcharts-sync.js?"+vrmConfig.buildVersion])}Config.$inject=["highchartsNGProvider","vrmConfig"],angular.module("vrm.graph",["vrm.core","vrm.vrmConfig","highcharts-ng","highcharts-ng-lazyload"]).config(Config).run(function(){})}(),function(){"use strict";function GraphService(WhitelabelService,$rootScope,$q,GraphConfigTypes,ApiService,locale,localeEvents,highchartsNG,$filter){var GraphColors=WhitelabelService.getGraphColors(),service={updateConfig:function(config,data,meta,allowTotal,totalOnly,range,preprocessValue){allowTotal=!!allowTotal,totalOnly=!!totalOnly,config.loading=!1;var series=config.series,i=0,total={},negativeNumberAdded={},foundNonZeroData={},dataFound={},lastId=null;for(var code in meta){var id=null;if(_.each(_.keys(data.meta),function(k){data.meta[k].code===code&&(id=k)}),id){for(var index in lastId=id,series[i].name=data.meta[id].description,series[i].data=[],series[i].tooltip={pointFormatter:getTooltipFormatter(data.meta[id])},data.data[id]){var curValue=data.data[id][index][1];if(preprocessValue&&(curValue=preprocessValue(curValue)),series[i].data.push([1e3*data.data[id][index][0],curValue]),negativeNumberAdded[series[i].yAxis]=negativeNumberAdded[series[i].yAxis]||data.data[id][index][1]<0,foundNonZeroData[series[i].yAxis]=foundNonZeroData[series[i].yAxis]||0!=data.data[id][index][1],dataFound[series[i].yAxis]=dataFound[series[i].yAxis]||!0,allowTotal){var key=1e3*data.data[id][index][0],val=data.data[id][index][1];total[key]=total[key]?total[key]+val:val}}!negativeNumberAdded[series[i].yAxis]&&config.yAxis[series[i].yAxis].forceTickAt0?(config.yAxis[series[i].yAxis].min=0,config.yAxis[series[i].yAxis].resetMin=!0,!config.yAxis[series[i].yAxis].origMinPadding&&config.yAxis[series[i].yAxis].minPadding&&(config.yAxis[series[i].yAxis].origMinPadding=config.yAxis[series[i].yAxis].minPadding),config.yAxis[series[i].yAxis].minPadding=0):config.yAxis[series[i].yAxis].forceTickAt0&&(config.yAxis[series[i].yAxis].origMinPadding&&(config.yAxis[series[i].yAxis].minPadding=config.yAxis[series[i].yAxis].origMinPadding),config.yAxis[series[i].yAxis].resetMin&&(config.yAxis[series[i].yAxis].min=null)),foundNonZeroData[series[i].yAxis]||config.yAxis[series[i].yAxis].max||!dataFound[series[i].yAxis]?foundNonZeroData&&config.yAxis[series[i].yAxis].resetMax&&(config.yAxis[series[i].yAxis].max=null):(config.yAxis[series[i].yAxis].max=1,config.yAxis[series[i].yAxis].resetMax=!0),i++}}allowTotal&&(series[i].name="Total",series[i].data=[],series[i].tooltip={pointFormatter:getTooltipFormatter(data.meta[lastId])},_.each(total,function(value,key){series[i].data.push([parseInt(key),value])}),series[i].data=_.sortBy(series[i].data,function(num){return num[0]}));config.xAxis.min=1e3*range.startDate,config.xAxis.max=1e3*range.endDate,totalOnly&&(_.each(series,function(value,key){series[key].visible=!1}),series[i].visible=!0);config.series=series},updateStateConfig:function(config,data,range,meta){config.loading=!1;var series=config.series,i=0;for(var code in meta){var id=null;_.each(_.keys(data.meta),function(k){data.meta[k].code===code&&(id=k)});var categories={},catCount=0,categoryMap={};if(_.each(data.enums[id],function(value,key){categories[catCount]=value,categoryMap[key]=catCount,catCount++}),0==i&&(config.xAxis.categories=categories,config.xAxis.min=0,config.xAxis.max=Object.keys(categories).length-1),series[i]||series.push({animation:!1,visible:!0}),id){series[i].name=data.meta[id].description,series[i].data=[];var lastTime=null;for(var time in data.data[id])lastTime&&series[i].data.push([categoryMap[parseInt(data.data[id][lastTime])],1e3*parseInt(lastTime),1e3*parseInt(time)]),lastTime=time;if(null!=lastTime){var endTime=1e3*((new Date).getTime()/1e3<parseInt(range.endDate)?parseInt((new Date).getTime()/1e3):parseInt(range.endDate));series[i].data.push([categoryMap[parseInt(data.data[id][lastTime])],1e3*parseInt(lastTime),endTime])}series[i].data=_.sortBy(series[i].data,0)}i++}config.yAxis.min=1e3*range.startDate,config.yAxis.max=1e3*range.endDate,config.series=series},updateReversedStateConfig:function(config,data,range,meta,ignore){config.loading=!1;var series=config.series,categoryMap={},categories=[];for(var index in series)series[index].data=[];function _findId(code){var id=null;return _.each(_.keys(data.meta),function(k){data.meta[k].code===code&&(id=k)}),id}for(var code in meta){var id=_findId(code);if(id){for(var index in data.enums[id])series[index]||series.push({animation:!1,visible:!0,name:data.enums[id][index],data:[],stack:"Main"});categoryMap[id]||(categoryMap[id]=categories.length,categories.push(data.meta[id].description));var lastTime=null;for(var time in data.data[id])lastTime&&!_.includes(data.data[id][lastTime],ignore)&&series[data.data[id][lastTime]].data.push({x:categoryMap[id],low:1e3*parseInt(lastTime),high:1e3*parseInt(time)}),lastTime=time;if(null!=lastTime&&!_.includes(data.data[id][lastTime],ignore)){var endTime=1e3*((new Date).getTime()/1e3<parseInt(range.endDate)?(new Date).getTime()/1e3:parseInt(range.endDate));series[data.data[id][lastTime]].data.push({x:categoryMap[id],low:1e3*parseInt(lastTime),high:endTime})}}}config.yAxis.min=1e3*range.startDate,config.yAxis.max=1e3*range.endDate,config.xAxis.min=0,config.xAxis.max=Object.keys(categories).length-1,config.xAxis.categories=categories,config.series=series},getConfig:getConfig,getAdvancedConfig:function(meta,options){var config=getConfig(GraphConfigTypes.advanced);options&&angular.merge(config,options);var i=0;for(var code in meta){var serie={yAxis:meta[code]&&meta[code].yAxis?meta[code].yAxis:0,lineWidth:1,lineColor:config.options.colors[i++],visible:"TOTAL"!==code,states:{hover:{lineWidth:1,lineWidthPlus:1}}};config.series.push(serie)}return config},getGraphData:function(id,startDate,endDate,interval,url,parameters){var reqParameters=Object.assign({start:startDate,end:endDate,interval:interval},parameters);return ApiService.installations(id,url,reqParameters).then(function(response){return response.data})},getOverallStatsData:function(id,type){return ApiService.installations(id,"overallstats",{type:type}).then(function(response){return response.data})},registerSyncEventListeners:registerSyncEventListeners,timezoneString:null,currency:null,highcharts:null,ready:function(){return promise}};function getConfig(type){if(!type|_.isUndefined(configs[type]))throw new Error("Graph config type not found!.");return _.defaultsDeep(_.cloneDeep(configs[type]),configs[GraphConfigTypes.defaults])}function getTimeInTimezone(x){var offset=0;service.highcharts.getOptions().global.timezoneOffset&&(offset=-6e4*service.highcharts.getOptions().global.timezoneOffset);var date=new Date(x+offset);return date.setTime(date.getTime()+60*date.getTimezoneOffset()*1e3),date}function getTooltipFormatter(meta){return function(){var value=this.y;return meta&&meta.formatWithUnit&&(value=sprintf(meta.formatWithUnit.replace("F","f"),this.y)),sprintf('<span style="color:%s">â—</span> %s, %s: <b>%s</b><br/>',this.color,$filter("date")(getTimeInTimezone(this.x),"yyyy-MM-dd HH:mm")+" "+service.timezoneString,this.series.name,value)}}function getTablePointFormat(range,overrideColor){return'<tr><td><span style="color:'+(overrideColor||"{point.color}")+';">â—</span> {series.name}:</td>  <td style="text-align: right">'+(range?"<b>{point.low}</b> - <b>{point.high}</b>":"<b>{point.y}</b>")+"</td></tr>"}function generateTotalTableEntry(that,series,unit,totalTranslationKey,forceHideTotal,prefixUnit){var s=[],total=0,showTotal=!1;totalTranslationKey=totalTranslationKey||"graph.total";return $.each(that.points,function(){-1<series.indexOf(this.series.index)&&(showTotal=!0,total+=this.y)}),!showTotal||void 0!==forceHideTotal&&forceHideTotal||s.push("<tr><td>"+locale.getString(totalTranslationKey)+': </td><td style="text-align: right"><b>'+(prefixUnit?unit:"")+parseFloat(Math.round(100*total)/100).toFixed(2)+(prefixUnit?"":" "+unit)+"</b></td></tr>"),s}function getTooltipFormatterWithTotal(series,unit,forceHideTotal){return{useHTML:!0,headerFormat:"<table>",footerFormat:"</table>",formatter:function(tooltip){var s,items=this.points||splat(this);return(s=(s=(s=[tooltip.tooltipFooterHeaderFormatter(items[0])]).concat(generateTotalTableEntry(this,series,unit,"graph.total",forceHideTotal))).concat(tooltip.bodyFormatter(items))).push(tooltip.tooltipFooterHeaderFormatter(items[0],!0)),s}}}function reversedStatePointFormatter(){return'<span style="color:'+this.color+'">â—</span> '+this.series.name+", <b>"+$filter("date")(getTimeInTimezone(this.low),"yyyy-MM-dd HH:mm")+" - "+$filter("date")(getTimeInTimezone(this.high),"yyyy-MM-dd HH:mm")+"</b>"}function statePointFormatter(){return"<b>"+$filter("date")(getTimeInTimezone(this.low),"yyyy-MM-dd HH:mm")+" - "+$filter("date")(getTimeInTimezone(this.high),"yyyy-MM-dd HH:mm")+"</b>"}function registerSyncEventListeners(){function highlight(e){for(var i=0;i<service.highcharts.charts.length;i++)e.preventDefault(),service.highcharts.charts[i]&&(chart=service.highcharts.charts[i],event=chart.pointer.normalize(e.originalEvent),point=!1,chart.series[0]&&chart.series[0].searchPoint&&(point=chart.series[0].searchPoint(event,!0)),point&&point.highlight&&point.highlight(e))}function unhighlight(e){for(var i=0;i<service.highcharts.charts.length;i++)service.highcharts.charts[i]&&(chart=service.highcharts.charts[i],event=chart.pointer.normalize(e.originalEvent),point=!1,chart.series[0]&&chart.series[0].searchPoint&&(point=chart.series[0].searchPoint(event,!0)),point&&(point.onMouseOut&&point.onMouseOut(),chart.tooltip.hide(point)),chart.xAxis[0].hideCrosshair())}var chart,point,event,throttledHighlight=_.throttle(highlight,210);$("#v-sync-container").on("mouseleave touchend",unhighlight),$("#v-sync-container").on("mouseleave touchend",".v-sync-graph .vrm-widget__items--graph",unhighlight),$("#v-sync-container").on("touchstart",".v-sync-graph .vrm-widget__items--graph",highlight),$("#v-sync-container").on("mousemove",".v-sync-graph .vrm-widget__items--graph",highlight),$("#v-sync-container").on("touchmove",".v-sync-graph .vrm-widget__items--graph",throttledHighlight)}var configs={};$rootScope.$on("whitelabelChanged",function(){GraphColors=WhitelabelService.getGraphColors()});var promise=$q.all([highchartsNG.getHighcharts(),locale.ready("graph"),locale.ready("common")]).then(function(result){loadHighchart(result[0]),$rootScope.$on(localeEvents.localeChanges,function(event,data){promise=$q.all([highchartsNG.getHighcharts(),locale.ready("graph"),locale.ready("common")]).then(function(result){loadHighchart(result[0])})}),$rootScope.$on("whitelabelChanged",function(){GraphColors=WhitelabelService.getGraphColors(),loadHighchart(result[0])})});function loadHighchart(highchart){var totalLabels,seriesArr,forceHideTotal;service.highcharts=highchart,registerSyncEventListeners(),configs[GraphConfigTypes.defaults]={options:{chart:{zoomType:"x",marginTop:45,alignTicks:!1},tooltip:{shared:!0,animation:!1,headerFormat:""},title:{text:""},subtitle:{text:""},legend:{enabled:!1},credits:{enabled:!1}},size:{height:270},loading:!0},configs[GraphConfigTypes.advanced]={options:{colors:[GraphColors.blue,GraphColors.orange,GraphColors.black,GraphColors.green],chart:{marginTop:10,marginLeft:60,marginRight:60},plotOptions:{series:{marker:{enabled:!1}}}},xAxis:{type:"datetime",minorTickInterval:"auto",crosshair:{width:1},events:{setExtremes:highchart.syncExtremes},minorGridLineWidth:0},yAxis:[{title:{text:null},labels:{align:"center",style:{color:GraphColors.blue}}},{title:{text:null},labels:{align:"center",style:{color:GraphColors.orange}},opposite:!0}],size:{height:240},series:[]},configs[GraphConfigTypes.advancedState]={options:{colors:[GraphColors.blue,GraphColors.orange,GraphColors.black],plotOptions:{series:{minPointLength:5}},borderColor:GraphColors.blue,borderWidth:10,chart:{marginTop:10,type:"columnrange",zoomType:"y",inverted:!0},tooltip:{shared:!1,pointFormatter:statePointFormatter,followPointer:!0}},yAxis:{title:{text:""},type:"datetime",minorTickInterval:"auto",minorGridLineWidth:0,startOnTick:!1,endOnTick:!1,minPadding:.01,maxPadding:.01,lineColor:"#63625e",lineWidth:1,tickWidth:1,tickPixelInterval:100,gridLineWidth:0},xAxis:{title:{text:null},labels:{align:"right",style:{color:GraphColors.blue}},minorGridLineWidth:0,lineWidth:0,tickWidth:0,gridLineWidth:1,reversed:!1},series:[]},configs[GraphConfigTypes.advancedReversedState]={options:{colors:[null,GraphColors.orange,GraphColors.red],plotOptions:{series:{minPointLength:5},columnrange:{grouping:!1}},borderColor:GraphColors.blue,borderWidth:10,chart:{marginTop:10,type:"columnrange",zoomType:"y",inverted:!0},tooltip:{shared:!1,pointFormatter:reversedStatePointFormatter,followPointer:!0}},yAxis:{title:{text:""},type:"datetime",minorTickInterval:"auto",minorGridLineWidth:0,startOnTick:!1,endOnTick:!1,minPadding:.01,maxPadding:.01,lineColor:"#63625e",lineWidth:1,tickWidth:1,tickPixelInterval:100,gridLineWidth:0},xAxis:{title:{text:null},labels:{align:"right",style:{color:GraphColors.blue}},minorGridLineWidth:0,lineWidth:0,tickWidth:0,gridLineWidth:1},series:[]},configs[GraphConfigTypes.liveFeed]={options:{plotOptions:{column:{pointPadding:0,borderWidth:0,groupPadding:.02,shadow:!1}},tooltip:getTooltipFormatterWithTotal([0,1],locale.getString("graph.kwh"),!0)},xAxis:{type:"datetime",gridLineColor:"#f5f4f0",gridLineWidth:16,minorGridLineColor:"#f5f4f0",minorGridLineWidth:16,minorTickLength:0,minorTickInterval:"auto"},yAxis:[{title:{text:locale.getString("graph.kwh"),align:"high",y:-20,rotation:0,offset:5},gridLineWidth:0,visible:!1,showFirstLabel:!0},{min:0,max:100,tickInterval:10,title:{text:"%",align:"high",y:-20,rotation:0,offset:20,style:{color:GraphColors.blue}},labels:{align:"center",style:{color:GraphColors.blue}},gridLineWidth:0,opposite:!0,visible:!1,showFirstLabel:!0},{title:{text:"W",align:"high",y:-20,rotation:0,offset:5,style:{color:GraphColors.orange}},minPadding:0,maxPadding:.1,forceTickAt0:!0,tickAmount:7,labels:{format:"{value:.0f}",style:{color:GraphColors.orange}},gridLineWidth:0,showFirstLabel:!0,visible:!1},{title:{text:"V",align:"high",y:-20,rotation:0,offset:25,style:{color:GraphColors.blue}},tickAmount:10,minTickInterval:.1,labels:{format:"{value:.2f}",style:{color:GraphColors.blue}},maxPadding:.2,minPadding:.2,gridLineWidth:0,showFirstLabel:!0,visible:!1},{title:{text:"A",align:"high",y:-20,rotation:0,offset:25,style:{color:GraphColors.orange}},minPadding:0,maxPadding:.2,forceTickAt0:!0,labels:{format:"{value:.2f}",style:{color:GraphColors.orange}},gridLineWidth:0,showFirstLabel:!0,visible:!1}],series:[{yAxis:0,color:GraphColors.lightRed,type:"column",name:locale.getString("graph.consumption"),tooltip:{valueSuffix:" "+locale.getString("graph.kwh"),valueDecimals:2,pointFormat:getTablePointFormat()},states:{hover:{color:GraphColors.red}},zIndex:1,visible:!1,data:[]},{yAxis:0,color:GraphColors.lightOrange,type:"column",name:locale.getString("graph.solar"),tooltip:{valueSuffix:" "+locale.getString("graph.kwh"),valueDecimals:2,pointFormat:getTablePointFormat()},states:{hover:{color:GraphColors.orange}},zIndex:1,visible:!1,data:[]},{yAxis:1,color:GraphColors.blue,lineWidth:1,type:"line",name:locale.getString("graph.battery_avg"),tooltip:{valueSuffix:" %",valueDecimals:0,pointFormat:getTablePointFormat()},zIndex:4,marker:{radius:2},states:{hover:{lineWidth:1,halo:null}},visible:!1,data:[]},{yAxis:1,lineWidth:0,type:"arearange",linkedTo:":previous",color:GraphColors.lightBlue,name:locale.getString("graph.battery_range"),tooltip:{valueSuffix:" %",valueDecimals:0,pointFormat:getTablePointFormat(!0)},fillOpacity:.3,zIndex:4,marker:{radius:2},states:{hover:{lineWidth:1,halo:null}},visible:!1,data:[]},{yAxis:2,color:GraphColors.orange,lineWidth:1,type:"line",name:locale.getString("graph.Pdc"),tooltip:{valueSuffix:" W",valueDecimals:0},zIndex:3,marker:{radius:2},states:{hover:{lineWidth:1,halo:null}},visible:!1,data:[]},{yAxis:4,color:GraphColors.orange,lineWidth:1,type:"line",name:locale.getString("graph.iOI1"),tooltip:{valueSuffix:" A",valueDecimals:1},zIndex:3,marker:{radius:2},states:{hover:{lineWidth:1,halo:null}},visible:!1,data:[]},{yAxis:3,color:GraphColors.blue,lineWidth:1,type:"line",name:locale.getString("graph.bv"),tooltip:{valueSuffix:" V",valueDecimals:2},zIndex:3,marker:{radius:2},states:{hover:{lineWidth:1,halo:null}},visible:!1,data:[]}]},configs[GraphConfigTypes.consumption]={options:{colors:[GraphColors.lightRed,GraphColors.lightGreen,GraphColors.lightBlue,GraphColors.lightOrange],chart:{type:"column"},plotOptions:{series:{stacking:"normal",pointPadding:0,groupPadding:.02,borderWidth:0}},tooltip:getTooltipFormatterWithTotal([0,1,2,3],locale.getString("graph.kwh"))},xAxis:{type:"datetime",gridLineColor:"#f5f4f0",gridLineWidth:16,minorGridLineColor:"#f5f4f0",minorGridLineWidth:16,minorTickLength:0,minorTickInterval:"auto"},yAxis:[{title:{text:locale.getString("graph.kwh"),align:"high",y:-20,rotation:0,offset:5},gridLineWidth:0,showFirstLabel:!0}],series:[{name:locale.getString("graph.from_grid"),tooltip:{valueSuffix:" "+locale.getString("graph.kwh"),valueDecimals:2,pointFormat:getTablePointFormat()},states:{hover:{color:GraphColors.red}},index:0,visible:!1,data:[]},{name:locale.getString("graph.from_genset"),tooltip:{valueSuffix:" "+locale.getString("graph.kwh"),valueDecimals:2,pointFormat:getTablePointFormat()},states:{hover:{color:GraphColors.green}},index:1,visible:!1,data:[]},{name:locale.getString("graph.from_battery"),tooltip:{valueSuffix:" "+locale.getString("graph.kwh"),valueDecimals:2,pointFormat:getTablePointFormat()},states:{hover:{color:GraphColors.blue}},index:2,visible:!1,data:[]},{name:locale.getString("graph.from_solar"),tooltip:{valueSuffix:" "+locale.getString("graph.kwh"),valueDecimals:2,pointFormat:getTablePointFormat()},states:{hover:{color:GraphColors.orange}},index:3,visible:!1,data:[]}]},configs[GraphConfigTypes.solar]={options:{color:[GraphColors.lightRed,GraphColors.lightBlue,GraphColors.lightOrange],chart:{type:"column"},plotOptions:{series:{stacking:"normal",pointPadding:0,groupPadding:.02,borderWidth:0}},tooltip:getTooltipFormatterWithTotal([0,1,2],locale.getString("graph.kwh"))},xAxis:{type:"datetime",gridLineColor:"#f0efeb",gridLineWidth:16,minorGridLineColor:"#f0efeb",minorGridLineWidth:16,minorTickLength:0,minorTickInterval:"auto"},yAxis:[{title:{text:locale.getString("graph.kwh"),align:"high",y:-20,rotation:0,offset:5},gridLineWidth:0,showFirstLabel:!0}],series:[{name:locale.getString("graph.to_grid"),tooltip:{valueSuffix:" "+locale.getString("graph.kwh"),valueDecimals:2,pointFormat:getTablePointFormat()},states:{hover:{color:GraphColors.red}},visible:!1,data:[]},{name:locale.getString("graph.to_battery"),tooltip:{valueSuffix:" "+locale.getString("graph.kwh"),valueDecimals:2,pointFormat:getTablePointFormat()},states:{hover:{color:GraphColors.blue}},visible:!1,data:[]},{name:locale.getString("graph.direct_use"),tooltip:{valueSuffix:" "+locale.getString("graph.kwh"),valueDecimals:2,pointFormat:getTablePointFormat()},states:{hover:{color:GraphColors.orange}},visible:!1,data:[]}]},configs[GraphConfigTypes.economic]={options:{chart:{type:"column"},plotOptions:{column:{stacking:"normal",pointPadding:.075,groupPadding:.1,borderWidth:0}},tooltip:(totalLabels=["graph.actual_total","graph.scenario_total"],seriesArr=[[0,1,2,3],[4,5]],{useHTML:!0,headerFormat:"<table>",footerFormat:"</table>",formatter:function(tooltip){var s,items=this.points||splat(this);for(var index in s=[tooltip.tooltipFooterHeaderFormatter(items[0])],seriesArr)s=s.concat(generateTotalTableEntry(this,seriesArr[index],service.highcharts.getOptions().global.currencySign,totalLabels[index],forceHideTotal,!0)),$.each(items,function(){-1<seriesArr[index].indexOf(this.series.index)&&(s=s.concat(tooltip.bodyFormatter([this])))});return s.push(tooltip.tooltipFooterHeaderFormatter(items[0],!0)),s}})},xAxis:{type:"datetime",gridLineColor:"rgba(255, 255, 255, 0.0)",gridLineWidth:32,minorGridLineColor:"rgba(255, 255, 255, 0.0)",minorGridLineWidth:32,minorTickLength:0,minorTickInterval:"auto"},yAxis:[{title:{text:"",align:"high",y:-20,rotation:0,offset:13},gridLineWidth:0,showFirstLabel:!0}],series:[{name:locale.getString("graph.grid_costs"),stack:"actual",tooltip:{valueDecimals:2,pointFormat:getTablePointFormat(null,GraphColors.lightBlue)},color:GraphColors.blue,states:{hover:{color:GraphColors.lightBlue}},index:0,visible:!1,data:[]},{name:locale.getString("graph.genset_costs"),stack:"actual",tooltip:{valueDecimals:2,pointFormat:getTablePointFormat(null,GraphColors.lightBlue3)},color:GraphColors.blue,states:{hover:{color:GraphColors.lightBlue3}},index:1,visible:!1,data:[]},{name:locale.getString("graph.solar_maintenance_costs"),stack:"actual",tooltip:{valueDecimals:2,pointFormat:getTablePointFormat(null,GraphColors.lightBlue2)},color:GraphColors.blue,states:{hover:{color:GraphColors.lightBlue2}},index:2,visible:!1,data:[]},{name:locale.getString("graph.genset_maintenance_costs"),stack:"actual",tooltip:{valueDecimals:2,pointFormat:getTablePointFormat(null,GraphColors.blue)},color:GraphColors.blue,states:{hover:{color:GraphColors.blue}},index:3,visible:!1,data:[]},{name:locale.getString("graph.compare_costs"),stack:"compare",tooltip:{valueDecimals:2,pointFormat:getTablePointFormat(null,GraphColors.lightGrey)},color:GraphColors.grey,states:{hover:{color:GraphColors.lightGrey}},index:4,visible:!1,data:[]},{name:locale.getString("graph.compare_maintenance"),stack:"compare",tooltip:{valueDecimals:2,pointFormat:getTablePointFormat(null,GraphColors.grey)},color:GraphColors.grey,states:{hover:{color:GraphColors.grey}},index:5,visible:!1,data:[]}]},configs[GraphConfigTypes.environmental]={options:{color:[GraphColors.lightRed,GraphColors.lightBlue,GraphColors.lightOrange],chart:{type:"column"},plotOptions:{series:{stacking:"normal",pointPadding:0,groupPadding:.02,borderWidth:0}},tooltip:getTooltipFormatterWithTotal([0,1,2],locale.getString("graph.kwh"))},xAxis:{type:"datetime",gridLineColor:"#f5f4f0",gridLineWidth:16,minorGridLineColor:"#f5f4f0",minorGridLineWidth:16,minorTickLength:0,minorTickInterval:"auto"},yAxis:[{title:{text:locale.getString("graph.kwh"),align:"high",y:-20,rotation:0,offset:5},gridLineWidth:0,showFirstLabel:!0}],series:[{name:locale.getString("graph.to_grid"),tooltip:{valueSuffix:" "+locale.getString("graph.kwh"),valueDecimals:2,pointFormat:getTablePointFormat()},states:{hover:{color:GraphColors.red}},visible:!1,data:[]},{name:locale.getString("graph.to_battery"),tooltip:{valueSuffix:" "+locale.getString("graph.kwh"),valueDecimals:2,pointFormat:getTablePointFormat()},states:{hover:{color:GraphColors.blue}},visible:!1,data:[]},{name:locale.getString("graph.direct_use"),tooltip:{valueSuffix:" "+locale.getString("graph.kwh"),valueDecimals:2,pointFormat:getTablePointFormat()},states:{hover:{color:GraphColors.orange}},visible:!1,data:[]}]},configs[GraphConfigTypes.consumptionPie]={options:{colors:[GraphColors.red,GraphColors.green,GraphColors.blue,GraphColors.orange],chart:{marginTop:10,spacingBottom:10},tooltip:{enabled:!1},title:{text:"",align:"center",verticalAlign:"middle",y:5,x:-27,style:{fontSize:12,color:"#969591",fontWeight:100}},plotOptions:{pie:{dataLabels:{enabled:!1},showInLegend:!0}},legend:{enabled:!0,align:"right",verticalAlign:"middle",layout:"vertical",symbolWidth:0,itemMarginTop:5,itemMarginBottom:5,labelFormatter:function(){return'<span style="font-weight: 100; color: '+this.color+'">'+Math.floor(this.y)+"%</span>"}}},series:[{type:"pie",innerSize:"66%",visible:!1,data:[],states:{hover:{enabled:!1}}}],size:{width:200,height:160}},configs[GraphConfigTypes.solarPie]={options:{colors:[GraphColors.red,GraphColors.blue,GraphColors.orange],chart:{marginTop:10,spacingBottom:10},tooltip:{enabled:!1},title:{text:"",align:"center",verticalAlign:"middle",y:5,x:-27,style:{fontSize:12,color:"#969591",fontWeight:100}},plotOptions:{pie:{dataLabels:{enabled:!1},showInLegend:!0}},legend:{enabled:!0,align:"right",verticalAlign:"middle",layout:"vertical",symbolWidth:0,itemMarginTop:5,itemMarginBottom:5,labelFormatter:function(){return'<span style="font-weight: 100; color: '+this.color+'">'+Math.floor(this.y)+"%</span>"}}},series:[{type:"pie",innerSize:"66%",visible:!1,data:[],states:{hover:{enabled:!1}}}],size:{width:200,height:160}},service.highcharts.setOptions({colors:[GraphColors.lightRed,GraphColors.lightBlue,GraphColors.lightOrange,GraphColors.lightGreen],chart:{backgroundColor:null,plotBackgroundColor:null,plotShadow:!1,selectionMarkerFill:"rgba(80,80,80,0.25)"},yAxis:{labels:{style:{color:"#959490",fontFamily:"MuseoSans-300"}}},xAxis:{lineColor:"#63625e",labels:{style:{color:"#959490",fontFamily:"MuseoSans-300"}}},title:{style:{fontFamily:"MuseoSans-300",fontSize:"27px"}},tooltip:{backgroundColor:"rgba(100, 99, 95, 0.75)",shadow:!1,borderWidth:0,style:{color:"#FFF"}},navigation:{buttonOptions:{symbolStroke:"#DDDDDD",hoverSymbolStroke:"#FFFFFF",theme:{fill:{linearGradient:{x1:0,y1:0,x2:0,y2:1},stops:[[.4,"#606060"],[.6,"#333333"]]},stroke:"#000000"}}},lang:{shortMonths:[locale.getString("graph.short_january"),locale.getString("graph.short_februari"),locale.getString("graph.short_march"),locale.getString("graph.short_april"),locale.getString("graph.short_may"),locale.getString("graph.short_juni"),locale.getString("graph.short_july"),locale.getString("graph.short_august"),locale.getString("graph.short_september"),locale.getString("graph.short_october"),locale.getString("graph.short_november"),locale.getString("graph.short_december")],loading:locale.getString("graph.loading"),resetZoom:locale.getString("graph.reset_zoom"),noData:locale.getString("graph.no_data")}})}return service}GraphService.$inject=["WhitelabelService","$rootScope","$q","GraphConfigTypes","ApiService","locale","localeEvents","highchartsNG","$filter"],angular.module("vrm.graph").constant("GraphConfigTypes",{defaults:"defaults",liveFeed:"liveFeed",consumption:"consumption",solar:"solar",consumptionPie:"consumptionPie",solarPie:"solarPie",advanced:"advanced",advancedState:"advancedState",advancedReversedState:"advancedReversedState",economic:"economic",environmental:"environmental"}).service("GraphService",GraphService)}(),function(){"use strict";function RoutesConfiguration(vrmConfig,$locationProvider,$futureStateProvider,$urlRouterProvider,$ocLazyLoadProvider){$locationProvider.html5Mode({enabled:vrmConfig.locationHtml5Mode}),$urlRouterProvider.when("/user/login","/login"),$urlRouterProvider.when("/user/logout","/logout"),$urlRouterProvider.when("/user/profile","/profile/settings"),$urlRouterProvider.when("/user/reset-password-request","/forgot-password"),$urlRouterProvider.when("/user/register","/register"),$urlRouterProvider.when("/site","/installation-overview"),$urlRouterProvider.when("/user/reset-password/email/{email}/key/{key}",["$match",function($match){return"/reset-password/email/"+$match.email+"/"+$match.key}]),$urlRouterProvider.when("/user/register/invitekey/{key}",["$match",function($match){return"/register/invite/"+$match.key}]),$urlRouterProvider.when("/user/login/invitekey/{key}",["$match",function($match){return"/login/invite/"+$match.key}]),$urlRouterProvider.when("/user/login/evt/{key}",["$match",function($match){return"/login/evt/"+$match.key}]),$urlRouterProvider.when("/site/{id:int}/diagnostics",["$match",function($match){return!(void 0===$match.id||!$match.id)&&"/installation/"+$match.id+"/diagnostics"}]),$urlRouterProvider.when("/site/share/{key}",["$match",function($match){window.location.href=vrmConfig.api+"/auth/redirectshare?token="+$match.key}]),$urlRouterProvider.when("/site/share/token/{key}",["$match",function($match){window.location.href=vrmConfig.api+"/auth/redirectshare?token="+$match.key}]),$urlRouterProvider.when("/site/share-login/{key}",["$match",function($match){window.location.href=vrmConfig.api+"/auth/redirectshare?token="+$match.key}]),$urlRouterProvider.when("/installation/share/{key}",["$match",function($match){window.location.href=vrmConfig.api+"/auth/redirectshare?token="+$match.key}]),$urlRouterProvider.when("/site/{id:int}?mainTabId&subTabId",["$match",function($match){var redirectTo="dashboard";return void 0!==$match.subTabId&&$match.subTabId&&"undefined"!=$match.mainTabId&&$match.mainTabId?"gateway"==$match.subTabId&&"settings"==$match.mainTabId?redirectTo="settings/general":"tags"==$match.subTabId&&"settings"==$match.mainTabId?redirectTo="settings/tags":"location"==$match.subTabId&&"settings"==$match.mainTabId?redirectTo="settings/location":"geofence"==$match.subTabId&&"settings"==$match.mainTabId?redirectTo="settings/geofence":"user-settings"==$match.subTabId&&"settings"==$match.mainTabId?redirectTo="settings/users":"alarms"==$match.subTabId&&"settings"==$match.mainTabId?redirectTo="settings/alarms":"system-overview"==$match.subTabId&&"settings"==$match.mainTabId&&(redirectTo="overview"):"undefined"!=$match.mainTabId&&$match.mainTabId&&"advanced"==$match.mainTabId&&(redirectTo="advanced"),!(void 0===$match.id||!$match.id)&&"/installation/"+$match.id+"/"+redirectTo}]),$urlRouterProvider.when("/site/view/{id:int}",["$match",function($match){return!(void 0===$match.id||!$match.id)&&"/installation/"+$match.id+"/dashboard"}]),$urlRouterProvider.when("/installation/{id:int}",["$match",function($match){return!(void 0===$match.id||!$match.id)&&"/installation/"+$match.id+"/dashboard"}]),$urlRouterProvider.when("/installation/{id:int}/",["$match",function($match){return!(void 0===$match.id||!$match.id)&&"/installation/"+$match.id+"/dashboard"}]),$urlRouterProvider.when("/site/diagnostics/{id:int}",["$match",function($match){return!(void 0===$match.id||!$match.id)&&"/installation/"+$match.id+"/diagnostics"}]),$urlRouterProvider.otherwise("/landingpage"),$futureStateProvider.stateFactory("ocLazyLoad",function($ocLazyLoad,$q,futureState){var deferred=$q.defer();return $ocLazyLoad.load({files:futureState.files}).then(function(){deferred.resolve()}),deferred.promise}),$ocLazyLoadProvider.config({events:!0})}RoutesConfiguration.$inject=["vrmConfig","$locationProvider","$futureStateProvider","$urlRouterProvider","$ocLazyLoadProvider"],angular.module("vrm.route",["vrm.vrmConfig","ui.router","ct.ui.router.extras","oc.lazyLoad"]).config(RoutesConfiguration)}(),function(){"use strict";angular.module("vrm.components",["vrm.template","ngAnimate","pickadate","angularMoment","angular-inview","ngHandsontable"])}(),function(){"use strict";function WysiwygController($scope,document,save,close){return $scope.options={toolbar:[{name:"styles",items:["Format"]},{name:"basicstyles",items:["Bold","Italic"]},{name:"paragraph",items:["NumberedList","BulletedList"]},{name:"clipboard",items:["Undo","Redo"]}],format_tags:"p;h1;h2;h3;h4",removePlugins:"elementspath",resize_enabled:!1},$scope.document=document,$scope.save=function(){save($scope.document).then(function(){$.magnificPopup.close()})},{close:close}}WysiwygController.$inject=["$scope","document","save","close"],angular.module("vrm.components").controller("WysiwygController",WysiwygController)}(),function(){"use strict";function WarningController($scope,close,callback,action,description){return $scope.close=$.magnificPopup.close,$scope.callback=function(){$scope.close(),callback()},$scope.action=action,$scope.description=description,{close:close}}WarningController.$inject=["$scope","close","callback","action","description"],angular.module("vrm.components").controller("WarningController",WarningController)}(),function(){"use strict";function vrmUpload($log){return{restrict:"E",templateUrl:"vrm-components/modal/upload/upload.template.html",link:function($scope,$element,$attr){$element.find(".vrm-upload--button").on("click",function(e){$element.find("input[type=file]")[0].click(),e.preventDefault()}),$element.find("input[type=file]").on("change",function(){$scope.uploadCallback(this.files)});var elDrop=$element.find(".vrm-upload--drop");elDrop.on("dragenter",function(e){e.preventDefault(),e.stopPropagation(),elDrop.addClass("vrm-upload--drop__hover")}),elDrop.on("dragleave",function(e){e.preventDefault(),e.stopPropagation(),elDrop.removeClass("vrm-upload--drop__hover")}),elDrop.on("drop",function(e){e.preventDefault(),e.stopPropagation();var files=e.target.files||e.dataTransfer.files;$scope.uploadCallback(files)}),$scope.getAcceptedMIME=function(){switch($scope.type){case"photo":return"image/*";case"firmware_dup":return".dup";case"firmware_vup":return".vup";case"veconf":return".rvsc, .rvms";default:return"*/*"}}},transclude:!0,scope:{uploadCallback:"=",type:"="}}}vrmUpload.$inject=["$log"],angular.module("vrm.components").directive("vrmUpload",vrmUpload)}(),function(){"use strict";function UploadController($scope,close,type,callback,extraData){return $scope.type=type,$scope.extraData=extraData,$scope.callback=function(files){0<files.length&&($.magnificPopup.close(),callback(files))},{close:close}}UploadController.$inject=["$scope","close","type","callback","extraData"],angular.module("vrm.components").controller("UploadController",UploadController)}(),function(){"use strict";function UpdateDeviceController($scope,close){return{close:close}}UpdateDeviceController.$inject=["$scope","close"],angular.module("vrm.components").controller("UpdateDeviceController",UpdateDeviceController)}(),function(){"use strict";function ShareController($scope,installation,close,ApiService,$timeout,locale,vrmNotificationsService,vrmNotificationType){return $scope.timer=null,$scope.siteShare={},$scope.url="",locale.ready("share").then(function(){ApiService.call("/installations/"+installation.idSite+"/retrieve-share",{},"GET").then(function(response){$scope.siteShare=response.data.siteShare?response.data.siteShare:{},$scope.siteShare.enabled=!!response.data.siteShare,$scope.passwordEnabled=!!response.data.siteShare.password,$scope.url=response.data.siteShare.url,$scope.$watch("siteShare",function(newVal,oldVal){angular.equals(oldVal,newVal)&&!$scope.doSendMail||($timeout.cancel($scope.timer),$scope.timer=$timeout(function(){var data=angular.copy($scope.siteShare);data.sendMail=$scope.doSendMail,$scope.doSendMail=!1,ApiService.call("/installations/"+installation.idSite+"/share",data,"POST").then(function(response){$scope.url=response.data.url,vrmNotificationsService.add({type:vrmNotificationType.SUCCESS,message:locale.getString("share.share_saved")})})},500))},!0),$scope.$watch("passwordEnabled",function(passwordEnabled){!passwordEnabled&&$scope.siteShare.password&&($scope.siteShare.password=!1)})})}),$scope.passwordModel={password:null},$scope.savePassword=function(){$scope.siteShare.password=$scope.passwordModel.password,$scope.passwordEnabled=!0},$scope.copyUrl=function(){var el=document.getElementById("private-share-url");if(document.body.createTextRange){var textRange=document.body.createTextRange();textRange.moveToElementText(el),textRange.select(),textRange.execCommand("Copy")}else if(window.getSelection&&document.createRange){var editable=el.contentEditable,readOnly=el.readOnly;el.contentEditable=!0,el.readOnly=!1;var range=document.createRange();range.selectNodeContents(el);var sel=window.getSelection();sel.removeAllRanges(),sel.addRange(range),"TEXTAREA"!==el.nodeName&&"INPUT"!==el.nodeName||el.select(),el.setSelectionRange&&navigator.userAgent.match(/ipad|ipod|iphone/i)&&el.setSelectionRange(0,999999),el.contentEditable=editable,el.readOnly=readOnly,document.queryCommandSupported("copy")&&document.execCommand("copy")}},$scope.doSendMail=!1,$scope.mailAddress=null,$scope.sendMail=function(){$scope.doSendMail=!0,$scope.siteShare.email=$scope.mailAddress},{close:close}}ShareController.$inject=["$scope","installation","close","ApiService","$timeout","locale","vrmNotificationsService","vrmNotificationType"],angular.module("vrm.components").controller("ShareController",ShareController)}(),function(){"use strict";function ReportingModalController($scope,$log,locale,close,$filter,ApiService,AdvancedGraphWidgetConfigs,widgetTypeMapping,VrmModalService){return locale.ready("datepicker").then(function(){function toUTC(date){return date-6e4*date.getTimezoneOffset()}var maxDate=new Date,calc_offset=0;$scope.widgets=[],$scope.picker={maxDate:maxDate,from:new Date(maxDate.getFullYear(),maxDate.getMonth(),1).getTime(),till:maxDate.getTime(),price:1,liters:10,currency:"&euro;"},$scope.currencies=["&euro;","&dollar;","&pound;"],$scope.$watch("installation.id",function(id){id&&ApiService.installations(id,"report",{current_state:!0}).then(function(response){var data=response.data.data;data.price&&($scope.picker.price=data.price),data.liters&&($scope.picker.liters=data.liters),data.currency&&($scope.picker.currency=data.currency);var activeWidgets=[];data.widgets&&(activeWidgets=data.widgets),ApiService.installations(id,"active-widgets").then(function(response){response.data.widgets&&response.data.widgets instanceof Array&&_.each(response.data.widgets,function(widget){widget.active=-1<activeWidgets.indexOf(widget.idWidget.toString());var code=widget.code;void 0!==widgetTypeMapping[widget.code]&&(code=widgetTypeMapping[widget.code]),AdvancedGraphWidgetConfigs[code]&&$scope.widgets.push(widget)})})})}),$scope.getRange=function(){return!(!$scope.picker.from||!$scope.picker.till)&&($scope.picker.from.setHours(0),$scope.picker.from.setMinutes(0),$scope.picker.from.setSeconds(0),$scope.picker.till.setHours(23),$scope.picker.till.setMinutes(59),$scope.picker.till.setSeconds(59),{from:(toUTC($scope.picker.from)-calc_offset)/1e3,till:(toUTC($scope.picker.till)-calc_offset)/1e3})},$scope.$watch("installation.timezone_offset",function(offset){if($log.info("Setting offset: "+offset),null!=offset){var now=new Date;calc_offset=1e3*offset;var maxDate=new Date(now.getTime()+calc_offset+6e4*now.getTimezoneOffset());$scope.picker.maxDate.setTime(maxDate.getTime())}}),$scope.downloadReport=function(){var range=$scope.getRange();if(range){var data={start:range.from,end:range.till,price:$scope.picker.price,liters:$scope.picker.liters,currency:$scope.picker.currency},widgets=[];_.each(_.filter($scope.widgets,function(widget){return widget.active}),function(widget){widgets.push(widget.idWidget)}),data.widgets=widgets.join(","),$scope.$parent.downloadPdf(data)}},$scope.pickadata={dateOptions:{clear:!1,monthsFull:[locale.getString("datepicker.january"),locale.getString("datepicker.februari"),locale.getString("datepicker.march"),locale.getString("datepicker.april"),locale.getString("datepicker.may"),locale.getString("datepicker.juni"),locale.getString("datepicker.july"),locale.getString("datepicker.august"),locale.getString("datepicker.september"),locale.getString("datepicker.october"),locale.getString("datepicker.november"),locale.getString("datepicker.december")],weekdaysShort:[locale.getString("datepicker.short_sunday"),locale.getString("datepicker.short_monday"),locale.getString("datepicker.short_tuesday"),locale.getString("datepicker.short_wednesday"),locale.getString("datepicker.short_thursday"),locale.getString("datepicker.short_friday"),locale.getString("datepicker.short_saturday")],today:locale.getString("datepicker.today"),close:locale.getString("datepicker.close"),format:locale.getString("datepicker.format")},timeOptions:{clear:!1,format:"HH:i"}}}),{close:close}}ReportingModalController.$inject=["$scope","$log","locale","close","$filter","ApiService","AdvancedGraphWidgetConfigs","widgetTypeMapping","VrmModalService"],angular.module("vrm.components").controller("ReportingModalController",ReportingModalController)}(),function(){"use strict";function RemoteConsoleController($window,$document,locale,ApiService,installation,close,$log){var $state={element:null,connecting:!1,rfb:null,connectionData:null,firstAttempt:!0,disconnected:!1};return{open:function(){$state.element=this.content,$state.element.find(".remote-console-controls-title, .remote-console-title").text(installation.name),$state.element.bind("touchstart",function(ev){if(ev.originalEvent.touches.length<2){var timeDiff=ev.timeStamp-($state.element.data("lastTouch")||ev.timeStamp);timeDiff&&timeDiff<500&&ev.preventDefault()}$state.element.data("lastTouch",ev.timeStamp)}),"ontouchstart"in window&&$state.element.find("[data-button]").addClass("nohover");var timeoutId=0,intervalId=0;$state.element.find("[data-button]").on("touchstart mousedown",function(ev){ev.preventDefault(),clearTimeout(timeoutId),clearInterval(intervalId);var key=$(this).data("button");sendButton(key),timeoutId=setTimeout(function(){clearTimeout(timeoutId),intervalId=setInterval(function(){sendButton(key)},50)},250)}).on("mousedown touchstart",function(){$(this).addClass("toggled")}).on("mouseup mouseleave mouseout touchcancel touchend",function(){clearTimeout(timeoutId),clearInterval(intervalId),$(this).removeClass("toggled")});var keyButtonMap={27:"left-button",13:"right-button",38:"up",37:"left",32:"center",39:"right",40:"down"};$document[0].addEventListener("keydown",function(ev){var button=keyButtonMap[ev.keyCode?ev.keyCode:ev.which];button&&$state.element.find('[data-button="'+button+'"]').addClass("toggled")}),$document[0].addEventListener("keyup",function(ev){var button=keyButtonMap[ev.keyCode?ev.keyCode:ev.which];button&&$state.element.find('[data-button="'+button+'"]').removeClass("toggled")}),$state.element.find("[data-button]").removeClass("toggled"),$window.addEventListener("beforeunload",function(){disconnect()}),$window.addEventListener("resize",function(){resize()}),$(".remote-console-rotate-message-container .mfp-close").click(function(){$.magnificPopup.instance.close(),$state.element.find(".remote-console-rotate-message-container").hide()}),$state.element.find("#remote-console-login").click(sendPassword),$state.element.find("#remote-console-password").bind("keypress",function(ev){13==(ev.keyCode?ev.keyCode:ev.which)&&sendPassword()}),connect()},close:function(){return disconnect(),close()}};function initRfb(){null!=$state.rfb&&($state.rfb.disconnect(),$state.rfb=null),showStatus(locale.getString("remoteconsole.connecting"),"notification"),$state.rfb=new RFB({target:$state.element.find("#remote-console-canvas").get(0),focusContainer:$document[0],encrypt:$state.connectionData.encrypt,view_only:!1,shared:!0,disconnectTimeout:Math.pow(2,32),onUpdateState:function(rfb,state,oldstate,message){switch(state){case"normal":$state.element.removeClass("password-needed").addClass("logged-in"),hideStatus(),identifier=$state.connectionData.identifier,$state.element.find("#remote-console-password-remember").prop("checked")&&ApiService.call("/installations/"+installation.idSite+"/remote-console-password",{password:getHashFromPasswordField(identifier)}).then(function(response){}).catch(function(){});break;case"failed":switch(oldstate){case"normal":showStatus(locale.getString("remoteconsole.failed_normal"),"alarm"),showReconnectButton();break;case"connect":showStatus(locale.getString("remoteconsole.failed_connect"),"alarm"),showReconnectButton();break;case"SecurityResult":rfb.get_onPasswordRequired()(rfb);break;default:showStatus(locale.getString("remoteconsole.failed_default"),"alarm"),showReconnectButton()}break;case"disconnected":switch($state.disconnected=!0,oldstate){case"failed":break;case"normal":showStatus(locale.getString("remoteconsole.disconnected"),"notification"),showReconnectButton()}}var identifier},onPasswordRequired:function(rfb){$state.element.find("#remote-console-password").removeClass("error"),$state.element.removeClass("logged-in").addClass("password-needed"),hideStatus(),$state.firstAttempt?$state.element.find("#remote-console-password").val(""):($state.element.find("#remote-console-password").addClass("error").one("input keydown keyup change",function(){$state.element.find("#remote-console-password").removeClass("error")}),alert(locale.getString("Incorrect password"))),$state.element.find("#remote-console-password").focus(),$state.firstAttempt=!1}})}function sendPassword(){$state.disconnected?(initRfb(),$state.rfb.connect($state.connectionData.host?$state.connectionData.host:window.location.hostname,$state.connectionData.port,getHashFromPasswordField($state.connectionData.identifier),$state.connectionData.path)):$state.rfb.sendPassword(getHashFromPasswordField($state.connectionData.identifier))}function connect(){resize(),$state.rfb||$state.connecting||($state.connecting=!0,showStatus(locale.getString("remoteconsole.connecting"),"notification"),ApiService.call("/installations/"+installation.idSite+"/remote-console").then(function(response){if(response.data.success)if(0!=response.data.data.port){$state.connectionData=response.data.data,$state.firstAttempt=!0,$state.disconnected=!1;try{initRfb(),$state.rfb.connect($state.connectionData.host?$state.connectionData.host:window.location.hostname,$state.connectionData.port,null!==$state.connectionData.password?$state.connectionData.password:"",$state.connectionData.path)}catch(e){showStatus(locale.getString("remoteconsole.failed_default"),"alarm"),showReconnectButton()}}else showStatus(locale.getString("remoteconsole.connectiondata_notunnel"),"alarm"),showReconnectButton();else showStatus(locale.getString("remoteconsole.connectiondata_unauthorized"),"notification"),showReconnectButton();$state.connecting=!1}).catch(function(){showStatus(locale.getString("remoteconsole.connectiondata_failed"),"alarm"),showReconnectButton(),$state.connecting=!1}))}function getHashFromPasswordField(identifier){var password=$state.element.find("#remote-console-password");if(0==password.val().length)return"";for(var identifierArray=[],i=0;i<16;i++)identifierArray[i]=(identifier+identifier).charCodeAt(i);var salt="$2a$08$"+dcodeIO.bcrypt.encodeBase64(identifierArray,16),hash=dcodeIO.bcrypt.hashSync(password.val(),salt);if(8<hash.length)return hash.substr(hash.length-8);alert(locale.getString("remoteconsole.password_hash_error"))}function disconnect(){$state.element.closest(".mfp-wrap").css("background-color",""),$state.rfb&&($state.rfb.disconnect(),$state.rfb=null,$state.connectionData=null),hideStatus()}function sendButton(button){if($state.rfb){$log.info("Sending button "+button);$state.rfb.sendKey({primary:65307,"left-button":65307,secondary:65293,"right-button":65293,up:65362,left:65361,center:32,right:65363,down:65364}[button])}}function showStatus(status,type){var statusContainer=$state.element.find(".remote-console-status");$state.element.removeClass("password-needed").removeClass("logged-in"),$state.element.find(".remote-console-status-text").html(status).show(),statusContainer.removeClass("reconnect"),statusContainer.removeClass("notification"),statusContainer.removeClass("alarm"),statusContainer.addClass(type)}function showReconnectButton(){$state.element.find(".remote-console-status").addClass("reconnect"),$state.element.find(".remote-console-status-text").append("<br /><br />").append(jQuery('<input type="button" class="sg-btn" />').val(locale.getString("remoteconsole.reconnect")).click(function(){disconnect(),connect()}))}function hideStatus(){$state.element.find(".remote-console-status-text").empty().hide()}function resize(){var $display=$state.element.find(".remote-console-display-inner"),windowWidth=$($window).width(),isPortrait=windowWidth<$($window).height();windowWidth<=767?$display.height(.56*(windowWidth-240)):$display.height(""),windowWidth<686?$display.width(480-(686-windowWidth)):$display.width(""),windowWidth<768&&isPortrait&&0<$("#vrm-modal--remote-console").length?$(".remote-console-rotate-message-container").show():$(".remote-console-rotate-message-container").hide()}}RemoteConsoleController.$inject=["$window","$document","locale","ApiService","installation","close","$log"],angular.module("vrm.components").controller("RemoteConsoleController",RemoteConsoleController)}(),function(){"use strict";function vrmNotificationsService(locale,$timeout){var service={notifications:[],add:function(note){_.isNil(note.id)&&(note.id=_.random(1e7));_.isNil(note.title)&&(note.title=(type=note.type,locale.getString("common."+type)));var type;_.isNil(note.timeout)&&(note.timeout=5e3);return $timeout(function(){remove(note.id)},note.timeout),_.each(service.notifications,function(existingNotification){existingNotification.message===note.message&&remove(existingNotification.id)}),service.notifications.push(note),note.id},remove:remove};return service;function remove(id){var index=_.findIndex(service.notifications,{id:id});-1!==index&&service.notifications.splice(index,1)}}vrmNotificationsService.$inject=["locale","$timeout"],angular.module("vrm.components").constant("vrmNotificationType",{INFO:"info",SUCCESS:"success",DANGER:"danger",ERROR:"error",WARNING:"warning"}).service("vrmNotificationsService",vrmNotificationsService)}(),function(){"use strict";function vrmNotifications(vrmNotificationsService,$log,$window,vrmConfig){return{restrict:"E",replace:!0,templateUrl:"vrm-components/modal/notifications/notifications.template.html",link:function($scope,$element,$attr){$scope.online=!0,$scope.message=!1,$scope.notificationShown=!0,$scope.hideNotification=function(){$scope.notificationShown=!1},void 0!==vrmConfig.showGlobalMessage&&vrmConfig.showGlobalMessage&&($scope.message=vrmConfig.globalMessage,$scope.messageType=vrmConfig.globalMessageType,$scope.messageTitle=vrmConfig.globalMessageTitle);var setUp=function(){$log.info("Settting network state to up"),$scope.online=!0,$scope.$evalAsync()},setDown=function(){$log.info("Settting network state to down"),$scope.online=!1,$scope.$evalAsync()};angular.element($window).on("online",setUp),angular.element($window).on("offline",setDown),$scope.$on("$destroy",function(){angular.element($window).off("online",setUp),angular.element($window).off("offline",setDown)}),$scope.notifications=vrmNotificationsService.notifications,$scope.close=function(notification){notification&&vrmNotificationsService.remove(notification.id)},$scope.notificationClass=function(notification){return"vrm-notifications__notification--"+notification.type}}}}vrmNotifications.$inject=["vrmNotificationsService","$log","$window","vrmConfig"],angular.module("vrm.components").directive("vrmNotifications",vrmNotifications)}(),function(){"use strict";function NotificationController($scope,notification,close){return $scope.notification=notification,$scope.close=function(){$.magnificPopup.close()},{open:function(){this.bgOverlay.addClass("vrm-"+notification.type)},close:close}}NotificationController.$inject=["$scope","notification","close"],angular.module("vrm.components").controller("NotificationController",NotificationController)}(),function(){"use strict";function VrmLangService(VrmDefaultLang,UserService,ApiService,locale,$q,localStorageService,vrmUserAccessLevel){return{getLang:function(){if(ApiService.isShare()){var promise=$q.defer(),lang=localStorageService.get("language");return lang||(lang=VrmDefaultLang),promise.resolve(lang),promise.promise}return UserService.loading.then(function(user){return user.language?user.language:"en"})},setLang:function(language){if(ApiService.isShare())return localStorageService.set("language",language),void locale.setLocale(language);UserService.getUser().then(function(user){if(user.accessLevel==vrmUserAccessLevel.DEMO)return localStorageService.set("language",language),void locale.setLocale(language);ApiService.users("settings",{language:language}).then(function(){UserService.reload(),locale.setLocale(language)})})}}}VrmLangService.$inject=["VrmDefaultLang","UserService","ApiService","locale","$q","localStorageService","vrmUserAccessLevel"],angular.module("vrm.components").constant("VrmDefaultLang","en").service("VrmLangService",VrmLangService)}(),function(){"use strict";function LangSelectorController($scope,VrmLangService,close){return $scope.languages=["de","da","en","es","fr","it","pt","sv","ru"],$scope.selector={lang:null},VrmLangService.getLang().then(function(lang){$scope.selector.lang=lang;var initial=!0;$scope.$watch("selector.lang",function(lang){initial?initial=!1:VrmLangService.setLang(lang)})}),{close:close}}LangSelectorController.$inject=["$scope","VrmLangService","close"],angular.module("vrm.components").controller("LangSelectorController",LangSelectorController)}(),function(){"use strict";function InviteController($scope,ApiService,locale,vrmNotificationsService,vrmNotificationType,vrmInstallationAccessLevel,siteId,close,callback){return $scope.inviteModel={name:null,email:null,fullControl:!1},$scope.save=function(event){$scope.inviteForm.$valid&&callback($scope.inviteModel,function(){$.magnificPopup.close()})},{close:close}}InviteController.$inject=["$scope","ApiService","locale","vrmNotificationsService","vrmNotificationType","vrmInstallationAccessLevel","siteId","close","callback"],angular.module("vrm.components").controller("InviteController",InviteController)}(),function(){"use strict";function DownloadPrductionReportModalController($scope,$log,locale,close,$filter,ApiService,AdvancedGraphWidgetConfigs,widgetTypeMapping,VrmModalService,$timeout,vrmNotificationsService,vrmNotificationType){return locale.ready("datepicker").then(function(){var downloadPending=!1,maxDate=new Date,minDate=new Date(maxDate.getTime());minDate.setMonth(maxDate.getMonth()-6);var initFromDate=new Date(maxDate.getFullYear(),maxDate.getMonth(),1),initTillDate=new Date(maxDate.getTime()),monthNamesFull=[locale.getString("datepicker.january"),locale.getString("datepicker.februari"),locale.getString("datepicker.march"),locale.getString("datepicker.april"),locale.getString("datepicker.may"),locale.getString("datepicker.juni"),locale.getString("datepicker.july"),locale.getString("datepicker.august"),locale.getString("datepicker.september"),locale.getString("datepicker.october"),locale.getString("datepicker.november"),locale.getString("datepicker.december")];function getLastYearOccurence(monthIndex){var currentMonthIndex=maxDate.getMonth(),currentYear=maxDate.getFullYear();return monthIndex<=currentMonthIndex?currentYear:currentYear-1}function getMonthEndDate(year,monthIndex){if(function(year,monthIndex){return maxDate.getMonth()===monthIndex&&maxDate.getFullYear()===year}(year,monthIndex))return maxDate;var date=new Date(year,monthIndex);return new Date(date.getFullYear(),date.getMonth()+1,0)}function getRange(){var from=$scope.picker.from,till=$scope.picker.till;return $scope.selectedMonthObj.value?(from=$scope.selectedMonthObj.value.from,till=$scope.selectedMonthObj.value.to):from||till?from?till||(till=new Date(from.getFullYear(),from.getMonth()+1,0)):from=new Date(till.getFullYear(),till.getMonth(),1):(from=initFromDate,till=initTillDate),{from:from,till:till}}$scope.monthObjs=function(){for(var objs=[],i=0;i<monthNamesFull.length;i++)objs.push({monthName:monthNamesFull[i],monthIndex:i,year:getLastYearOccurence(i),postString:"",from:(year=getLastYearOccurence(i),monthIndex=i,date=void 0,void 0,date=new Date(year,monthIndex),firstDay=new Date(date.getFullYear(),date.getMonth(),1),firstDay),to:getMonthEndDate(getLastYearOccurence(i),i)});var year,monthIndex,date,firstDay;return objs.sort(function(a,b){return a=a.from,(b=b.from)<a?-1:a<b?1:0}),objs.splice(7,100),objs[objs.length-1].postString="("+locale.getString("installationoverview.starting_from")+": "+$filter("date")(minDate,"yyyy-MM-dd")+")",objs}(),$scope.selectedMonthObj={value:null},$scope.picker={fromMinDate:minDate,fromMaxDate:maxDate,tillMinDate:minDate,tillMaxDate:maxDate,from:initFromDate,till:initTillDate},$scope.pickadata={dateOptions:{clear:!1,monthsFull:monthNamesFull,weekdaysShort:[locale.getString("datepicker.short_sunday"),locale.getString("datepicker.short_monday"),locale.getString("datepicker.short_tuesday"),locale.getString("datepicker.short_wednesday"),locale.getString("datepicker.short_thursday"),locale.getString("datepicker.short_friday"),locale.getString("datepicker.short_saturday")],today:locale.getString("datepicker.today"),close:locale.getString("datepicker.close"),format:locale.getString("datepicker.format"),onSet:function(context){context.select&&($scope.selectedMonthObj.value&&($scope.picker.from||($scope.picker.from=new Date($scope.picker.till.getFullYear(),$scope.picker.till.getMonth(),1)),$scope.picker.till||($scope.picker.till=new Date($scope.picker.from.getFullYear(),$scope.picker.from.getMonth()+1,0))),$scope.selectedMonthObj.value=null,$scope.picker.till&&$scope.picker.fromMaxDate.getTime()!=$scope.picker.till.getTime()&&($scope.picker.fromMaxDate=new Date($scope.picker.till)),$scope.picker.from&&$scope.picker.tillMinDate.getTime()!=$scope.picker.from.getTime()&&($scope.picker.tillMinDate=new Date($scope.picker.from)))}},timeOptions:{clear:!1,format:"HH:i"}},$scope.setMonth=function(monthObj){$scope.picker.from=null,$scope.picker.till=null,$scope.picker.fromMaxDate=maxDate,$scope.picker.tillMinDate=minDate,$timeout(function(){$scope.selectedMonthObj.value=monthObj})},$scope.downloadReport=function(){if($.magnificPopup.close(),downloadPending)locale.ready("installationoverview").then(function(){vrmNotificationsService.add({type:vrmNotificationType.ERROR,message:locale.getString("installationoverview.download_pending")})});else{var range=getRange(),from=range.from,till=range.till;$timeout(function(){VrmModalService.openDownloadModal($scope,"installationoverview.preparing_download")},500),downloadPending=!0,ApiService.download(function(){var range=getRange(),from=range.from,till=range.till;return window.__config.reportUrl+"?start="+Math.round(new Date(Date.UTC(from.getFullYear(),from.getMonth(),from.getDate(),0,0,0)).getTime()/1e3)+"&end="+Math.round(new Date(Date.UTC(till.getFullYear(),till.getMonth(),till.getDate(),23,59,59)).getTime()/1e3)}(),null,!0).then(function(response){saveAs(response.data,"vrm_production_report_"+$filter("date")(from,"ddMMyy")+"-"+$filter("date")(till,"ddMMyy")+".xlsx"),downloadPending=!1,$.magnificPopup.close()},function(){locale.ready("installationoverview").then(function(){vrmNotificationsService.add({type:vrmNotificationType.ERROR,message:locale.getString("installationoverview.download_timeout"),timeout:3e4})}),downloadPending=!1,$.magnificPopup.close()})}}}),{close:close}}DownloadPrductionReportModalController.$inject=["$scope","$log","locale","close","$filter","ApiService","AdvancedGraphWidgetConfigs","widgetTypeMapping","VrmModalService","$timeout","vrmNotificationsService","vrmNotificationType"],angular.module("vrm.components").controller("DownloadPrductionReportModalController",DownloadPrductionReportModalController)}(),function(){"use strict";function DownloadConfigurationModalController($scope,close){return{close:close}}DownloadConfigurationModalController.$inject=["$scope","close"],angular.module("vrm.components").controller("DownloadConfigurationModalController",DownloadConfigurationModalController)}(),function(){"use strict";function DownloadModalController($scope,close,message){return $scope.message=message,{close:close}}DownloadModalController.$inject=["$scope","close","message"],angular.module("vrm.components").controller("DownloadModalController",DownloadModalController)}(),function(){"use strict";function DeleteController($scope,close,type,object,callback){return $scope.callback=function(confirmed){$.magnificPopup.close(),callback(confirmed)},$scope.type=type,$scope.object=object,{close:close}}DeleteController.$inject=["$scope","close","type","object","callback"],angular.module("vrm.components").controller("DeleteController",DeleteController)}(),function(){"use strict";function ConfirmFieldController($scope,close,action,expectedFieldValue,callback){return $scope.inputValue="",$scope.action=action,$scope.expected=expectedFieldValue.toString().toLowerCase().trim(),$scope.confirm=function(){$scope.confirmForm.$valid&&$scope.inputValue.toLowerCase().trim()===$scope.expected&&($.magnificPopup.close(),callback(!0))},{close:close}}ConfirmFieldController.$inject=["$scope","close","action","expectedFieldValue","callback"],angular.module("vrm.components").controller("ConfirmFieldController",ConfirmFieldController)}(),function(){"use strict";function ConfirmController($scope,close,action,callback){return $scope.callback=function(confirmed){$.magnificPopup.close(),callback(confirmed)},$scope.action=action,{close:close}}ConfirmController.$inject=["$scope","close","action","callback"],angular.module("vrm.components").controller("ConfirmController",ConfirmController)}(),function(){"use strict";function ConfiguringModalController($scope,close){return{close:close}}ConfiguringModalController.$inject=["$scope","close"],angular.module("vrm.components").controller("ConfiguringModalController",ConfiguringModalController)}(),function(){"use strict";function SuccessModalController($scope,close,message){return $scope.message=message,{close:close}}SuccessModalController.$inject=["$scope","close","message"],angular.module("vrm.components").controller("SuccessModalController",SuccessModalController)}(),function(){"use strict";function ErrorModalController($scope,close,message,errorMessage,errorCode){return $scope.message=message,$scope.errorMessage=errorMessage,$scope.errorCode=errorCode,{close:close}}ErrorModalController.$inject=["$scope","close","message","errorMessage","errorCode"],angular.module("vrm.components").controller("ErrorModalController",ErrorModalController)}(),function(){"use strict";function CarouselController($scope,$timeout,installation,close,VrmModalService,ApiService,vrmNotificationsService,vrmNotificationType,locale,$q){return $scope.images=installation&&installation.images?installation.images:[],$scope.index=0,$scope.initialImages=$scope.images.slice(0),$scope.loading=!0,{open:function(){var _this=this,slickSettings={adaptiveHeight:!0,prevArrow:".vrm-carousel__items-wrap__control--previous",nextArrow:".vrm-carousel__items-wrap__control--next",useTransform:!0,cssEase:"cubic-bezier(0.55, 0.055, 0.675, 0.19)",respondTo:"min"};$timeout(function(){var element=_this.content.find(".vrm-carousel__items-wrap__items");element.children().removeClass("ng-hide");var carousel=element.slick(slickSettings).slick("getSlick");element.slick("setPosition"),element.on("afterChange",function(){$scope.index=carousel.currentSlide,$scope.$digest()}),$scope.$on("$destroy",function(){element.slick("unslick")}),$scope.addPhoto=function(){var promises=[];VrmModalService.next(function(scope){VrmModalService.openUploadModal(scope,"photo",function(files){promises=[];for(var i=0;i<files.length;i++){var data=new FormData;data.append("data",files[i]),promises.push(ApiService.call("/installations/"+installation.idSite+"/photo-upload",data).then(function(response){installation.images||(installation.images=[]),installation.images.push(response.data.data),vrmNotificationsService.add({type:vrmNotificationType.SUCCESS,message:locale.getString("dashboard.photo_uploaded")})}))}}),VrmModalService.next(function(scope){$q.all(promises).then(function(){VrmModalService.openCarouselModal(scope,installation)})})}),$.magnificPopup.close()},$scope.removePhoto=function(){ApiService.call("/installations/"+installation.idSite+"/photo-delete?idSiteImage="+$scope.images[$scope.index].idSiteImage,{}).then(function(){element.slick("slickRemove",$scope.index),installation.images.splice($scope.index,1),0==installation.images.length&&element.slick("unslick"),$scope.index>=$scope.images.length&&$scope.index--})}},500)},close:close}}CarouselController.$inject=["$scope","$timeout","installation","close","VrmModalService","ApiService","vrmNotificationsService","vrmNotificationType","locale","$q"],angular.module("vrm.components").controller("CarouselController",CarouselController)}(),function(){"use strict";function AccessTokensModalController($scope,close){return{close:close}}AccessTokensModalController.$inject=["$scope","close"],angular.module("vrm.components").controller("AccessTokensModalController",AccessTokensModalController)}(),function(){"use strict";function widgetTypeFilter(widgetTypes){return function(data){return widgetTypes[data.code]}}widgetTypeFilter.$inject=["widgetTypes"],angular.module("vrm.components").filter("widgetTypeFilter",widgetTypeFilter).constant("widgetTypes",{AcInputFrequency:"graph",AcInputPower:"graph",AcInputVoltageAndCurrent:"graph",SolarChargerVoltageAndCurrent:"graph",AcOutputFrequency:"graph",AcOutputPower:"graph",AcOutputVoltageAndCurrent:"graph",BatterySoc:"graph",SystemBatterySoc:"graph",BatteryTemperature:"graph",BatteryVoltageAndCurrent:"graph",SystemBatteryVoltageAndCurrent:"graph",DcVoltageAndCurrent:"graph",IOExtenderTemperature:"graph",MotorAndControllerTemperature:"graph",MotorRPMAndControllerPower:"graph",PVInverterYield:"graph",SolarChargerPVYield:"graph",StarterBatteryVoltage:"graph",SystemAcConsumption:"graph",SystemAcGenset:"graph",SystemGrid:"graph",VeBusSoc:"graph",VeBusWarningsAndAlarms:"state",VeBusState:"state",MPPTState:"state",BatterySummary:"summary",BMSDiagnostics:"summary",HistoricData:"summary",IOExtenderInOut:"summary",LithiumBMS:"summary",MotorSummary:"summary",PVInverterStatus:"summary",SolarChargerSummary:"summary",TankSummary:"summary",Status:"summary",Alarm:"alarm",GPSWidget:"gps",VeConfigure:"ve",SystemBatteryPower:"graph",TempSummary:"summary",TempGraph:"graph",TempSummaryAndGraph:"summary-graph",SystemDcSystem:"graph",SolarChargerLoadoutputCurrent:"graph",SystemPVYield:"graph",TankLevel:"graph"}).constant("widgetTypeMapping",{State:"VeBusState",BatteryTempSensor:"BatteryTemperature",IOExtenderTempSensor:"IOExtenderTemperature",MotorTemperatureAndControllerTemperature:"MotorAndControllerTemperature"})}(),function(){"use strict";angular.module("vrm.components").directive("vrmVeconfigureWidget",function(){return controller.$inject=["$scope","locale","ApiService","vrmNotificationsService","vrmNotificationType"],{restrict:"E",templateUrl:"vrm-components/veconfigure-widget/veconfigure-widget.template.html",controller:controller,scope:{installation:"=",range:"="}};function controller($scope,locale,ApiService,vrmNotificationsService,vrmNotificationType){$scope.$watch("installation",function(installation){null!=installation&&ApiService.installations(installation.id,"ve-configure-list").then(function(response){$scope.files=response.data.data})}),$scope.download=function(file){$scope.selected=null,ApiService.download(file.url,null).then(function(response){saveAs(response.data,file.name)})},$scope.replace=function(files){if(files[0]){var file=files[0],data=new FormData,currentFile=$scope.selected;$scope.selected=null,data.append("data",file),data.append("filename",currentFile.name),ApiService.installations($scope.installation.id,"ve-configure-upload",data,"POST").then(function(response){vrmNotificationsService.add({type:vrmNotificationType.SUCCESS,message:locale.getString("advanced.ve_uploaded")}),currentFile.timestamp=Date.now()/1e3})}},$scope.select=function(file){$scope.selected=file},$scope.close=function(){$scope.selected=null}}})}(),function(){"use strict";function vrmValidation($log,$compile){return{scope:!0,restrict:"A",require:"^^form",link:function($scope,$element,$attr,$ctrl){$scope.form=$ctrl,$scope.control=$ctrl[$attr.name],$scope.$watch(function(){return($scope.control.$touched||$scope.form.$submitted)&&$scope.control.$invalid},function(hasError){$element.toggleClass("sg-error",hasError)});var $messages=$element.siblings(".vrm-form_input-errors");if(0==$messages.length)$element.after($compile('<div class="vrm-form_input-errors" ng-show="form.$submitted" ng-messages="control.$error" ng-message-multiple><span ng-messages-include="messages.html"></span></div>')($scope));else{var $messageInclude=angular.element('<span ng-messages-include="messages.html"></span>');$messages.append($messageInclude),$compile($messageInclude)}}}}vrmValidation.$inject=["$log","$compile"],angular.module("vrm.components").directive("vrmValidation",vrmValidation)}(),function(){"use strict";function isEmpty(value){return angular.isUndefined(value)||""===value||null===value||value!=value}angular.module("vrm.components").directive("vrmValidationMin",function(){return{restrict:"A",require:"ngModel",link:function(scope,elem,attr,ctrl){scope.$watch(function(){return scope.$eval(attr.vrmValidationMin)},ctrl.$validate),ctrl.$validators.vrmMin=function(modelValue,viewValue){if(isEmpty(scope.$eval(attr.vrmValidationMin)))return!0;var value=modelValue||viewValue,min=scope.$eval(attr.vrmValidationMin);return isEmpty(value)||parseFloat(value)>=parseFloat(min)}}}}).directive("vrmValidationMinStrict",function(){return{restrict:"A",require:"ngModel",link:function(scope,elem,attr,ctrl){scope.$watch(function(){return scope.$eval(attr.vrmValidationMinStrict)},ctrl.$validate),ctrl.$validators.vrmMin=function(modelValue,viewValue){if(isEmpty(scope.$eval(attr.vrmValidationMinStrict)))return!0;var value=modelValue||viewValue,min=scope.$eval(attr.vrmValidationMinStrict);return isEmpty(value)||parseFloat(value)>parseFloat(min)}}}}).directive("vrmValidationMax",function(){return{restrict:"A",require:"ngModel",link:function(scope,elem,attr,ctrl){scope.$watch(function(){return scope.$eval(attr.vrmValidationMax)},ctrl.$validate),ctrl.$validators.vrmMax=function(modelValue,viewValue){if(isEmpty(scope.$eval(attr.vrmValidationMax)))return!0;var value=modelValue||viewValue,max=scope.$eval(attr.vrmValidationMax);return isEmpty(value)||parseFloat(value)<=parseFloat(max)}}}}).directive("vrmValidationMaxStrict",function(){return{restrict:"A",require:"ngModel",link:function(scope,elem,attr,ctrl){scope.$watch(function(){return scope.$eval(attr.vrmValidationMaxStrict)},ctrl.$validate),ctrl.$validators.vrmMaxStrict=function(modelValue,viewValue){if(isEmpty(scope.$eval(attr.vrmValidationMaxStrict)))return!0;var value=modelValue||viewValue,max=isEmpty(scope.$eval(attr.vrmValidationMaxStrict))?1/0:scope.$eval(attr.vrmValidationMaxStrict);return isEmpty(value)||parseFloat(value)<parseFloat(max)}}}})}(),function(){"use strict";angular.module("vrm.components").directive("vrmValidationInstallationId",function(){return{restrict:"A",require:"ngModel",link:function($scope,$element,$attr,ngModel){$scope.$watch("device",ngModel.$validate,!0),ngModel.$validators.installationId=function(modelValue,viewValue){return"vgr_ver"==$scope.device||_.isString(modelValue)&&12<=modelValue.length},ngModel.$validators.imei=function(modelValue,viewValue){return"ccgx"==$scope.device||"vgx"==$scope.device||"lorawan"==$scope.device||_.isString(modelValue)&&15<=modelValue.length}}}})}(),function(){"use strict";angular.module("vrm.components").directive("vrmValidationCompareTo",function(){return{scope:{otherModelValue:"=vrmValidationCompareTo"},restrict:"A",require:"ngModel",link:function($scope,$element,$attr,ngModel){ngModel.$validators.compareTo=function(modelValue){return modelValue==scope.otherModelValue},$scope.$watch("otherModelValue",function(){ngModel.$validate()})}}})}(),function(){"use strict";angular.module("vrm.components").provider("vrmTooltipConfiguration",function(){this.$get=function(){return function(){}}})}(),function(){"use strict";function vrmTooltip($log,$compile){return{restrict:"A",scope:{tooltipContent:"@vrmTooltip"},link:function($scope,$element,$attr){$scope.tether=null;var isBefore=$element.hasClass("vrm-tooltip--bottom")||$element.hasClass("vrm-tooltip--right"),generatedTooltip=$compile('<div class="vrm-tooltip">'+(isBefore?"":'<div class="vrm-tooltip__content" data-i18n="{{tooltipContent}}"></div>')+'<div class="vrm-tooltip__arrow"><div class="vrm-tooltip__arrow-inner"></div></div>'+(isBefore?'<div class="vrm-tooltip__content" data-i18n="{{tooltipContent}}"></div>':"")+"</div>")($scope);function _clearTether(){null!=$scope.tether&&$scope.tether.destroy()}_.each(["vrm-tooltip--arrow-left","vrm-tooltip--arrow-right","vrm-tooltip--bottom","vrm-tooltip--light"],function(curClass){$element.hasClass(curClass)?generatedTooltip.addClass(curClass):generatedTooltip.removeClass(curClass)}),$element.on("mouseover",function(){$element.after(generatedTooltip),generatedTooltip.addClass("vrm-active");var attachment="bottom center",targetAttachment="top center";$element.hasClass("vrm-tooltip--bottom")?(attachment="top center",targetAttachment="bottom center"):$element.hasClass("vrm-tooltip--right")&&(attachment="middle left",targetAttachment="middle right"),_clearTether(),$scope.tether=new Tether({element:generatedTooltip,target:$element,attachment:attachment,targetAttachment:targetAttachment,targetOffset:"-15px 0",constraints:[{to:"window",pin:["left","right"]}]})}),$element.on("mouseout",function(){generatedTooltip.removeClass("vrm-active"),_clearTether()}),$scope.$on("$destroy",function(){$element.off(),_clearTether()})}}}vrmTooltip.$inject=["$log","$compile"],angular.module("vrm.components").directive("vrmTooltip",vrmTooltip)}(),function(){"use strict";function vrmToggle($log){return{scope:{on:"=",off:"=",disabled:"="},restrict:"E",require:"?ngModel",templateUrl:"vrm-components/toggles/toggle-custom.template.html",link:link}}function link($scope,$element,$attr,ngModeController){$scope.iconClass=$attr.iconClass,$scope.customClass=void 0!==$attr.customClass&&$attr.customClass?$attr.customClass:"",$attr.$observe("customClass",function(val){$scope.customClass=val}),ngModeController?(ngModeController.$render=function(){$scope.toggle=ngModeController.$viewValue},$scope.$watch("toggle",function(active){active&&$attr.focus&&$("#"+$attr.focus).focus(),ngModeController.$setViewValue(active)})):$scope.toggle=!1}vrmToggle.$inject=["$log"],angular.module("vrm.components").directive("vrmToggle",vrmToggle).directive("vrmToggleButton",function(){return{scope:!0,restrict:"E",require:"?ngModel",templateUrl:"vrm-components/toggles/toggle-button.template.html",transclude:!0,link:link}}).directive("vrmToggleCheckmark",function(){return{scope:!0,restrict:"E",require:"?ngModel",transclude:!0,templateUrl:"vrm-components/toggles/toggle-checkmark.template.html",link:link}})}(),function(){"use strict";function tagsList($log){return{restrict:"E",templateUrl:"vrm-components/tags-list/tags-list.template.html",scope:{tags:"="},link:function($scope){$scope.containsAlarm=function(tag){return!!tag.name&&("no-alarm"!==tag.name&&("nodata"===tag.name||tag.name.includes("alarm")))},$scope.containsWarning=function(tag){return!!tag.name&&tag.name.includes("?")}}}}tagsList.$inject=["$log"],angular.module("vrm.components").directive("tagsList",tagsList)}(),function(){"use strict";function vrmTags($log){return{scope:{tags:"="},restrict:"E",templateUrl:"vrm-components/tags/tags.template.html",link:function($scope){}}}vrmTags.$inject=["$log"],angular.module("vrm.components").directive("vrmTags",vrmTags)}(),function(){"use strict";angular.module("vrm.components").filter("validSummaryDataFilter",function(){return function(data){return _.filter(data,function(item){return null!=item&&"object"==typeof item&&"code"in item})}}).filter("notExtendedFilter",function(){return function(data,extended){return _.filter(data,function(item){return extended.indexOf(item.code)<0})}})}(),function(){"use strict";angular.module("vrm.components").directive("vrmSummaryWidget",function(){return controller.$inject=["MQTTService","$scope","ApiService","AdvancedSummaryWidgetConfigs"],{restrict:"E",templateUrl:"vrm-components/summary-widget/summary-widget.template.html",controller:controller,scope:{installation:"=",type:"=",instance:"=",title:"=",subTitle:"=",tooltip:"="}};function controller(MQTTService,$scope,ApiService,AdvancedSummaryWidgetConfigs){if($scope.extended=[],AdvancedSummaryWidgetConfigs[$scope.type]){for(var i in $scope.extended.push(AdvancedSummaryWidgetConfigs[$scope.type].status),AdvancedSummaryWidgetConfigs[$scope.type].extended)if("function"!=typeof AdvancedSummaryWidgetConfigs[$scope.type].extended[i])for(var j in AdvancedSummaryWidgetConfigs[$scope.type].extended[i])for(var n in AdvancedSummaryWidgetConfigs[$scope.type].extended[i][j])$scope.extended.push(AdvancedSummaryWidgetConfigs[$scope.type].extended[i][j][n]);for(var i in AdvancedSummaryWidgetConfigs[$scope.type].subdata)"function"!=typeof AdvancedSummaryWidgetConfigs[$scope.type].subdata[i]&&$scope.extended.push(AdvancedSummaryWidgetConfigs[$scope.type].subdata[i]);for(var i in AdvancedSummaryWidgetConfigs[$scope.type].hide)$scope.extended.push(AdvancedSummaryWidgetConfigs[$scope.type].hide[i])}$scope.widgetConfig=AdvancedSummaryWidgetConfigs[$scope.type],$scope.extra={},$scope.attributeOrder=[],$scope.sortAttributes=function(record){return $scope.attributeOrder.indexOf(parseInt(record.idDataAttribute))},$scope.$watch("installation",function(installation){if(null!=installation){var url="widgets/"+$scope.type;if($scope.instance&&(url+="?instance="+$scope.instance),ApiService.installations(installation.id,url).then(function(response){$scope.data=_.clone(response.data),$scope.attributeOrder=response.data.records.attributeOrder;var data={};_.each(response.data.records.data,function(record,key){record.code?(record.dataType&&record.dbusPath&&(record.mqttFetcher=_.bind(function(message){var value=message.payload.value,isEnum=!1;void 0!==this.dataAttributeEnumValues&&_.each(this.dataAttributeEnumValues,function(enumVal){enumVal.valueEnum==value&&(value=enumVal.nameEnum,isEnum=!0)}),this.valueFormattedValueOnly=isEnum?value:sprintf(this.formatValueOnly.replace("F","f"),value),this.valueFormattedWithUnit=isEnum?value:sprintf(this.formatWithUnit.replace("F","f"),value)},record)),data[record.code]=record):data[key]=record}),$scope.data.records.data=data}),$scope.widgetConfig)for(var index in $scope.widgetConfig.urls)ApiService.installations(installation.id,$scope.widgetConfig.urls[index]).then(function(response){$scope.extra[index]=response.data})}}),$scope.typeOf=function(item){return typeof item},$scope.getField=function(fieldName){return $scope.data&&$scope.data.records?_.find($scope.data.records.data,{code:fieldName}):null},$scope.isCurrent=function(format){return format&&0<=format.indexOf("A")&&-1===format.indexOf("V")},$scope.$on("$destroy",function(){void 0!==$scope.data&&void 0!==$scope.data.records&&_.each($scope.data.records.data,function(record){void 0!==record.mqttFetcher&&record.mqttFetcher&&(record.mqttFetcher=null,MQTTService.unsubScribeFromPath({identifier:$scope.installation.identifier,dbusServiceType:record.dbusServiceType,dbusPath:record.dbusPath,instance:record.instance,callbackIdentifier:"summarywidget_"+$scope.type}))})})}}).constant("AdvancedSummaryWidgetConfigs",{Status:{extended:{"advanced.ac_input":[["IV1","II1","IP1"],["IV2","II2","IP2"],["IV3","II3","IP3"]],"advanced.ac_output":[["OV1","OI1","OP1"],["OV2","OI2","OP2"],["OV3","OI3","OP3"]],"advanced.dc":[["CV","CI"]],"advanced.hours_of_ac":function($scope){return[$scope.extra.hours&&$scope.extra.hours.records.data?$scope.extra.hours.records.data+" hours":"-"]}},urls:{hours:"widgets/HoursOfAC"},status:"S"},PVInverterStatus:{extended:{"advanced.ac_input":[["pV1","pI1","pP1"],["pV2","pI2","pP2"],["pV3","pI3","pP3"]],"advanced.ac_total":function($scope){function parseField(fieldName){var field=$scope.getField(fieldName);return field?parseFloat(field.valueFloat):0}var totalI=_.sum(_.map(["pI1","pI2","pI3"],parseField)),totalP=_.sum(_.map(["pP1","pP2","pP3"],parseField));return totalI===parseField("pI1")||0===totalI?[]:[null,totalI.toFixed(2)+" A",Math.floor(totalP)+" W"]},"advanced.energy":[["pE1"],["pE2"],["pE3"]]},status:"pS"},BatterySummary:{extended:{"advanced.voltage_and_current":[["V","I"]],"advanced.power":function($scope){var value=null;return $scope.getField("V")&&$scope.getField("I")&&(value=(parseFloat($scope.getField("V").valueFloat)*parseFloat($scope.getField("I").valueFloat)).toFixed(2)+" W"),[value]},"advanced.mid_voltage":function($scope){var value=null;return $scope.getField("VM")&&$scope.getField("VMD")&&(value="Top: "+sprintf($scope.getField("V").formatWithUnit.replace("F","f"),$scope.getField("V").valueFloat-$scope.getField("VM").valueFloat)+"; bot: "+$scope.getField("VM").valueFormattedWithUnit+"; dev: "+$scope.getField("VMD").valueFormattedWithUnit),value?[value]:[]}},subdata:{SOC:function($scope){return 0<$scope.getField("TTG").valueFloat?"TTG":null}},hide:["VM","VMD","TTG","AL","AH","ALS","AHS","ASoc","ALT","AHT","AM"]},TankSummary:{extended:{"advanced.tank_capacity":function($scope){var value=null;return $scope.getField("tc")&&(value=$scope.getField("tc").valueFormattedValueOnly,value=parseFloat(value)<1?Math.round(1e3*parseFloat(value)*100)/100+" L":$scope.getField("tc").valueFormattedWithUnit),value?[value]:[]},"advanced.tank_remaining_fluid":function($scope){var value=null;return $scope.getField("tr")&&(value=$scope.getField("tr").valueFormattedValueOnly,value=parseFloat(value)<1?Math.round(1e3*parseFloat(value)*100)/100+" L":$scope.getField("tr").valueFormattedWithUnit),value?[value]:[]}},hide:["tr","tc"]}})}(),function(){"use strict";angular.module("vrm.components").directive("vrmSummaryGraphWidget",function(){return controller.$inject=["MQTTService","$scope","ApiService","AdvancedSummaryGraphWidgetConfigsSummaries","$q","GraphService","AdvancedSummaryGraphWidgetConfigsGraphs","locale"],{restrict:"E",templateUrl:"vrm-components/summary-graph-widget/summary-graph-widget.template.html",controller:controller,scope:{installation:"=",type:"=",loading:"=",instance:"=",title:"=",subTitle:"=",tooltip:"=",graphData:"=",zoomstate:"=",range:"="}};function controller(MQTTService,$scope,ApiService,AdvancedSummaryGraphWidgetConfigsSummaries,$q,GraphService,AdvancedSummaryGraphWidgetConfigsGraphs,locale){var loaded=!1;function setZoomState(zoomstate){if($scope.chart&&$scope.chart.getHighcharts){var chart=$scope.chart.getHighcharts();if(!chart.xAxis)return;chart.xAxis[0].setExtremes(zoomstate.min,zoomstate.max,void 0,!1,{trigger:"syncZoom"}),chart.resetZoomButton&&null==zoomstate.min?chart.resetZoomButton=chart.resetZoomButton.destroy():chart.resetZoomButton||null==zoomstate.min||chart.showResetZoom(),$scope.$applyAsync()}else $scope.chart&&zoomstate.min&&_.defer(_.once(function(){setZoomState(zoomstate)}))}if($scope.inview=!1,$scope.$watch("type",function(){$scope.meta=AdvancedSummaryGraphWidgetConfigsGraphs[$scope.type],$scope.current=$scope.meta[0]}),$scope.setCurrent=function(meta){$scope.current=meta},$scope.$watch("loading",function(loading){$scope.chart&&($scope.chart.loading=loading)}),$q.all([GraphService.ready(),locale.ready("advanced")]).then(function(){function load(){$scope.inview&&!loaded&&$scope.graphData&&(loaded=!0,$scope.chart||($scope.chart=GraphService.getAdvancedConfig($scope.current.fields,$scope.current.extraOptions)),$scope.metas=_.filter($scope.graphData.meta,function(field){return $scope.current.fields.hasOwnProperty(field.code)}),$scope.current.allowSum&&$scope.metas.push({description:locale.getString("advanced.total"),formatWithUnit:"",formatValueOnly:""}),GraphService.updateConfig($scope.chart,$scope.graphData,$scope.current.fields,!!$scope.current.allowSum,$scope.range),$scope.chart.xAxis.events||($scope.chart.xAxis.events={}),$scope.chart.xAxis.events.setExtremes=function(e){"zoom"===e.trigger&&($scope.zoomstate.min=e.min?e.min:null,$scope.zoomstate.max=e.max?e.max:null,$scope.$evalAsync())},setZoomState($scope.zoomstate),$scope.$watch("zoomstate",setZoomState,!0))}$scope.$watchGroup(["installation","graphData","current"],function(){loaded=!1,load()}),$scope.$watchGroup(["inview"],load)}),$scope.extended=[],AdvancedSummaryGraphWidgetConfigsSummaries[$scope.type]){for(var i in $scope.extended.push(AdvancedSummaryGraphWidgetConfigsSummaries[$scope.type].status),AdvancedSummaryGraphWidgetConfigsSummaries[$scope.type].extended)if("function"!=typeof AdvancedSummaryGraphWidgetConfigsSummaries[$scope.type].extended[i])for(var j in AdvancedSummaryGraphWidgetConfigsSummaries[$scope.type].extended[i])for(var n in AdvancedSummaryGraphWidgetConfigsSummaries[$scope.type].extended[i][j])$scope.extended.push(AdvancedSummaryGraphWidgetConfigsSummaries[$scope.type].extended[i][j][n]);for(var i in AdvancedSummaryGraphWidgetConfigsSummaries[$scope.type].subdata)$scope.extended.push(AdvancedSummaryGraphWidgetConfigsSummaries[$scope.type].subdata[i]);for(var i in AdvancedSummaryGraphWidgetConfigsSummaries[$scope.type].hide)$scope.extended.push(AdvancedSummaryGraphWidgetConfigsSummaries[$scope.type].hide[i])}$scope.widgetConfig=AdvancedSummaryGraphWidgetConfigsSummaries[$scope.type],$scope.extra={},$scope.attributeOrder=[],$scope.sortAttributes=function(record){return $scope.attributeOrder.indexOf(parseInt(record.idDataAttribute))},$scope.$watch("installation",function(installation){if(null!=installation){var url="widgets/"+$scope.type;if($scope.instance&&(url+="?instance="+$scope.instance),ApiService.installations(installation.id,url).then(function(response){$scope.data=_.clone(response.data),$scope.attributeOrder=response.data.records.attributeOrder;var data={};_.each(response.data.records.data,function(record,key){record.code?(record.dataType&&record.dbusPath&&(record.mqttFetcher=_.bind(function(message){var value=message.payload.value,isEnum=!1;void 0!==this.dataAttributeEnumValues&&_.each(this.dataAttributeEnumValues,function(enumVal){enumVal.valueEnum==value&&(value=enumVal.nameEnum,isEnum=!0)}),this.valueFormattedValueOnly=isEnum?value:sprintf(this.formatValueOnly.replace("F","f"),value),this.valueFormattedWithUnit=isEnum?value:sprintf(this.formatWithUnit.replace("F","f"),value)},record)),data[record.code]=record):data[key]=record}),$scope.data.records.data=data}),$scope.widgetConfig)for(var index in $scope.widgetConfig.urls)ApiService.installations(installation.id,$scope.widgetConfig.urls[index]).then(function(response){$scope.extra[index]=response.data})}}),$scope.typeOf=function(item){return typeof item},$scope.getField=function(fieldName){return $scope.data&&$scope.data.records?_.find($scope.data.records.data,{code:fieldName}):null},$scope.isCurrent=function(format){return format&&0<=format.indexOf("A")&&-1===format.indexOf("V")},$scope.$on("$destroy",function(){void 0!==$scope.data&&void 0!==$scope.data.records&&_.each($scope.data.records.data,function(record){void 0!==record.mqttFetcher&&record.mqttFetcher&&(record.mqttFetcher=null,MQTTService.unsubScribeFromPath({identifier:$scope.installation.identifier,dbusServiceType:record.dbusServiceType,dbusPath:record.dbusPath,instance:record.instance,callbackIdentifier:"summarywidget_"+$scope.type}))})})}}).constant("AdvancedSummaryGraphWidgetConfigsSummaries",{TempSummaryAndGraph:{hide:["tsP","tso","tsc"]}}).constant("AdvancedSummaryGraphWidgetConfigsGraphs",{TempSummaryAndGraph:[{extraOptions:{yAxis:[{maxPadding:.2,minPadding:0,forceTickAt0:!0}]},fields:{tsT:null}}]})}(),function(){"use strict";angular.module("vrm.components").directive("vrmStateWidget",function(){return controller.$inject=["$scope","$q","ApiService","GraphService","AdvancedStateWidgetConfigs","GraphConfigTypes"],{restrict:"E",templateUrl:"vrm-components/state-widget/state-widget.template.html",controller:controller,scope:{installation:"=",type:"=",instance:"=",title:"=",subTitle:"=",tooltip:"=",range:"=",zoomstate:"="}};function controller($scope,$q,ApiService,GraphService,AdvancedStateWidgetConfigs,GraphConfigTypes){var loaded=!1;function setZoomState(zoomstate){if($scope.chart&&$scope.chart.getHighcharts){var chart=$scope.chart.getHighcharts();if(!chart.xAxis)return;chart.yAxis[0].setExtremes(zoomstate.min,zoomstate.max,void 0,!1,{trigger:"syncZoom"}),chart.resetZoomButton&&null==zoomstate.min?chart.resetZoomButton=chart.resetZoomButton.destroy():chart.resetZoomButton||null==zoomstate.min||chart.showResetZoom(),$scope.$applyAsync()}else $scope.chart&&zoomstate.min&&_.defer(_.once(function(){setZoomState(zoomstate)}))}$scope.inview=!1,$scope.$watch("type",function(){$scope.meta=AdvancedStateWidgetConfigs[$scope.type],$scope.current=$scope.meta[0]}),$scope.setCurrent=function(meta){$scope.current=meta},$q.all([GraphService.ready()]).then(function(){function load(){if($scope.inview&&!loaded&&(void 0===document.hidden||!document.hidden)&&($scope.chart||($scope.chart=GraphService.getConfig($scope.current.reversed?GraphConfigTypes.advancedReversedState:GraphConfigTypes.advancedState)),loaded=!0,$scope.chart.yAxis.events||($scope.chart.yAxis.events={}),$scope.chart.yAxis.events.setExtremes=function(e){"zoom"===e.trigger&&($scope.zoomstate.min=e.min?e.min:null,$scope.zoomstate.max=e.max?e.max:null,$scope.$evalAsync())},setZoomState($scope.zoomstate),$scope.$watch("zoomstate",setZoomState,!0),null!=$scope.installation)){var url="widgets/"+$scope.type+"?start="+$scope.range.startDate+"&end="+$scope.range.endDate;$scope.instance&&(url+="&instance="+$scope.instance),$scope.chart.loading=!0,ApiService.installations($scope.installation.id,url).then(function(response){$scope.data=response.data,$scope.chart.loading=!1,$scope.current.reversed?GraphService.updateReversedStateConfig($scope.chart,response.data.records,$scope.range,$scope.current.fields,$scope.current.ignore):GraphService.updateStateConfig($scope.chart,response.data.records,$scope.range,$scope.current.fields)})}}$scope.$watchGroup(["range.startDate","range.endDate","current"],function(e){loaded=!1,load()}),$scope.$watchGroup(["installation","inview"],function(){load()})})}}).constant("AdvancedStateWidgetConfigs",{VeBusWarningsAndAlarms:[{reversed:!0,fields:{eT:null,eT1:null,eT2:null,eT3:null,eL:null,eL1:null,eL2:null,eL3:null,eO:null,eO1:null,eO2:null,eO3:null},ignore:[0]}],MPPTState:[{fields:{ScS:null}}],VeBusState:[{fields:{S:null}}]})}(),function(){"use strict";angular.module("vrm.components").directive("vrmSortable",function(){return controller.$inject=["$scope"],{restrict:"E",transclude:!0,scope:!0,link:function($scope,$element,$attr,$controller,$transclude){$transclude($scope,function(clone,$scope){$element.append(clone)})},controller:controller};function controller($scope){var lastSortedValue;$scope.sortType="name",$scope.sortReverse=!1,$scope.isAscendingOrDescending=function(input){if(input===$scope.sortType)return!1===$scope.sortReverse?"vrm-table--sort-ascending":"vrm-table--sort-descending"},$scope.sortOnType=function(input){$scope.sortType=input,$scope.sortReverse=lastSortedValue==input&&!$scope.sortReverse,lastSortedValue=input}}})}(),function(){"use strict";function VrmModalService(ModalService){var nextCallback=null;return{openLanguageModal:function(scope){openModal({templateUrl:"vrm-components/modal/lang/lang-selector.template.html",controller:"LangSelectorController",scope:scope})},openDownloadModal:function(scope,message){openModal({templateUrl:"vrm-components/modal/download/download.template.html",controller:"DownloadModalController",scope:scope,enableClose:!1,inputs:{message:message}})},openWysiwygModal:function(scope,document,saveCallback){openModal({templateUrl:"vrm-components/modal/wysiwyg/wysiwyg.template.html",controller:"WysiwygController",scope:scope,inputs:{document:document,save:saveCallback}})},openShareModal:function(scope,installation){openModal({templateUrl:"vrm-components/modal/share/share.template.html",controller:"ShareController",scope:scope,inputs:{installation:installation}})},openCarouselModal:function(scope,installation){openModal({templateUrl:"vrm-components/modal/carousel/carousel.template.html",controller:"CarouselController",scope:scope,inputs:{installation:installation}})},openNotificationModal:function(notification,scope){openModal({templateUrl:"vrm-components/modal/notifications/notification.template.html",controller:"NotificationController",scope:scope,inputs:{notification:notification}})},openUploadModal:function(scope,type,callback,extraData){void 0===extraData&&(extraData={});openModal({templateUrl:"vrm-components/modal/upload/upload-modal.template.html",controller:"UploadController",scope:scope,inputs:{type:type,callback:callback,extraData:extraData}})},openRemoteConsoleModal:function(scope,installation){openModal({templateUrl:"vrm-components/modal/remote-console/remote-console.template.html",controller:"RemoteConsoleController",scope:scope,inputs:{installation:installation}})},openInviteModal:function(scope,siteId,callback){openModal({templateUrl:"vrm-components/modal/invite/invite.template.html",controller:"InviteController",scope:scope,inputs:{siteId:siteId,callback:callback}})},openDeleteModal:function(scope,type,object,callback){openModal({templateUrl:"vrm-components/modal/delete/delete-modal.template.html",controller:"DeleteController",scope:scope,inputs:{type:type,object:object,callback:callback}})},openConfirmModal:function(scope,action,callback){openModal({templateUrl:"vrm-components/modal/confirm/confirm-modal.template.html",controller:"ConfirmController",scope:scope,inputs:{action:action,callback:callback}})},openConfirmFieldModal:function(scope,action,expectedFieldValue,callback){openModal({templateUrl:"vrm-components/modal/confirm-field/confirm-field-modal.template.html",controller:"ConfirmFieldController",scope:scope,inputs:{action:action,expectedFieldValue:expectedFieldValue,callback:callback}})},openReportingModal:function(scope){openModal({templateUrl:"vrm-components/modal/reporting/reporting.template.html",controller:"ReportingModalController",scope:scope})},openUpdateDeviceModal:function(scope){openModal({templateUrl:"vrm-components/modal/update-device/update-device-modal.template.html",controller:"UpdateDeviceController",scope:scope,enableClose:!1,removalDelay:0})},openWarningModal:function(scope,callback,action,description){openModal({templateUrl:"vrm-components/modal/warning/warning-modal.template.html",controller:"WarningController",scope:scope,inputs:{callback:callback,action:action,description:description}})},openDownloadConfigurationModal:function(scope){openModal({templateUrl:"vrm-components/modal/download-configuration/download-configuration.template.html",controller:"DownloadConfigurationModalController",scope:scope,enableClose:!1,removalDelay:0})},openConfiguringModal:function(scope){openModal({templateUrl:"vrm-components/modal/configuring/configuring.template.html",controller:"ConfiguringModalController",scope:scope,enableClose:!1,removalDelay:0})},openDownloadProductionReportModal:function(scope){openModal({templateUrl:"vrm-components/modal/download-production-report/download-production-report.template.html",controller:"DownloadPrductionReportModalController",scope:scope})},openAccessTokenModal:function(scope,token){openModal({templateUrl:"vrm-components/modal/access-tokens/access-tokens-modal.template.html",controller:"AccessTokensModalController",scope:scope,enableClose:!0,inputs:{token:token}})},openSuccessModal:function(scope,message){openModal({templateUrl:"vrm-components/modal/common-modals/success.template.html",controller:"SuccessModalController",scope:scope,enableClose:!0,inputs:{message:message}})},openErrorModal:function(scope,message,errorMessage,errorCode){openModal({templateUrl:"vrm-components/modal/common-modals/error.template.html",controller:"ErrorModalController",scope:scope,enableClose:!0,inputs:{message:message,errorMessage:errorMessage,errorCode:errorCode}})},next:function(callback){nextCallback=callback}};function openModal(options){options.enableClose=void 0===options.enableClose||options.enableClose,options.removalDelay=void 0!==options.removalDelay?options.removalDelay:500,ModalService.showModal({templateUrl:options.templateUrl,controller:options.controller,scope:options.scope,inputs:options.inputs}).then(function(modal){$.magnificPopup.open({items:{src:modal.element,type:"inline"},removalDelay:options.removalDelay,mainClass:"mfp-zoom-in",enableEscapeKey:!1,closeMarkup:'<span class="vrm-modal__close-handle sg-vrm-icon_60_cross-round-16px mfp-close"></span>',showCloseBtn:options.enableClose,closeOnBgClick:options.enableClose,callbacks:{open:modal.controller.open,close:function(){if(modal.controller.close(),null!=nextCallback){var callback=nextCallback;nextCallback=null,callback(options.scope)}}}})})}}VrmModalService.$inject=["ModalService"],angular.module("vrm.components").service("VrmModalService",VrmModalService)}(),function(){"use strict";angular.module("vrm.components").filter("navInstallationFilter",function(){return function(installations,searchInputValue){var output=[],search=searchInputValue.toLowerCase();return _.size(installations)&&(output=0===search.length?_.toArray(installations):_.filter(installations,function(installation){var name=installation.name?installation.name.toString():"";return-1<name.toLowerCase().indexOf(search)})),output}})}(),function(){"use strict";function vrmNav($state,$rootScope,ApiService,VrmModalService,vrmConfig){return controller.$inject=["$timeout","$scope","$rootScope","$state","$window","vrmNavToggleEvent","VrmModalService","VrmLangService","InstallationsService","localeEvents","locale","vrmNotificationType","vrmNotificationsService","localStorageService"],{scope:{installations:"=",activeInstallation:"=",user:"=",loading:"="},restrict:"E",templateUrl:"vrm-components/nav/nav.template.html",controller:controller,link:function($scope,$element,$attr){$scope.$state=$state,$scope.searchInstallation="",$scope.mqttEnabled=vrmConfig.enableMQTT,$scope.searchingForPortalId=!1,$scope.isActiveInstallationInList=function(){return!$scope.activeInstallation||null!=_.find($scope.installations,{idSite:$scope.activeInstallation.idSite})},$scope.$watch("searchInstallation",function(search){_.isString(search)&&12<=search.length&&$rootScope.userState.isAdmin?($scope.searchingForPortalId=!0,$scope.openMenu("installations"),ApiService.admin("installations",{"filter[identifier]":search}).then(function(response){$scope.searchingForPortalId=!1,response.data.num_records<1||_.each(response.data.records,function(record){record.identifier.toLowerCase()==search.toLowerCase()&&($state.go("base.installation.dashboard",{id:record.idSite}),$scope.searchInstallation="")})})):_.isString(search)&&1<=search.length&&$scope.openMenu("installations")}),$scope.goToResultsOnEnter=function($event){var keyCode=$event.which||$event.keyCode;13===keyCode&&$state.go("base.installation-overview",{search:$scope.searchInstallation})},$scope.openWysiwygModal=function(installation){VrmModalService.openWysiwygModal($scope,{title:installation.name,content:installation.notes},function(document){return ApiService.installationSettings(installation.id,{notes:document.content}).then(function(){installation.notes=document.content})})},$scope.openShareModal=function(installation){VrmModalService.openShareModal($scope,installation)},$scope.openCarouselModal=function(installation){VrmModalService.openCarouselModal($scope,installation)},$scope.openRemoteConsoleModal=function(installation){VrmModalService.openRemoteConsoleModal($scope,installation)}}};function controller($timeout,$scope,$rootScope,$state,$window,vrmNavToggleEvent,VrmModalService,VrmLangService,InstallationsService,localeEvents,locale,vrmNotificationType,vrmNotificationsService,localStorageService){var scheduleNavHeightCheck,closeMenu;function setState(toState,toParams){0==toState.name.indexOf("base.installation.")?InstallationsService.getInstallation(toParams.id).then(function(installation){$scope.currentInstallation=installation,$scope.openMenu(0==toState.name.indexOf("base.installation.settings.")?"settings":"installation")}):0==toState.name.indexOf("base.profile.")?$scope.openMenu("profile"):0==toState.name.indexOf("base.admin.")?$scope.openMenu("admin"):0==toState.name.indexOf("base.installation-overview")&&$scope.openMenu("root")}$scope.isImpersonatedUser=localStorageService.get("adminToken"),$scope.direction="left",$scope.dontCloseMenu=!1,$scope.openMenu=function(menu,installation,direction,dontCloseMenu){var needsRedraw=!1;null!=installation&&installation&&($scope.currentInstallation&&installation.idSite==$scope.currentInstallation.idSite||(needsRedraw=!0),$scope.currentInstallation=installation),$scope.dontCloseMenu=void 0!==dontCloseMenu&&dontCloseMenu,(needsRedraw=needsRedraw||$scope.currentMenu!=menu)&&($scope.direction=void 0!==direction&&"right"==direction?"right":"left",$scope.currentMenu=menu,"function"==typeof scheduleNavHeightCheck&&scheduleNavHeightCheck(),document.body.scrollTop=document.documentElement.scrollTop=0)},$scope.openMenu("root"),setState($state.current,$state.params),$scope.closeMenu=function(){"function"==typeof closeMenu&&closeMenu()},$(function(){var calculatedNavHeight,$body=$("body"),$nav=$(".vrm-nav"),$overlay=$(".vrm-nav__overlay"),navToggled=!1,didResize=!1,contentHeight=0;scheduleNavHeightCheck=function(){for(var i=1;i<=2;i++)$timeout(function(){initNavHeight()},300*i,!1)},initNavHeight(),setInterval(function(){var $content=$("#content");$content.height()!=contentHeight&&(contentHeight=$content.height(),didResize=!0),didResize&&(didResize=!1,initNavHeight())},200),$($window).resize(function(){didResize=!0});var rootScopeOnStateChange=$rootScope.$on("$stateChangeSuccess",function(event,toState,toParams){setState(toState,toParams),navToggled&&!$scope.dontCloseMenu&&closeMenu(),$scope.dontCloseMenu=!1});function transitionEnd(element,callback){var done=!1,finish=function(){done||(callback(),done=!0)};element.one("transitionend",finish),setTimeout(finish,201)}var rootScopeOnToggle=$rootScope.$on(vrmNavToggleEvent.toggle,function(){navToggled?closeMenu():($nav.show(0,function(){transitionEnd($nav,function(){$nav.removeClass("vrm--transitioning-in").addClass("vrm--active"),initNavHeight()}),$nav.addClass("vrm--transitioning-in")}),$overlay.fadeIn(200),navToggled=!0,$overlay.on("click",closeMenu))});function initNavHeight(){calculatedNavHeight=0,$nav.children().each(function(index,value){calculatedNavHeight+=$(value).outerHeight()}),calculatedNavHeight>$(window).height()?($nav.addClass("vrm--nav-overflow"),$nav.height($body.height()),calculatedNavHeight>$body.height()&&$nav.height(calculatedNavHeight)):($nav.removeClass("vrm--nav-overflow"),$nav.css("height",""))}$scope.$on("$destroy",function(){rootScopeOnStateChange(),rootScopeOnToggle()}),closeMenu=function(){$overlay.fadeOut(200,function(){$overlay.off("click").hide()}),$nav.removeClass("vrm--active").addClass("vrm--transitioning-out"),transitionEnd($nav,function(){$nav.removeClass("vrm--transitioning-out").css("display","")}),navToggled=!1}}),$scope.openLanguageModal=VrmModalService.openLanguageModal,VrmLangService.getLang().then(function(lang){$scope.lang=lang}),$scope.$on(localeEvents.localeChanges,function(event,lang){$scope.lang=lang}),$scope.openCCGXUploadModal=function(){VrmModalService.openUploadModal($scope,"ccgx",function(files){if(files||1===files.length){var file=files[0];if(file.size>64*Math.pow(10,6))locale.ready("dashboard").then(function(){vrmNotificationsService.add({type:vrmNotificationType.ERROR,message:locale.getString("dashboard.ccgx_file_too_big")})});else{var data=new FormData;data.append("data",file),ApiService.call("/installations/data-upload",data).then(function(response){locale.ready("dashboard").then(function(){vrmNotificationsService.add({type:vrmNotificationType.SUCCESS,message:locale.getString("dashboard.ccgx_uploaded",{count:response.data.num_processed})})})})}}})}}}vrmNav.$inject=["$state","$rootScope","ApiService","VrmModalService","vrmConfig"],angular.module("vrm.components").directive("vrmNav",vrmNav)}(),function(){"use strict";function vrmNavToggle($rootScope,vrmNavToggleEvent){return{restrict:"A",link:function($scope,$element,$attr){$element.bind("click.vrmNavToggle",function(){$rootScope.$emit(vrmNavToggleEvent.toggle)})}}}vrmNavToggle.$inject=["$rootScope","vrmNavToggleEvent"],angular.module("vrm.components").constant("vrmNavToggleEvent",{toggle:"vrmNavToggleEvent.toggle"}).directive("vrmNavToggle",vrmNavToggle)}(),function(){"use strict";function VrmMapService($log,WhitelabelService){var supportedColors=["blue","orange","black","red"],colorValues=["#387dc5","#f0962e","#000000","#f35c58"],spriteMarkerPosition={blue:[52,0],orange:[52,72],black:[52,144],red:[52,216]},spriteClusterMarkerPosition={blue:[0,0],orange:[0,72],black:[0,144],red:[0,216]},service={setCenterAndBoundsForCoordinatesList:function(map){var bounds=new google.maps.LatLngBounds,newBounds=new google.maps.LatLngBounds;if(0<map.markers.length)for(var i=0;i<map.markers.length;i++)bounds.extend(new google.maps.LatLng(map.markers[i].coords.latitude,map.markers[i].coords.longitude));if(1<map.markers.length){var newNorthEastLat,newNorthEastLng,newSouthWestLat,newSouthWestLng,northEast=bounds.getNorthEast(),southWest=bounds.getSouthWest(),center=bounds.getCenter();newNorthEastLat=northEast.lat()-(northEast.lat()-center.lat())/10,newNorthEastLng=northEast.lng()-(northEast.lng()-center.lng())/10,newSouthWestLat=southWest.lat()-(southWest.lat()-center.lat())/10,newSouthWestLng=southWest.lng()-(southWest.lng()-center.lng())/10,newBounds.extend(new google.maps.LatLng(newNorthEastLat,newNorthEastLng)),newBounds.extend(new google.maps.LatLng(newSouthWestLat,newSouthWestLng)),map.control.getGMap().fitBounds(newBounds)}else map.control.getGMap().setCenter(bounds.getCenter())},updateMarkers:function(map,installations){map.markers.length=0,_.each(installations,function(installation){if(!1!==installation.extended)var coords={latitude:installation.data.lt?installation.data.lt.rawValue:0,longitude:installation.data.lg?installation.data.lg.rawValue:0};else var coords={latitude:0,longitude:0};0==coords.latitude&&0==coords.longitude||map.markers.push({data:installation,id:installation.idSite,description:installation.name,lastLogSecondsAgo:installation.last_timestamp,runningOn:installation.device_icon,status:installation.alarm,show:!1,coords:coords,icon:buildMarkerIcon(getMarkerColor(installation))})})},buildMarkerIcon:buildMarkerIcon,getMarkerColor:getMarkerColor,getShape:function(geofenceData,editable){var shape=null;if(!geofenceData)return null;if("rectangle"==geofenceData.type){var coords=geofenceData.coords,northeast=coords.northeast,southwest=coords.southwest,bounds=new google.maps.LatLngBounds(new google.maps.LatLng(southwest.lat,southwest.lng),new google.maps.LatLng(northeast.lat,northeast.lng));shape=new google.maps.Rectangle(_.extend({bounds:bounds,editable:editable},drawOptions))}else if("circle"==geofenceData.type)shape=new google.maps.Circle(_.extend({center:new google.maps.LatLng(geofenceData.center.lat,geofenceData.center.lng),radius:geofenceData.radius,editable:editable},drawOptions));else if("polygon"==geofenceData.type){for(var coords=[],i=0;i<geofenceData.coords.length;i++){var coord=geofenceData.coords[i];coords.push(new google.maps.LatLng(coord.lat,coord.lng))}shape=new google.maps.Polygon(_.extend({paths:coords,type:google.maps.drawing.OverlayType.POLYGON,editable:editable},drawOptions))}return shape},clusterOptions:{styles:supportedColors.map(function(color,index){return{url:WhitelabelService.getMarkerSprite(),width:52,height:72,backgroundPosition:"-"+spriteClusterMarkerPosition[color][0]+"px -"+spriteClusterMarkerPosition[color][1]+"px",anchorIcon:[68,26],textColor:colorValues[index],textSize:21,textAlign:"center",fontFamily:"MuseoSans-300,sans-serif;margin-top:-10px;margin-left:1px",fontWeight:"bold"}}),calculator:function(markers,numStyles){return{text:markers.length.toString(),index:supportedColors.indexOf(function(markers){for(var activeAlarms=!1,allViaDealer=!0,i=0;i<markers.length&&(allViaDealer&&markers[i].owner&&(allViaDealer=!1),activeAlarms||!markers[i].alarm||(activeAlarms=!0,allViaDealer));i++);if(allViaDealer)return"orange";return activeAlarms?"red":"blue"}(markers.map(function(marker){return marker.model.data})))+1,title:""}}}},drawOptions={strokeWeight:0,fillOpacity:.45};return service;function buildMarkerIcon(color){return{anchor:new google.maps.Point(26,68),origin:new google.maps.Point(spriteMarkerPosition[color][0],spriteMarkerPosition[color][1]),size:new google.maps.Size(52,72),url:WhitelabelService.getMarkerSprite()}}function getMarkerColor(marker){return marker.owner?marker.alarm?"red":"blue":"orange"}}VrmMapService.$inject=["$log","WhitelabelService"],angular.module("vrm.components").service("VrmMapService",VrmMapService)}(),function(){"use strict";function vrmInstallationOverviewItem($log){return{scope:{installation:"="},restrict:"E",templateUrl:"vrm-components/installation-overview-item/installation-overview-item.template.html",link:function($scope){}}}vrmInstallationOverviewItem.$inject=["$log"],angular.module("vrm.components").directive("vrmInstallationOverviewItem",vrmInstallationOverviewItem)}(),function(){"use strict";angular.module("vrm.components").directive("stringToNumber",function(){return{require:"ngModel",link:function(scope,element,attrs,ngModel){ngModel.$parsers.push(function(value){return""+value}),ngModel.$formatters.push(function(value){return parseFloat(value)})}}})}(),function(){"use strict";function vrmInput($log){return{scope:{label:"@",name:"="},restrict:"E",replace:!0,transclude:!0,require:"?ngModel",templateUrl:"vrm-components/input/input.template.html",link:link,compile:function($element,$attr){$log.warn("Compile");var $input=$element.find("input");return angular.forEach({name:$attr.name,value:$attr.value,disabled:$attr.disabled,"ng-value":$attr.ngValue,"ng-model":$attr.ngModel,"ng-disabled":$attr.ngDisabled,"ng-change":$attr.ngChange,"ng-required":$attr.ngRequired,required:$attr.required},function(value,name){angular.isDefined(value)&&$input.attr(name,value)}),link}};function link($scope,$element,$attr){function click(){$log.info("toggle"),$log.info($scope)}$log.info("link"),$element.on("click",click),$scope.on("$destroy",function(){$element.off("click",click)})}}vrmInput.$inject=["$log"],angular.module("vrm.components").directive("vrmInput",vrmInput)}(),function(){"use strict";angular.module("vrm.components").directive("vrmIconButton",function(){return{scope:!0,restrict:"E",templateUrl:"vrm-components/icon-button/icon-button.template.html",link:function($scope,$element,$attr,ngModelController){$scope.active=!1,$scope.iconClass=$attr.iconClass}}})}(),function(){"use strict";function vrmHr($log){return{restrict:"E",templateUrl:"vrm-components/hr/hr.template.html",link:function($scope,$element,$attr,$controller){$scope.realtime=$scope.realtime&&$scope.realtime},scope:{time:"=",realtime:"="}}}vrmHr.$inject=["$log"],angular.module("vrm.components").directive("vrmHr",vrmHr)}(),function(){"use strict";function vrmHeader($log,$rootScope){return controller.$inject=["$scope","$transclude"],{restrict:"E",templateUrl:"vrm-components/header/header.template.html",link:function($scope,$element,$attr,$controller,$transclude){$scope.hasControls=!$attr.noControls||"false"==$attr.noControls,$attr.$observe("noControls",function(newVal){$scope.hasControls=!newVal||"false"==newVal})},controller:controller,transclude:{headerControls:"?headerControls",headerTitle:"?headerTitle",headerTitleTasks:"?headerTitleTasks",headerPanels:"?headerPanels",pageTitle:"?pageTitle",mobilePageTitle:"?mobilePageTitle",titleControls:"?titleControls"}};function controller($scope,$transclude){$scope.hasControls=$transclude.isSlotFilled("headerControls"),$scope.hasTitle=$transclude.isSlotFilled("headerTitle"),$scope.hasTitleTasks=$transclude.isSlotFilled("headerTitleTasks"),$scope.hasMobileTitle=$transclude.isSlotFilled("mobilePageTitle"),$scope.state={showMore:!1}}}vrmHeader.$inject=["$log","$rootScope"],angular.module("vrm.components").directive("vrmHeader",vrmHeader)}(),function(){"use strict";var socConfig,frequencyConfig,temperatureConfig,powerConfig,power10TicksConfig,batteryVoltageConfig,batteryCurrentConfig,voltageConfig,voltageWithoutMinConfig,currentConfig,current10TicksConfig;angular.module("vrm.components").directive("vrmGraphWidget",function(){return controller.$inject=["$scope","$q","GraphService","AdvancedGraphWidgetConfigs","locale"],{restrict:"E",templateUrl:"vrm-components/graph-widget/graph-widget.template.html",controller:controller,scope:{type:"=",loading:"=",instance:"=",title:"=",subTitle:"=",tooltip:"=",data:"=",zoomstate:"=",range:"="}};function controller($scope,$q,GraphService,AdvancedGraphWidgetConfigs,locale){var loaded=!1;function setZoomState(zoomstate){if($scope.chart&&$scope.chart.getHighcharts){var chart=$scope.chart.getHighcharts();if(!chart.xAxis)return;chart.xAxis[0].setExtremes(zoomstate.min,zoomstate.max,void 0,!1,{trigger:"syncZoom"}),chart.resetZoomButton&&null==zoomstate.min?chart.resetZoomButton=chart.resetZoomButton.destroy():chart.resetZoomButton||null==zoomstate.min||chart.showResetZoom(),$scope.$applyAsync()}else $scope.chart&&zoomstate.min&&_.defer(_.once(function(){setZoomState(zoomstate)}))}$scope.inview=!1,$scope.$watch("type",function(){$scope.meta=AdvancedGraphWidgetConfigs[$scope.type],$scope.current=$scope.meta[0]}),$scope.setCurrent=function(meta){$scope.current=meta},$scope.$watch("loading",function(loading){$scope.chart&&($scope.chart.loading=loading)}),$q.all([GraphService.ready(),locale.ready("advanced")]).then(function(){function load(){$scope.inview&&!loaded&&$scope.data&&(loaded=!0,$scope.chart||($scope.chart=GraphService.getAdvancedConfig($scope.current.fields,$scope.current.extraOptions)),$scope.metas=[],$scope.current.totalOnly||($scope.metas=_.filter($scope.data.meta,function(field){return $scope.current.fields.hasOwnProperty(field.code)})),$scope.current.allowSum&&!$scope.current.totalOnly&&$scope.metas.push({description:locale.getString("advanced.total"),formatWithUnit:"",formatValueOnly:""}),$scope.current.preprocessMeta&&($scope.metas=$scope.current.preprocessMeta($scope.metas)),GraphService.updateConfig($scope.chart,$scope.data,$scope.current.fields,!!$scope.current.allowSum,!!$scope.current.totalOnly,$scope.range,$scope.current.preprocessValue),$scope.chart.xAxis.events||($scope.chart.xAxis.events={}),$scope.chart.xAxis.events.setExtremes=function(e){"zoom"===e.trigger&&($scope.zoomstate.min=e.min?e.min:null,$scope.zoomstate.max=e.max?e.max:null,$scope.$evalAsync())},setZoomState($scope.zoomstate),$scope.$watch("zoomstate",setZoomState,!0))}$scope.$watchGroup(["installation","data","current"],function(){loaded=!1,load()}),$scope.$watchGroup(["inview"],load)})}}).constant("AdvancedGraphWidgetConfigs",(socConfig={min:0,max:100,tickInterval:10},frequencyConfig={min:40,max:70,tickInterval:10},temperatureConfig={maxPadding:.2,minPadding:0,forceTickAt0:!0},powerConfig={minPadding:0,maxPadding:.1,forceTickAt0:!0,tickAmount:7},(power10TicksConfig=_.clone(powerConfig)).tickAmount=10,batteryVoltageConfig={tickAmount:10,minTickInterval:.1,labels:{format:"{value:.2f}"},maxPadding:.2,minPadding:.2},batteryCurrentConfig={forceTickAt0:!0,tickAmount:10,minPadding:.2,maxPadding:.2,labels:{format:"{value:.2f}"}},voltageConfig={tickAmount:5,min:0,maxPadding:.2},voltageWithoutMinConfig={tickAmount:10,minTickInterval:.1,maxPadding:.2,labels:{format:"{value:.2f}"}},currentConfig={minPadding:0,maxPadding:.2,forceTickAt0:!0},(current10TicksConfig=_.clone(currentConfig)).tickAmount=10,{AcInputFrequency:[{extraOptions:{yAxis:[frequencyConfig]},fields:{IF1:null}}],AcInputPower:[{extraOptions:{yAxis:[powerConfig]},fields:{IP1:null,IP2:null,IP3:null,TOTAL:null},allowSum:!0}],SolarChargerVoltageAndCurrent:[{extraOptions:{yAxis:[voltageWithoutMinConfig,current10TicksConfig]},fields:{ScV:null,ScI:{yAxis:1}}}],SolarChargerLoadoutputCurrent:[{extraOptions:{yAxis:[currentConfig]},fields:{SLI:null}}],AcInputVoltageAndCurrent:[{extraOptions:{yAxis:[voltageConfig,currentConfig]},fields:{IV1:null,II1:{yAxis:1}},name:"Phase 1"},{extraOptions:{yAxis:[voltageConfig,currentConfig]},fields:{IV2:null,II2:{yAxis:1}},name:"Phase 2"},{extraOptions:{yAxis:[voltageConfig,currentConfig]},fields:{IV3:null,II3:{yAxis:1}},name:"Phase 3"}],AcOutputFrequency:[{extraOptions:{yAxis:[frequencyConfig]},fields:{OF:null}}],AcOutputPower:[{extraOptions:{yAxis:[powerConfig]},fields:{OP1:null,OP2:null,OP3:null,TOTAL:null},allowSum:!0}],AcOutputVoltageAndCurrent:[{extraOptions:{yAxis:[voltageConfig,currentConfig]},fields:{OV1:null,OI1:{yAxis:1}},name:"Phase 1"},{extraOptions:{yAxis:[voltageConfig,currentConfig]},fields:{OV2:null,OI2:{yAxis:1}},name:"Phase 2"},{extraOptions:{yAxis:[voltageConfig,currentConfig]},fields:{OV3:null,OI3:{yAxis:1}},name:"Phase 3"}],BatterySoc:[{extraOptions:{yAxis:[socConfig]},fields:{SOC:null}}],SystemBatterySoc:[{extraOptions:{yAxis:[socConfig]},fields:{bs:null}}],BatteryTemperature:[{extraOptions:{yAxis:[temperatureConfig]},fields:{BT:null}}],BatteryVoltageAndCurrent:[{extraOptions:{yAxis:[batteryVoltageConfig,batteryCurrentConfig]},fields:{V:null,I:{yAxis:1}}}],SystemBatteryVoltageAndCurrent:[{extraOptions:{yAxis:[batteryVoltageConfig,batteryCurrentConfig]},fields:{bv:null,bc:{yAxis:1}}}],DcVoltageAndCurrent:[{extraOptions:{yAxis:[voltageWithoutMinConfig,current10TicksConfig]},fields:{CV:null,CI:{yAxis:1}}}],IOExtenderTemperature:[{extraOptions:{yAxis:[temperatureConfig]},fields:{T1:null}}],MotorAndControllerTemperature:[{extraOptions:{yAxis:[temperatureConfig,temperatureConfig]},fields:{mt:null,coT:{yAxis:1}}}],MotorRPMAndControllerPower:[{extraOptions:{yAxis:[{forceTickAt0:!0,minPadding:.2,maxPadding:.2,tickAmount:10},power10TicksConfig]},fields:{mr:null,coP:{yAxis:1}}}],PVInverterYield:[{extraOptions:{yAxis:[powerConfig]},fields:{pP1:null,pP2:null,pP3:null,TOTAL:null},allowSum:!0}],SolarChargerPVYield:[{extraOptions:{yAxis:[powerConfig]},fields:{ScW:null}}],StarterBatteryVoltage:[{extraOptions:{yAxis:[batteryVoltageConfig]},fields:{VS:null}}],SystemBatteryPower:[{extraOptions:{yAxis:[power10TicksConfig]},fields:{bp:null}}],SystemAcConsumption:[{extraOptions:{yAxis:[powerConfig]},fields:{a1:null,a2:null,a3:null,TOTAL:null},allowSum:!0}],SystemAcGenset:[{extraOptions:{yAxis:[powerConfig]},fields:{gs1:null,gs2:null,gs3:null,TOTAL:null},allowSum:!0}],SystemGrid:[{extraOptions:{yAxis:[powerConfig]},fields:{g1:null,g2:null,g3:null,TOTAL:null},allowSum:!0}],VeBusSoc:[{extraOptions:{yAxis:[socConfig]},fields:{VSOC:null}}],SystemDcSystem:[{extraOptions:{yAxis:[voltageWithoutMinConfig]},fields:{dc:null}}],SystemPVYield:[{extraOptions:{yAxis:[powerConfig]},fields:{P:null,P2:null,P3:null,Pi:null,Pi2:null,Pi3:null,Pdc:null,TOTAL:null},allowSum:!0,totalOnly:!0}],TankLevel:[{extraOptions:{yAxis:[temperatureConfig]},fields:{tr:null},preprocessMeta:function(meta){return meta&&meta[0]&&(meta[0].formatWithUnit="%.0F L",meta[0].formatValueOnly="%.0F"),meta},preprocessValue:function(value){return null===value?value:1e3*value}}]}))}(),function(){"use strict";angular.module("vrm.components").directive("vrmGpsWidget",function(){return controller.$inject=["$scope","ApiService","uiGmapGoogleMapApi","VrmMapService","moment"],{restrict:"E",templateUrl:"vrm-components/gps-widget/gps-widget.template.html",controller:controller,scope:{installation:"=",range:"="}};function controller($scope,ApiService,uiGmapGoogleMapApi,VrmMapService,moment){$scope.getField=function(fieldName){return $scope.data&&$scope.data.records?_.find($scope.data.records.data.attributes,{code:fieldName}):null};var shape=null,map=null;$scope.outsideSince="",$scope.download=function(){ApiService.installationDownload($scope.installation.id,"gps-download",{start:$scope.range.startDate,end:$scope.range.endDate}).then(function(response){saveAs(response.data,"gps.kml")})},$scope.$watch("installation",function(installation){null!=installation&&uiGmapGoogleMapApi.then(function(){$scope.now=Math.floor(Date.now()/1e3),$scope.map={control:{},center:{latitude:installation.data.lt?installation.data.lt.rawValue:null,longitude:installation.data.lg?installation.data.lg.rawValue:null},coords:{latitude:installation.data.lt?installation.data.lt.rawValue:null,longitude:installation.data.lg?installation.data.lg.rawValue:null},zoom:7,options:{styles:[{stylers:[{visibility:"simplified"}]}],mapTypeControl:!1,panControl:!1,zoomControl:!0,scaleControl:!1,rotateControl:!1,streetViewControl:!1,overviewMapControl:!1,scrollwheel:!1},markerOptions:{icon:VrmMapService.buildMarkerIcon(VrmMapService.getMarkerColor(installation))}},$scope.$watch("map.control.getGMap",function(){$scope.map.control.getGMap&&(map=$scope.map.control.getGMap(),shape&&shape.setMap($scope.map.control.getGMap()))}),ApiService.installations(installation.id,"widgets/GPS").then(function(response){$scope.data=response.data,$scope.map.coords.latitude==$scope.map.center.latitude&&$scope.map.coords.longitude==$scope.map.center.longitude&&($scope.map.center.latitude=$scope.getField("lt")?$scope.getField("lt").value:null,$scope.map.center.longitude=$scope.getField("lg")?$scope.getField("lg").value:null),$scope.map.coords.latitude=$scope.getField("lt")?$scope.getField("lt").value:null,$scope.map.coords.longitude=$scope.getField("lg")?$scope.getField("lg").value:null,null!=shape&&shape.setMap(null);try{shape=VrmMapService.getShape(JSON.parse(response.data.records.data.geofence),!1)}catch(e){}shape&&map&&shape.setMap(map),$scope.outsideSince="",$scope.data.records.data.geofenceAlarmActive&&($scope.outsideSince=$scope.data.records.data.geofenceAlarmActive)})})})}})}(),function(){"use strict";function vrmTimeIntervalTextual(locale){return function(from,to,format){var shortFormat="undefined"==format||"short"==format;void 0===to&&(to=Math.floor(Date.now()/1e3));var seconds=to-from,minutes=Math.floor(seconds/60),hours=Math.floor(minutes/60),days=Math.floor(hours/24);seconds=seconds-24*days*60*60-60*(hours-=24*days)*60-60*(minutes=minutes-24*days*60-60*hours);var parts=[];return days&&parts.push(days+(shortFormat?"d":" day"+(1<days?"s":""))),hours&&parts.push(hours+(shortFormat?"h":" hour"+(1<hours?"s":""))),minutes&&parts.push(minutes+(shortFormat?"m":" minute"+(1<minutes?"s":""))),seconds&&parts.push(seconds+(shortFormat?"s":" second"+(1<seconds?"s":""))),parts.join(", ")}}vrmTimeIntervalTextual.$inject=["locale"],angular.module("vrm.components").filter("vrmTimeIntervalTextual",vrmTimeIntervalTextual)}(),function(){"use strict";angular.module("vrm.components").filter("vrmSnakeCase",function(){return function(text){return text.replace(/([A-Z])/g,function($1){return"_"+$1.toLowerCase()})}})}(),function(){"use strict";angular.module("vrm.components").filter("vrmNotApplicable",function(){return function(value){switch(value){case"":case null:case void 0:case!1:return"N/A";default:return value}}})}(),function(){"use strict";angular.module("vrm.components").filter("vrmDeviceIcon",function(){return function(deviceType){switch(deviceType){case"battery":return"sg-vrm-icon_21_battery-16px";case"solar":return"sg-vrm-icon_22_solar-16px";case"grid":return"sg-vrm-icon_23_grid-16px";case"generator":return"sg-vrm-icon_25_genset-16px"}}})}(),function(){"use strict";function vrmDropdown($rootScope,vrmDropdownEvent){return{scope:{id:"@"},restrict:"E",transclude:!0,templateUrl:"vrm-components/dropdown/dropdown.template.html",link:function($scope,$element,$attr){$scope.element=$element.find(".vrm-dropdown");var toggleEvent=$rootScope.$on(vrmDropdownEvent.toggle,function(event,data){data.id===$scope.id&&("mouseenter"==data.eventType?function($target){$scope.element.addClass("active"),null!=tether&&tether.destroy();tether=new Tether({element:$scope.element,target:$target,attachment:window.matchMedia("(min-width: 960px)").matches||!$element.hasClass("vrm-dropdown__mobile-down")?"top center":"bottom center",targetOffset:"5px 0",constraints:[{to:"window",pin:["left","right"]}]})}(data.target):$scope.element.removeClass("active"))}),tether=null;$scope.element.on("mouseenter mouseleave click",function(event){"mouseenter"==event.type?$scope.element.addClass("active"):$scope.element.removeClass("active")}),$scope.$on("$destroy",function(){null!=tether&&tether.destroy(),$scope.element.off(),toggleEvent(),$scope.element.remove()})}}}vrmDropdown.$inject=["$rootScope","vrmDropdownEvent"],angular.module("vrm.components").constant("vrmDropdownEvent",{toggle:"vrmDropdownEvent.toggle"}).directive("vrmDropdown",vrmDropdown)}(),function(){"use strict";function vrmDropdownTrigger($rootScope,vrmDropdownEvent){return{restrict:"A",link:function($scope,$element,$attr){$element.on("mouseenter mouseleave",function(event){$rootScope.$emit(vrmDropdownEvent.toggle,{id:$attr.vrmDropdownTrigger,target:$element,eventType:event.type})})}}}vrmDropdownTrigger.$inject=["$rootScope","vrmDropdownEvent"],angular.module("vrm.components").directive("vrmDropdownTrigger",vrmDropdownTrigger)}(),function(){"use strict";function vrmDate($log,localStorageService){return controller.$inject=["$scope","locale"],{restrict:"E",templateUrl:"vrm-components/date/date.template.html",link:function($scope,$element,$attr){$scope.ranges=[{name:"last_24_hours",interval:"hours",value:86400,precision:1},{name:"last_7_days",interval:"days",value:604800,precision:86400},{name:"last_30_days",interval:"days",value:2592e3,precision:86400}],$attr.hasLastHour&&$scope.ranges.unshift({name:"last_hour",interval:"hours",value:3600,precision:1});$attr.hasYear&&$scope.ranges.push({name:"last_year",interval:"months",value:"year",precision:"month"});var maxDate=new Date;$scope.picker={range:$attr.hasLastHour?$scope.ranges[1]:$scope.ranges[0],maxDate:maxDate,date:new Date(maxDate.getTime()),startDate:new Date},$scope.range.name=null,$scope.range.startDate=null,$scope.range.endDate=null,$scope.range.interval=null,$scope.range.isToday=!0,$scope.custom=$attr.custom,$scope.noIcon="true"==$attr.noIcon,$scope.withLabels="true"==$attr.withLabels,$scope.onlyDates="true"==$attr.onlyDates,$scope.initial&&($scope.initialStartDate=1e3*$scope.initial.startDate||$scope.picker.startDate.getTime(),$scope.initialEndDate=1e3*$scope.initial.endDate||$scope.picker.date.getTime());$scope.toggles={customDate:!1,picker:!1};var calc_offset=0;function toUTC(date){return date-6e4*date.getTimezoneOffset()}$scope.$watch("toggles.customDate",function(customDate){customDate?($scope.picker.startDate.setTime(1e3*$scope.range.startDate+calc_offset),$scope.picker.startDate.setTime($scope.picker.startDate.getTime()+6e4*$scope.picker.startDate.getTimezoneOffset()),$log.info("Setting date to custom range"),$scope.picker.date.setTime(1e3*$scope.range.endDate+calc_offset),$scope.picker.date.setTime($scope.picker.date.getTime()+6e4*$scope.picker.date.getTimezoneOffset())):$attr.custom&&($log.info("Setting date to max date"),$scope.picker.date.setTime($scope.picker.maxDate.getTime())),$scope.control.updateRange(),$scope.toggles.picker=customDate}),$scope.$watch("picker.date",function(){$scope.picker.startDate.getTime()>$scope.picker.date.getTime()&&($log.info("Correcting start date"),$scope.picker.startDate.setTime($scope.picker.date.getTime())),!$scope.toggles.customDate&&$attr.custom&&$scope.picker.date.setTime($scope.picker.maxDate.getTime()),$scope.control.updateRange()},!0),$scope.$watch("picker.startDate",function(){$scope.picker.date.getTime()<$scope.picker.startDate.getTime()&&($log.info("Correcting end date"),$scope.picker.date.setTime($scope.picker.startDate.getTime())),$scope.control.updateRange()},!0),$scope.control.updateDate=function(){var now=new Date,maxDate=new Date(now.getTime()+calc_offset+6e4*now.getTimezoneOffset());$scope.range.isToday=$scope.picker.date.toDateString()==$scope.picker.maxDate.toDateString(),!$scope.range.isToday||$scope.toggles.customDate||$scope.onlyDates||($log.info("Setting end date to now"),$scope.picker.date.setTime(maxDate.getTime())),$scope.picker.maxDate.setTime(maxDate.getTime())},$scope.control.updateRange=function(){if($scope.installation)if($scope.toggles.customDate||$scope.onlyDates)$scope.range.startDate=(toUTC($scope.picker.startDate)-calc_offset)/1e3,$scope.range.endDate=(toUTC($scope.picker.date)-calc_offset)/1e3,$scope.range.interval="hours",$scope.range.interval=86400<$scope.range.endDate-$scope.range.startDate?"days":$scope.range.interval,$scope.range.interval=1814400<$scope.range.endDate-$scope.range.startDate?"weeks":$scope.range.interval,$scope.range.interval=7776e3<$scope.range.endDate-$scope.range.startDate?"months":$scope.range.interval,$scope.range.interval=93312e3<$scope.range.endDate-$scope.range.startDate?"years":$scope.range.interval;else if($scope.picker.range&&$scope.picker.range.precision){var precision=$scope.picker.range.precision;if("month"===precision){var endDate=new Date($scope.picker.date.getFullYear(),$scope.picker.date.getMonth()+1,0);$scope.range.endDate=(toUTC(endDate)-calc_offset)/1e3}else!$scope.range.isToday&&precision<86400&&(precision=86400),$scope.range.endDate=Math.floor(toUTC($scope.picker.date)/(1e3*precision)+1)*precision-calc_offset/1e3;if("year"===$scope.picker.range.value){var startDate=new Date($scope.picker.date.getFullYear()-1,$scope.picker.date.getMonth(),1);$scope.range.startDate=(toUTC(startDate)-calc_offset)/1e3}else $scope.range.startDate=$scope.range.endDate-$scope.picker.range.value;$scope.range.interval=$scope.picker.range.interval,$scope.range.precision="month"===$scope.picker.range.precision?0:$scope.picker.range.precision,$scope.range.name=$scope.picker.range.name}},$scope.$watch("installation.timezone_offset",function(offset){null!=offset&&(calc_offset=1e3*offset,$scope.control.updateDate(),$scope.control.updateRange())});var localStorageLoaded=!1;$scope.$watch("installation",function(installation){if(installation&&$scope.custom&&!localStorageLoaded){var key="installation."+installation.id+".custom_date",settings=localStorageService.get(key);null!=settings&&($scope.picker.range=$scope.ranges[settings.range],settings.custom&&settings.endDate-settings.startDate<=26784e5&&settings.endDate&&settings.startDate&&($log.info("Setting date to settings end date"),$scope.picker.date.setTime(settings.endDate),$scope.picker.startDate.setTime(settings.startDate),$scope.toggles.customDate=settings.custom),$scope.toggles.picker=settings.custom&&settings.endDate-settings.startDate<=26784e5),$scope.$watchGroup(["range.startDate","range.endDate","picker.range","toggles.picker"],function(){26784e5<$scope.picker.date.getTime()-$scope.picker.startDate.getTime()||localStorageService.set(key,{range:$scope.ranges.indexOf($scope.picker.range),startDate:$scope.picker.startDate.getTime(),endDate:$scope.picker.date.getTime(),custom:$scope.toggles.picker,modified:(new Date).getTime()})}),localStorageLoaded=!0}}),$scope.$watch("picker.range",$scope.control.updateRange),$scope.onlyDates&&($scope.picker.startDate.setTime($scope.initialStartDate+6e4*$scope.picker.startDate.getTimezoneOffset()),$scope.picker.date.setTime($scope.initialEndDate+6e4*$scope.picker.date.getTimezoneOffset()),$scope.control.updateRange())},controller:controller,scope:{range:"=",installation:"=",control:"=",initial:"="}};function controller($scope,locale){function onOpenVisibleCheck(){var container=$(this.$node).next(".picker");container.removeClass("picker--drop-up"),container.removeClass("picker--drop-left"),container.addClass("picker--position-check");var dropdown=container.find(".picker__holder"),dropdown_top=dropdown.offset().top-document.documentElement.scrollTop;container.toggleClass("picker--drop-left",dropdown.offset().left+300>document.documentElement.clientWidth),container.toggleClass("picker--drop-up",dropdown_top+323>document.documentElement.clientHeight&&0<dropdown_top-323),container.removeClass("picker--position-check")}locale.ready("datepicker").then(function(){$scope.pickadata={dateOptions:{clear:!1,onOpen:onOpenVisibleCheck,monthsFull:[locale.getString("datepicker.january"),locale.getString("datepicker.februari"),locale.getString("datepicker.march"),locale.getString("datepicker.april"),locale.getString("datepicker.may"),locale.getString("datepicker.juni"),locale.getString("datepicker.july"),locale.getString("datepicker.august"),locale.getString("datepicker.september"),locale.getString("datepicker.october"),locale.getString("datepicker.november"),locale.getString("datepicker.december")],weekdaysShort:[locale.getString("datepicker.short_sunday"),locale.getString("datepicker.short_monday"),locale.getString("datepicker.short_tuesday"),locale.getString("datepicker.short_wednesday"),locale.getString("datepicker.short_thursday"),locale.getString("datepicker.short_friday"),locale.getString("datepicker.short_saturday")],today:locale.getString("datepicker.today"),close:locale.getString("datepicker.close"),format:locale.getString("datepicker.format")},timeOptions:{clear:!1,onOpen:onOpenVisibleCheck,format:"HH:i"}}})}}vrmDate.$inject=["$log","localStorageService"],angular.module("vrm.components").directive("vrmDate",vrmDate)}(),function(){"use strict";function vrmBlockScrollIndication($timeout,$window){return{restrict:"A",link:function(scope,elements){$timeout(function(){var container=elements[0],shadowLeft=container.children[0].children[0],shadowRight=container.children[0].children[1],content=container.children[1];renderShadowIndicators(content,shadowLeft,shadowRight),angular.element(content).on("scroll",function(){renderShadowIndicators(content,shadowLeft,shadowRight)}),angular.element($window).on("resize",function(){renderShadowIndicators(content,shadowLeft,shadowRight),scope.$digest()}),scope.$on("$destroy",function(){angular.element($window).off("resize")})},100)}};function renderShadowIndicators(content,shadowLeft,shadowRight){content.scrollWidth>content.offsetWidth&&(content.scrollLeft<=0?shadowLeft.style.display="none":shadowLeft.style.display="block",content.scrollWidth-(content.offsetWidth+content.scrollLeft)<=0?shadowRight.style.display="none":shadowRight.style.display="block")}}vrmBlockScrollIndication.$inject=["$timeout","$window"],angular.module("vrm.components").directive("vrmBlockScrollIndication",vrmBlockScrollIndication)}(),function(){"use strict";function vrmAvatar($log){return{restrict:"E",templateUrl:"vrm-components/avatar/avatar.template.html",link:function($scope,$element,$attr){$scope.hideImage=!0,$element.find(".vrm-table__with-image__image img").on("load",function(){$scope.hideImage=!1}),$scope.getInitials=function(name){var initials=name.split(" ");return 2<=initials.length?initials[0][0]+initials[initials.length-1][0]:1==initials.length?initials[0][0]:""}},scope:{user:"="}}}vrmAvatar.$inject=["$log"],angular.module("vrm.components").directive("vrmAvatar",vrmAvatar)}(),function(){"use strict";function vrmAlarmWidget($log){return controller.$inject=["$scope","ApiService"],{restrict:"E",templateUrl:"vrm-components/alarm-widget/alarm-widget.template.html",controller:controller,scope:{installation:"=",type:"=",instance:"=",title:"=",subTitle:"=",tooltip:"="}};function controller($scope,ApiService){$scope.$watch("installation",function(installation){if(null!=installation){var url="widgets/"+$scope.type;$scope.instance&&(url+="?instance="+$scope.instance),ApiService.installations(installation.id,url).then(function(response){$scope.data=response.data})}})}}vrmAlarmWidget.$inject=["$log"],angular.module("vrm.components").directive("vrmAlarmWidget",vrmAlarmWidget)}(),function(){"use strict";angular.module("vrm.components").directive("vrmAdminTableSorterRow",function(){return{restrict:"E",replace:!0,templateUrl:"vrm-components/admin-table/admin-table-header.template.html",scope:!0,controller:"ngTableSorterRowController"}})}(),"function"!=typeof Object.assign&&Object.defineProperty(Object,"assign",{value:function(target,varArgs){"use strict";if(null==target)throw new TypeError("Cannot convert undefined or null to object");for(var to=Object(target),index=1;index<arguments.length;index++){var nextSource=arguments[index];if(null!=nextSource)for(var nextKey in nextSource)Object.prototype.hasOwnProperty.call(nextSource,nextKey)&&(to[nextKey]=nextSource[nextKey])}return to},writable:!0,configurable:!0}),function(){"use strict";if(CoreConfig.$inject=["vrmConfig","$logProvider","$compileProvider","$httpProvider","$stateProvider","jwtOptionsProvider","localStorageServiceProvider","uiGmapGoogleMapApiProvider","$provide","$rootScopeProvider"],CoreRun.$inject=["vrmConfig","$log","$rootScope","$state","ApiService","authManager","localeEvents","WhitelabelService","$location","amMoment","$http","$timeout","$window","localStorageService","vrmNotificationType","vrmNotificationsService","locale"],void 0===window.__config)throw new Error("No config file loaded, make sure dist/config/config.js exists");void 0!==window.__version&&(window.__config.buildVersion=window.__version),void 0!==window.__config.sentryEnabled&&window.__config.sentryEnabled&&(Raven.config(window.__config.sentryDsn,{release:""+window.__version,serverName:window.__config.apiDomain}).addPlugin(Raven.Plugins.Angular).install(),Raven.setUserContext(),Raven.setTagsContext({environment:window.__config.apiDomain,mqtt:window.__config.enableMQTT,version:window.__version})),angular.module("vrm.vrmConfig",[]).constant("vrmConfig",_.clone(window.__config));var deps=["vrm.vrmConfig","vrm.route","vrm.components","vrm.graph","angular-jwt","LocalStorageModule","ngLocalize","ngLocalize.InstalledLanguages","ngLocalize.Config","ngLocalize.Events","ngMessages","ngTable","ui.select","ngSanitize","uiGmapgoogle-maps","angularMoment","angularModalService","ckeditor","as.sortable","sticky"];void 0!==window.__config.sentryEnabled&&window.__config.sentryEnabled&&deps.push("ngRaven"),angular.module("vrm.core",deps).value("localeSupported",["en","de","da","es","fr","it","pt","sv","ru"]).value("localeFallbacks",{}).value("localeConf",{basePath:"languages",defaultLocale:"en",sharedDictionary:"common",fileExtension:".lang.json?b="+window.__config.buildVersion,persistSelection:!0,cookieName:"COOKIE_LOCALE_LANG",observableAttrs:new RegExp("^data-(?!ng-|i18n)"),delimiter:"::",validTokens:new RegExp("^[\\w\\.-]+\\.[\\w\\s\\.-]+\\w(:.*)?$")}).config(CoreConfig).run(CoreRun);var gmapProvider=null;function CoreConfig(vrmConfig,$logProvider,$compileProvider,$httpProvider,$stateProvider,jwtOptionsProvider,localStorageServiceProvider,uiGmapGoogleMapApiProvider,$provide,$rootScopeProvider){$rootScopeProvider.digestTtl(20),$provide.decorator("$templateFactory",["$delegate",function($delegate){var fromUrl=angular.bind($delegate,$delegate.fromUrl);return $delegate.fromUrl=function(url,params){return null!==url&&angular.isDefined(url)&&angular.isString(url)&&(url+=-1===url.indexOf("?")?"?":"&",url+="b="+vrmConfig.buildVersion),fromUrl(url,params)},$delegate}]),$logProvider.debugEnabled(vrmConfig.debug),$compileProvider.debugInfoEnabled(vrmConfig.debugInfoEnabled),localStorageServiceProvider.setPrefix(vrmConfig.localStoragePrefix),jwtOptionsProvider.config({authHeader:"X-Authorization",tokenGetter:["localStorageService","$state","jwtHelper","$log",function(localStorageService,$state,jwtHelper,$log){var token=localStorageService.get("token");return token&&jwtHelper.isTokenExpired(token)?(localStorageService.remove("token"),0!=$state.current.name.indexOf("login")&&$state.go("login",{returnUrl:$state.current.name,returnParams:$state.current.params}),$log.info("Token expired"),null):token}],whiteListedDomains:[vrmConfig.apiDomain,vrmConfig.reportApiDomain],unauthenticatedRedirector:["$state",function($state){0!=$state.current.name.indexOf("login")&&0!=$state.current.name.indexOf("share")&&$state.go("login",{returnUrl:$state.current.name,returnParams:$state.current.params})}]}),$httpProvider.interceptors.push("jwtInterceptor"),$stateProvider.state("base",{name:"base",abstract:!0,views:{base:{templateUrl:"states/layout/with-nav.html",controller:"BaseController"}}});var mapsConfig={libraries:"drawing,places"};vrmConfig.googleMapsApiKey&&(mapsConfig.key=vrmConfig.googleMapsApiKey),uiGmapGoogleMapApiProvider.configure(mapsConfig),gmapProvider=uiGmapGoogleMapApiProvider}function CoreRun(vrmConfig,$log,$rootScope,$state,ApiService,authManager,localeEvents,WhitelabelService,$location,amMoment,$http,$timeout,$window,localStorageService,vrmNotificationType,vrmNotificationsService,locale){amMoment.changeLocale("en"),WhitelabelService.setWhitelabel(!1),$rootScope.redirectToDashboardDone=!1,authManager.redirectWhenUnauthenticated(),$rootScope.$on("$stateChangeStart",function(event,toState,toParams,fromState,fromParams,options){sprintf.cache={},ApiService.isLoggedIn()||0!=toState.name.indexOf("base.")||($state.go("login",{returnUrl:toState.name,returnParams:toParams}),event.preventDefault()),ApiService.isLoggedIn()&&0==toState.name.indexOf("landingpage")&&!$rootScope.redirectToDashboardDone&&($rootScope.redirectToDashboardDone=!0,$state.go("base.installation-overview"),event.preventDefault())}),$rootScope.$on(localeEvents.localeChanges,function(event,lang){gmapProvider.configure({language:lang}),amMoment.changeLocale(lang)}),$rootScope.$on("$stateChangeSuccess",function(){document.body.scrollTop=document.documentElement.scrollTop=0}),$rootScope.$on("$locationChangeSuccess",function(){vrmConfig.debug||($log.info("GTM :: Logging event: "+$location.url()+" "+document.getElementsByTagName("title")[0].innerHTML),dataLayer.push({event:"VirtualPageview",virtualPageURL:$location.url(),virtualPageTitle:document.getElementsByTagName("title")[0].innerHTML}))}),localStorageService.get("reloadedVersion")&&(localStorageService.set("reloadedVersion",!1),locale.ready("core").then(function(){vrmNotificationsService.add({type:vrmNotificationType.SUCCESS,message:locale.getString("core.new_version")})}));var fetchedOnce=!1,scheduleTimeout=function(){$timeout(function(){$http({method:"GET",url:"/js/version.json?"+(new Date).getTime()}).then(function(response){fetchedOnce=!0,response&&response.data.version&&$log.info("Our version: "+vrmConfig.buildVersion+" fetched version: "+response.data.version),response.data&&response.data.version!==vrmConfig.buildVersion?(window.__version=response.data.version,updateServiceWorker(function(){localStorageService.set("reloadedVersion",!0),$window.location.reload(!0)})):scheduleTimeout()},function(){scheduleTimeout()})},fetchedOnce?6e4:100)};scheduleTimeout()}}(),function(){"use strict";function FirmwareUpdateConfig($stateProvider){$stateProvider.state("base.installation.firmware-update",{url:"/firmware-update",views:{body:{templateUrl:"states/core/installation/settings/firmware-update.html",controller:"FirmwareUpdateController"}}})}FirmwareUpdateConfig.$inject=["$stateProvider"],angular.module("vrm.core").config(FirmwareUpdateConfig)}(),function(){"use strict";function FirmwareUpdateController($log,$scope,$stateParams,ApiService,MQTTService,$q,InstallationsService,vrmNotificationsService,vrmNotificationType,VrmModalService,locale,$timeout){function updateNormal(device){VrmModalService.openUpdateDeviceModal($scope),$scope.updateInProgress=!0;var path="/installations/"+$stateParams.id+"/firmware-update";ApiService.call(path,getUpdateData(device),"GET",!1,"json",!1).then(function(response){}).catch(function(response){response.data&&"error_message_code"in response.data&&updateError(response.data.error_message_code,response.data.error_message,response.data.error_code)})}function getUpdateData(device){var updateData={productId:device.id,serial:device.serial?device.serial:null,latest_firmware_version:device.latest_firmware_version?device.latest_firmware_version:null,version:device.version?device.version:null};return updateData[device.identificationType]=device.identificator,updateData}function uploadFileNormal(device){var requiredFileType="nad"===device.identificationType?"vup":"dup";VrmModalService.openUploadModal($scope,"firmware_"+requiredFileType,function(files){if(1==files.length&&files[0].name.split(".").pop()==requiredFileType){var file=files[0],data=new FormData,updateData=getUpdateData(device);for(var key in updateData)data.append(key,updateData[key]);(function(file){var deferred=$q.defer(),reader=new FileReader;return reader.onload=function(){deferred.resolve(reader.result.split(",")[1])},reader.readAsDataURL(file),deferred.promise})(file).then(function(base64Content){data.append("firmware",base64Content);var path="/installations/"+$stateParams.id+"/firmware-update";$scope.updateInProgress=!0,$timeout(function(){VrmModalService.openUpdateDeviceModal($scope)},510),ApiService.call(path,data,"POST",!1,"json",!1).then(function(response){}).catch(function(response){response.data&&"error_message_code"in response.data&&updateError(response.data.error_message_code,response.data.error_message,response.data.error_code)})})}else type=requiredFileType,$timeout(function(){VrmModalService.openErrorModal($scope,"firmware-update.file-upload-error_"+type)},510);var type},{productId:device.id,name:device.description})}function updateError(errorMessageCode,errorMessage,errorCode){$.magnificPopup.close();var errorMsgKey="firmware-update."+(errorMessageCode=errorMessageCode||"update-error");VrmModalService.openErrorModal($scope,errorMsgKey,errorMessage,errorCode),$timeout(function(){$scope.fetchUpdatableDevices()},1e3),resetProgress()}function fetchingError(errorMessageCode,errorMessage,errorCode){$.magnificPopup.close();var errorMsgKey="firmware-update."+(errorMessageCode=(errorMessageCode=errorMessageCode||"fetching-devices-error-full").split(".").join("-"));VrmModalService.openErrorModal($scope,errorMsgKey,errorMessage,errorCode),$scope.fetchingError=!0}function resetProgress(){$scope.status="Waiting for status updates",$scope.progress=0,$scope.fetchingProgress=10}$log.info("FirmwareUpdateController"),$scope.forms={},$scope.progress=0,$scope.status="Querying product",$scope.updateInProgress=!1,$scope.fetchingStatusCode="connecting",$scope.fetchingError=!1,$scope.partialFetchInfo=null,$scope.fetchingProgress=10,$scope.collapsedUpload=!0,InstallationsService.getInstallation($stateParams.id).then(function(result){$scope.installation=result,MQTTService.subscribeToPath({identifier:$scope.installation.identifier,dbusServiceType:"status/vrm_update_status",dbusPath:"",instance:"",callback:function(message){var payload=message.payload;$scope.updateInProgress||(VrmModalService.openUpdateDeviceModal($scope),$scope.updateInProgress=!0),$scope.progress=payload.progress,$scope.status=payload.status,$scope.progress<0&&($scope.updateInProgress=!1,updateError(payload.error_message_code,payload.error_message,payload.error_code)),100<=$scope.progress&&($scope.updateInProgress=!1,$.magnificPopup.close(),VrmModalService.openSuccessModal($scope,"firmware-update.update-success"),$timeout(function(){$scope.fetchUpdatableDevices()},1e3),resetProgress()),$scope.$evalAsync()},callbackIdentifier:"firmware_update_status",prefix:"P/"}),$timeout(function(){$scope.updateInProgress||$scope.fetchUpdatableDevices()},3e3,!1)}),$scope.fetchUpdatableDevices=function(){$scope.devices=null,$scope.fetchingError=!1,$scope.fetchingStatusCode="starting",$scope.fetchingProgress=20,$scope.partialFetchInfo=null;var path="/installations/"+$stateParams.id+"/list-devices";ApiService.call(path,null,"GET",!1,"json",!1).then(function(response){if(response.data.success){MQTTService.subscribeToPath({identifier:$scope.installation.identifier,dbusServiceType:"status/vrm_updatable_devices",dbusPath:"",instance:"",callback:function(message){var payload=message.payload;$scope.fetchingProgress=payload.progress,$scope.fetchingStatusCode=payload.status_code,100<=payload.progress&&($scope.devices=payload.devices),payload.progress<0&&payload.partial&&($scope.partialFetchInfo={errorMessage:payload.error_message,errorCode:payload.error_code}),payload.progress<0&&!payload.partial&&fetchingError(payload.error_message_code,payload.error_message,payload.error_code),$scope.$evalAsync()},callbackIdentifier:"firmware_update_devices",prefix:"P/"})}}).catch(function(response){response.data&&"error_message_code"in response.data&&fetchingError(response.data.error_message_code,response.data.error_message,response.data.error_code),$scope.fetchingError=!0})},$scope.update=function(device){$scope.showWarning(device)?VrmModalService.openWarningModal($scope,function(){$timeout(function(){updateNormal(device)},510)},"firmware-update.continue-update","firmware-update.boot-mode-warning"):updateNormal(device)},$scope.uploadFile=function(device){$scope.showWarning(device)?VrmModalService.openWarningModal($scope,function(){$timeout(function(){uploadFileNormal(device)},510)},"firmware-update.continue-update","firmware-update.boot-mode-warning"):uploadFileNormal(device)},$scope.$on("$destroy",function(){MQTTService.unsubScribeFromPath({identifier:$scope.$parent.installation.identifier,dbusServiceType:"status/vrm_update_status",dbusPath:"",instance:"",callbackIdentifier:"firmware_update_status",prefix:"P/"}),MQTTService.unsubScribeFromPath({identifier:$scope.installation.identifier,dbusServiceType:"status/vrm_updatable_devices",dbusPath:"",instance:"",callbackIdentifier:"firmware_update_devices",prefix:"P/"})}),$scope.updatable=function(device){return device.updatable},$scope.inLibrary=function(device){return device.latest_firmware_version},$scope.showWarning=function(device){return $scope.bootMode(device)&&["104","105","106","107","108","300","A101","A040","A041","A042","A043","A044","A045","A046","A047","A048","A049","A04A","A04B","A04C","A04D","A04E","A04F","A050","A051","A052","A053","A054","A055","A056","A057","A058","A059","A05A","A05B","A05C","A05D","A05E","A05F","A060","A061","A062","A063","A064","A065","A066","A067","A068","A069","A06A","A06B","A06C","A06D","A06E","A06F","A070","A071","A072","A073","A074","A075","A076","A077","A078","A079","A07A","A07B","A07C","A07D","A07E","A07F"].includes(device.id)},$scope.bootMode=function(device){return device.mode&&"boot"===device.mode},$scope.newerVersion=function(device){return $scope.inLibrary(device)&&+device.versionAsDecimal<+device.latest_firmware_number},$scope.validVersion=function(device){return!!device.versionAsDecimal},$scope.getUpdateScenario=function(device){return $scope.updatable(device)?$scope.inLibrary(device)?$scope.bootMode(device)?$scope.showWarning(device)?"updatable_boot_mode_warning":"updatable_boot_mode":$scope.validVersion(device)?$scope.newerVersion(device)?"update":"up_to_date":"no_installed_firmware":"not_in_library":"not_updatable"}}FirmwareUpdateController.$inject=["$log","$scope","$stateParams","ApiService","MQTTService","$q","InstallationsService","vrmNotificationsService","vrmNotificationType","VrmModalService","locale","$timeout"],angular.module("vrm.core").controller("FirmwareUpdateController",FirmwareUpdateController)}(),function(){"use strict";function SettingsConfig($stateProvider){$stateProvider.state("base.installation.settings.users",{url:"/users",views:{settings:{templateUrl:"states/core/installation/settings/users.html",controller:"UserSettingsController"}}})}SettingsConfig.$inject=["$stateProvider"],angular.module("vrm.core").config(SettingsConfig)}(),function(){"use strict";function UserSettingsController($log,$scope,$state,$q,$stateParams,VrmModalService,vrmInstallationAccessLevel,ApiService,UserService,vrmNotificationsService,vrmNotificationType,locale){$log.info("UserSettingsController"),$scope.users=[],$scope.invites=[],$scope.pending=[];var _parseUsers=function(response){for(var index in $scope.users=response.data.users,$scope.users)$scope.users[index].fullControl=$scope.users[index].accessLevel==vrmInstallationAccessLevel.FULL_CONTROL},_parseInvites=function(response){for(var index in $scope.invites=response.data.invites,$scope.invites)$scope.invites[index].fullControl=$scope.invites[index].accessLevel==vrmInstallationAccessLevel.FULL_CONTROL},refreshUsers=function(){ApiService.installations($stateParams.id,"users").then(function(response){_parseUsers(response),_parseInvites(response)})};ApiService.installations($stateParams.id,"users").then(function(response){for(var index in _parseUsers(response),_parseInvites(response),$scope.invites=response.data.invites,$scope.pending=response.data.pending,$scope.pending)$scope.pending[index].fullControl=!1;$scope.deleteInvite=function(invite){ApiService.installations($stateParams.id,"invite-delete",{inviteKey:invite.inviteKey},"DELETE").then(function(response){vrmNotificationsService.add({type:vrmNotificationType.SUCCESS,message:locale.getString("users.invite_removed_message")}),$scope.invites.splice(_.findIndex($scope.invites,{inviteKey:invite.inviteKey}),1)})},$scope.unlinkUser=function(user){ApiService.installations($stateParams.id,"unlink-user",{idUser:user.idUser},"POST").then(function(response){vrmNotificationsService.add({type:vrmNotificationType.SUCCESS,message:locale.getString("users.user_removed_message")}),$scope.users.splice(_.findIndex($scope.users,{idUser:user.idUser}),1)})}}),$scope.$watch("users",function(){var arrUsersToUpdate=[];for(var index in $scope.users)$scope.users[index].fullControl!=($scope.users[index].accessLevel==vrmInstallationAccessLevel.FULL_CONTROL)&&(arrUsersToUpdate[index]=$scope.users[index]);0<arrUsersToUpdate.length&&function(arrUsersToUpdate){var arrIdUsers=[],arrAccessLevels=[];for(var index in arrUsersToUpdate){var user=arrUsersToUpdate[index];arrIdUsers.push(user.idUser),arrAccessLevels.push(user.fullControl?vrmInstallationAccessLevel.FULL_CONTROL:vrmInstallationAccessLevel.MONITORING),user.accessLevel=user.fullControl?vrmInstallationAccessLevel.FULL_CONTROL:vrmInstallationAccessLevel.MONITORING}ApiService.installations($stateParams.id,"user-rights",{idUser:arrIdUsers,accessLevel:arrAccessLevels},"POST").then(function(){vrmNotificationsService.add({type:vrmNotificationType.SUCCESS,message:locale.getString("core.settings_saved")})}).catch(function(){refreshUsers()})}(arrUsersToUpdate)},!0),$scope.$watch("invites",function(){var arrInvitesToUpdate=[];for(var index in $scope.invites)$scope.invites[index].fullControl!=($scope.invites[index].accessLevel==vrmInstallationAccessLevel.FULL_CONTROL)&&(arrInvitesToUpdate[index]=$scope.invites[index]);0<arrInvitesToUpdate.length&&function(arrInvitesToUpdate){var arrInviteKey=[],arrAccessLevels=[];for(var index in arrInvitesToUpdate){var invite=arrInvitesToUpdate[index];arrInviteKey.push(invite.inviteKey),arrAccessLevels.push(invite.fullControl?vrmInstallationAccessLevel.FULL_CONTROL:vrmInstallationAccessLevel.MONITORING),invite.accessLevel=invite.fullControl?vrmInstallationAccessLevel.FULL_CONTROL:vrmInstallationAccessLevel.MONITORING}ApiService.installations($stateParams.id,"invite-rights",{inviteKey:arrInviteKey,accessLevel:arrAccessLevels},"POST").then(function(){vrmNotificationsService.add({type:vrmNotificationType.SUCCESS,message:locale.getString("core.settings_saved")})}).catch(function(){refreshUsers()})}(arrInvitesToUpdate)},!0),$scope.hasMoreThanOneAdmin=function(users){for(var adminCount=0,i=0;i<users.length;i++)users[i].accessLevel&&adminCount++;return 1<adminCount},$scope.hasAccessLevel=function(user){return user.accessLevel},$scope.vrmInstallationAccessLevel=vrmInstallationAccessLevel,$scope.invite=function(){VrmModalService.openInviteModal($scope,$stateParams.id,function(data,callback){var accessLevel=data.fullControl?vrmInstallationAccessLevel.FULL_CONTROL:vrmInstallationAccessLevel.MONITORING;ApiService.installations($stateParams.id,"invite",{personal_message:data.message,name:data.name,email:data.email,accessLevel:accessLevel},"POST").then(function(response){vrmNotificationsService.add({type:vrmNotificationType.SUCCESS,message:locale.getString("users.invited_message")}),response.data.data.fullControl=response.data.data.accessLevel==vrmInstallationAccessLevel.FULL_CONTROL,response.data.user?$scope.users.push(response.data.data):$scope.invites.push(response.data.data),callback()})})};var _sendRequest=function(request,message){return ApiService.installations($stateParams.id,"update-add-request",{idUser:request.idUser,approved:request.approved,accessLevel:!0===request.fullControl?vrmInstallationAccessLevel.FULL_CONTROL:vrmInstallationAccessLevel.MONITORING},"POST").then(function(){locale.ready("invite").then(function(){vrmNotificationsService.add({type:vrmNotificationType.SUCCESS,message:locale.getString(message)}),$scope.pending=_.filter($scope.pending,function(item){return item.idUser!==request.idUser||item.idSite!==request.idSite}),refreshUsers()})})};$scope.approveRequest=function(request){request.approved=!0,_sendRequest(request,"users.request_approved")},$scope.denyRequest=function(request){request.approved=!1,_sendRequest(request,"users.request_denied")}}UserSettingsController.$inject=["$log","$scope","$state","$q","$stateParams","VrmModalService","vrmInstallationAccessLevel","ApiService","UserService","vrmNotificationsService","vrmNotificationType","locale"],angular.module("vrm.core").controller("UserSettingsController",UserSettingsController)}(),function(){"use strict";function SettingsConfig($stateProvider){$stateProvider.state("base.installation.settings.tags",{url:"/tags",views:{settings:{templateUrl:"states/core/installation/settings/tags.html",controller:"TagSettingsController"}}})}SettingsConfig.$inject=["$stateProvider"],angular.module("vrm.core").config(SettingsConfig)}(),function(){"use strict";function TagSettingsController($log,$scope,$state,$stateParams,InstallationsService,ApiService){$log.info("TagSettingsController"),$scope.tags=InstallationsService.tags,$scope.select={tags:[]},InstallationsService.getInstallation($stateParams.id).then(function(installation){installation.tags&&($scope.select.tags=installation.tags.map(function(tag){return tag.name})),$scope.$watch("select.tags",function(tags,oldTags){if(!angular.equals(tags,oldTags)){var tagsToSet=[];_.each($scope.select.tags,function(tag){tagsToSet.push(tag.label?tag.label:tag)}),ApiService.installationSettings($stateParams.id,{tags:tagsToSet}).then(function(){InstallationsService.reload()})}})})}TagSettingsController.$inject=["$log","$scope","$state","$stateParams","InstallationsService","ApiService"],angular.module("vrm.core").controller("TagSettingsController",TagSettingsController).run(["$templateCache",function($templateCache){$templateCache.put("select2/select-multiple.tpl.html",'<div class="ui-select-container ui-select-multiple select2 select2-container select2-container-multi" ng-class="{\'select2-container-active select2-dropdown-open open\': $select.open, \'select2-container-disabled\': $select.disabled}"><ul class="select2-choices"><span class="ui-select-match"></span><li class="select2-search-field"><input type="search" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" role="combobox" aria-expanded="true" aria-owns="ui-select-choices-{{ $select.generatedId }}" aria-label="{{ $select.baseTitle }}" aria-activedescendant="ui-select-choices-row-{{ $select.generatedId }}-{{ $select.activeIndex }}" class="select2-input ui-select-search" placeholder="Tags...  " ng-disabled="$select.disabled" ng-hide="$select.disabled" ng-model="$select.search" ng-click="$select.activate()" style="width: 34px;" ondrop="return false;"></li></ul><div class="ui-select-dropdown select2-drop select2-with-searchbox select2-drop-active" ng-class="{\'select2-display-none\': !$select.open || $select.items.length === 0}"><div class="ui-select-choices"></div></div></div>')}])}(),function(){"use strict";function SettingsConfig($stateProvider){$stateProvider.state("base.installation.settings.location",{url:"/location",views:{settings:{templateUrl:"states/core/installation/settings/location.html",controller:"LocationSettingsController"}}})}SettingsConfig.$inject=["$stateProvider"],angular.module("vrm.core").config(SettingsConfig)}(),function(){"use strict";function LocationSettingsController($log,$scope,$state,$q,$stateParams,InstallationsService,uiGmapGoogleMapApi,VrmMapService,ApiService){$log.info("LocationSettingsController"),$q.all([InstallationsService.getInstallation($stateParams.id),uiGmapGoogleMapApi]).then(function(result){var installation=result[0];result[1].visualRefresh=!0,$scope.placesChanged=function(searchBox){console.log("Search Box :",searchBox.getPlaces());var location=searchBox.getPlaces(),lat=location[0].geometry.location.lat(),lng=location[0].geometry.location.lng();$scope.map.center.latitude=lat,$scope.map.coords.latitude=lat,$scope.map.center.longitude=lng,$scope.map.coords.longitude=lng,$scope.map.zoom=14},$scope.map={bounds:{},control:{},center:{latitude:installation.data.lt?installation.data.lt.rawValue:null,longitude:installation.data.lg?installation.data.lg.rawValue:null},coords:{latitude:installation.data.lt?installation.data.lt.rawValue:null,longitude:installation.data.lg?installation.data.lg.rawValue:null},zoom:7,markers:[],options:{styles:[{stylers:[{visibility:"simplified"}]}],mapTypeControl:!1,panControl:!1,zoomControl:!0,scaleControl:!1,rotateControl:!1,streetViewControl:!1,overviewMapControl:!1,scrollwheel:!1},markerOptions:{icon:VrmMapService.buildMarkerIcon(VrmMapService.getMarkerColor(installation)),draggable:!0}},$scope.save=function(){ApiService.installationSettings($stateParams.id,{lat:$scope.map.coords.latitude,lng:$scope.map.coords.longitude}).then(function(){installation.data.lt=$scope.map.coords.latitude,installation.data.lg=$scope.map.coords.longitude})}})}LocationSettingsController.$inject=["$log","$scope","$state","$q","$stateParams","InstallationsService","uiGmapGoogleMapApi","VrmMapService","ApiService"],angular.module("vrm.core").controller("LocationSettingsController",LocationSettingsController)}(),function(){"use strict";function ReportingConfig($stateProvider){$stateProvider.state("base.installation.reporting",{url:"/reports",views:{body:{templateUrl:"states/core/installation/reporting/reporting.html",controller:"ReportingController"}}}).state("base.installation.economic",{url:"/economic",views:{body:{templateUrl:"states/core/installation/reporting/economic.html",controller:"EconomicController"}}}).state("base.installation.economic-result",{url:"/economic-result?scenario&start&end&fuel_litre_price&genset_maintenance_costs&grid_kwh_price&solar_maintenance_costs&currency",views:{body:{templateUrl:"states/core/installation/reporting/economic-result.html",controller:"EconomicController"}}})}ReportingConfig.$inject=["$stateProvider"],angular.module("vrm.core").config(ReportingConfig)}(),function(){"use strict";function ReportingController($log,$scope,$filter,ApiService,VrmModalService,vrmNotificationsService,vrmNotificationType,$timeout){$log.info("ReportingController"),$scope.downloading=!1,$scope.$watch("downloading",function(){$scope.downloading?$timeout(function(){VrmModalService.openDownloadModal($scope)},10):$.magnificPopup.close()}),$scope.downloadPdf=function(data){$scope.downloading?locale.ready("advanced").then(function(){vrmNotificationsService.add({type:vrmNotificationType.ERROR,message:locale.getString("advanced.download_pending")})}):($scope.downloading=!0,ApiService.installationDownload($scope.installation.id,"report",data,!0).then(function(response){var siteDescription=$scope.installation&&$scope.installation.name?$scope.installation.name.toString().replace(/[^a-zA-Z0-9]+/g,""):"",start=$filter("date")(1e3*data.start,"yyyyMMdd",$scope.installation.timezone),end=$filter("date")(1e3*data.end,"yyyyMMdd",$scope.installation.timezone);saveAs(response.data,siteDescription+"_"+start+"_to_"+end+".pdf"),$scope.downloading=!1},function(err){locale.ready("reporting").then(function(){vrmNotificationsService.add({type:vrmNotificationType.ERROR,message:locale.getString("reporting.download-error"),timeout:3e4})}),$scope.downloading=!1}))},$scope.openModal=function(){VrmModalService.openReportingModal($scope)}}ReportingController.$inject=["$log","$scope","$filter","ApiService","VrmModalService","vrmNotificationsService","vrmNotificationType","$timeout"],angular.module("vrm.core").controller("ReportingController",ReportingController)}(),function(){"use strict";function EconomicController($log,$timeout,locale,$scope,$stateParams,$state,InstallationsService,GraphService){if($log.info("EconomicController"),$scope.datePicker={range:{},control:{},initial:{}},$stateParams.start)$scope.datePicker.initial.startDate=$stateParams.start;else{var firstDayOfTheMonth=(new Date).setDate(1);$scope.datePicker.initial.startDate=~~(firstDayOfTheMonth/1e3)}$scope.datePicker.initial.endDate=$stateParams.end||~~(new Date/1e3),locale.ready(["common"]).then(function(){$scope.currencies=[{name:locale.getString("common.euro"),sign:"â‚¬"},{name:locale.getString("common.dollar"),sign:"$"},{name:locale.getString("common.pound"),sign:"Â£"}],$scope.economic={scenarios:["genset","grid"],scenario:$stateParams.scenario||"grid",solar_maintenance_costs:+$stateParams.solar_maintenance_costs||0,genset_maintenance_costs:+$stateParams.genset_maintenance_costs||0,grid_kwh_price:+$stateParams.grid_kwh_price||.2,fuel_litre_price:+$stateParams.fuel_litre_price||1.5,currency:function(sign){if(sign)return $scope.currencies.find(function(currency){return currency.sign===sign});return $scope.currencies[0]}($stateParams.currency)},$scope.setScenario=function(scenario){$scope.economic.scenario=scenario},$scope.tabs=["table","graph"],$scope.activeTab="table",$scope.setActiveTab=function(tab){$scope.activeTab=tab},InstallationsService.getInstallation($stateParams.id).then(function(installation){$scope.installation=installation,$scope.hasGrid=installation.data.si1&&"1"===installation.data.si1.rawValue||installation.data.si2&&"1"===installation.data.si2.rawValue,$scope.hasGenset=installation.data.si1&&"2"===installation.data.si1.rawValue||installation.data.si2&&"2"===installation.data.si2.rawValue,"base.installation.economic-result"===$state.current.name&&GraphService.ready().then(function(){GraphService.highcharts.setOptions({global:{currencySign:$scope.economic.currency.sign,timezoneOffset:-$scope.installation.timezone_offset/60}}),$scope.graph=GraphService.getConfig("economic"),loadData(),$scope.$watch("economic",reloadData,!0);$scope.$watchGroup(["datePicker.range.startDate"," datePicker.range.endDate"],reloadData)})}),$scope.generateScenario=function(){var scenarioParameters={scenario:$scope.economic.scenario,start:$scope.datePicker.range.startDate,end:$scope.datePicker.range.endDate,solar_maintenance_costs:$scope.economic.solar_maintenance_costs,genset_maintenance_costs:$scope.economic.genset_maintenance_costs,grid_kwh_price:$scope.economic.grid_kwh_price,fuel_litre_price:$scope.economic.fuel_litre_price,currency:$scope.economic.currency.sign};$state.go("base.installation.economic-result",scenarioParameters)};var dataReloadTimeout=null;function reloadData(){$timeout.cancel(dataReloadTimeout),dataReloadTimeout=$timeout(function(){"graph"===$scope.activeTab&&($scope.graph.loading=!0,function resetZoomState(targetChart){if(targetChart&&targetChart.getHighcharts){var chart=targetChart.getHighcharts();chart.zoomOut()}else targetChart&&_.defer(_.once(function(){resetZoomState(targetChart)}))}($scope.graph)),loadData()},300)}function loadData(){if($scope.installation&&$scope.datePicker.range.startDate){var roundedStartDate=$scope.datePicker.range.startDate,roundedEndDate=$scope.datePicker.range.endDate,remainder=$scope.datePicker.range.endDate%3600;0!==remainder&&(roundedEndDate=$scope.datePicker.range.endDate-remainder+3600,roundedStartDate=$scope.datePicker.range.startDate-remainder+3600);var interval=$scope.datePicker.range.interval||"days",scenario=$scope.economic.scenario,solar_maintenance_costs=$scope.economic.solar_maintenance_costs,grid_kwh_price=$scope.economic.grid_kwh_price,parameters={compare_type:scenario,solar_maintenance_costs:solar_maintenance_costs,genset_maintenance_costs:$scope.economic.genset_maintenance_costs,fuel_litre_price:$scope.economic.fuel_litre_price,grid_kwh_price:grid_kwh_price};GraphService.getGraphData($stateParams.id,roundedStartDate,roundedEndDate,interval,"economic",parameters).then(function(data){$scope.economicData=data,$scope.graph.series[0].data=emptyOnNull(data.records.grid),$scope.graph.series[1].data=emptyOnNull(data.records.genset),$scope.graph.series[2].data=emptyOnNull(data.records.actual_solar_maintenance),$scope.graph.series[3].data=emptyOnNull(data.records.actual_genset_maintenance),$scope.graph.series[4].data=emptyOnNull(data.records.compare),$scope.graph.series[5].data=emptyOnNull(data.records.compare_maintenance),$scope.economicTotals=data.totals,$scope.economicTotals.actual=data.totals.grid+data.totals.genset,$scope.economicTotals.actual_maintenance=data.totals.actual_solar_maintenance+data.totals.actual_genset_maintenance,$scope.economicTotals.total_actual=$scope.economicTotals.actual+$scope.economicTotals.actual_maintenance,$scope.economicTotals.total_scenario=data.totals.compare+data.totals.compare_maintenance}).catch(function(){$scope.graph.series[0].data=[],$scope.graph.series[1].data=[],$scope.graph.series[2].data=[],$scope.graph.series[3].data=[],$scope.graph.series[4].data=[],$scope.graph.series[5].data=[]}).then(function(){$scope.graph.series[0].visible=!0,$scope.graph.series[1].visible=!0,$scope.graph.series[2].visible=!0,$scope.graph.series[3].visible=!0,$scope.graph.series[4].visible=!0,$scope.graph.series[5].visible=!0,$scope.graph.loading=!1,$scope.actualColspanValue=$scope.hasGrid?2:1,$scope.actualColspanValue+=$scope.hasGenset?2:0,function(){switch($scope.datePicker.range.interval){case"years":$scope.tableTimeString="y";break;case"months":$scope.tableTimeString="MMM, y";break;case"weeks":$scope.tableTimeString="MMM d, y";break;case"hours":$scope.tableTimeString="HH:mm";break;default:$scope.tableTimeString="MMM d, y"}}()})}}function emptyOnNull(data){return data=data||[],data=_.sortBy(data,function(data){return data[0]})}$scope.$on("$destroy",function(){$timeout.cancel(dataReloadTimeout)})})}EconomicController.$inject=["$log","$timeout","locale","$scope","$stateParams","$state","InstallationsService","GraphService"],angular.module("vrm.core").controller("EconomicController",EconomicController)}(),function(){"use strict";function RemoteConfigurationConfig($stateProvider){$stateProvider.state("base.installation.remote-configuration",{url:"/remote-configuration",views:{body:{templateUrl:"states/core/installation/settings/remote-configuration.html",controller:"RemoteConfigurationController"}}})}RemoteConfigurationConfig.$inject=["$stateProvider"],angular.module("vrm.core").config(RemoteConfigurationConfig)}(),function(){"use strict";function RemoteConfigurationController($log,$scope,$stateParams,ApiService,MQTTService,$q,InstallationsService,vrmNotificationsService,vrmNotificationType,VrmModalService,locale,$timeout){function downloadError(errorMessageCode,errorMessage,errorCode){$.magnificPopup.close();var errorMsgKey="remote-configuration."+(errorMessageCode=(errorMessageCode=errorMessageCode||"download-error").split(".").join("-"));VrmModalService.openErrorModal($scope,errorMsgKey,errorMessage,errorCode),resetProgress()}function configurationError(errorMessageCode,errorMessage,errorCode){$.magnificPopup.close();var errorMsgKey="remote-configuration."+(errorMessageCode=(errorMessageCode=errorMessageCode||"configuration-error").split(".").join("-"));VrmModalService.openErrorModal($scope,errorMsgKey,errorMessage,errorCode),resetProgress()}function resetProgress(){$scope.status=$scope.defaultStatus,$scope.progress=0,unsubscribe()}function unsubscribe(){MQTTService.unsubScribeFromPath({identifier:$scope.$parent.installation.identifier,dbusServiceType:"status/vrm_veconf_read",dbusPath:"",instance:"",callbackIdentifier:"veconf_read",prefix:"P/"}),MQTTService.unsubScribeFromPath({identifier:$scope.$parent.installation.identifier,dbusServiceType:"status/vrm_veconf_write",dbusPath:"",instance:"",callbackIdentifier:"veconf_write",prefix:"P/"}),MQTTService.unsubScribeFromPath({identifier:$scope.installation.identifier,dbusServiceType:"system/0/Serial",dbusPath:"",instance:"",callbackIdentifier:"veconf_serial"})}$log.info("RemoteConfigurationController"),$scope.defaultStatus=null,$scope.forms={},$scope.model={},$scope.services=null,$scope.progress=0,$scope.status=null,$scope.downloading=!1,$scope.uploading=!1,$scope.configuring=!1,$scope.fetchingError=!1,$scope.$watch("installation.identifier",function(){$scope.installation&&MQTTService.subscribeToPath({identifier:$scope.installation.identifier,dbusServiceType:"system/0/Serial",dbusPath:"",instance:"",callback:function(){},callbackIdentifier:"veconf_serial"})}),locale.ready("remote-configuration").then(function(){$scope.defaultStatus=locale.getString("remote-configuration.waiting_for_status_updates"),$scope.status||($scope.status=$scope.defaultStatus)}),$scope.fetchConfigurableServices=function(){$scope.services=null,$scope.fetchingError=null,$q.all([InstallationsService.getInstallation($stateParams.id),ApiService.call("/installations/"+$stateParams.id+"/vebus-list",null,"GET",!1,"json",!1)]).then(function(result){$scope.installation=result[0];var response=result[1];$scope.services=response.data.services,0<$scope.services.length&&($scope.model.servicename=$scope.services[0].servicename,$scope.model.readablename=$scope.services[0].readablename)}).catch(function(response){response.data&&"error_message_code"in response.data&&function(errorMessageCode,errorMessage,errorCode){$.magnificPopup.close();var errorMsgKey="remote-configuration."+(errorMessageCode=(errorMessageCode=errorMessageCode||"fetching-services-error-full").split(".").join("-"));VrmModalService.openErrorModal($scope,errorMsgKey,errorMessage,errorCode),$scope.fetchingError=!0}(response.data.error_message_code,response.data.error_message,response.data.error_code),$scope.fetchingError=!0})},$scope.fetchConfigurableServices(),$scope.download=function(){$scope.downloading=!0,VrmModalService.openDownloadConfigurationModal($scope);var path="/installations/"+$stateParams.id+"/veconf-read?serviceName="+$scope.model.servicename;MQTTService.subscribeToPath({identifier:$scope.installation.identifier,dbusServiceType:"status/vrm_veconf_read",dbusPath:"",instance:"",callback:function(message){var payload=message.payload;$scope.progress=payload.progress,$scope.status=payload.status,$scope.progress<0&&($scope.downloading=!1,downloadError(payload.error_message_code,payload.error_message,payload.error_code)),payload.success&&payload.file&&(saveAs(function(base64Data,contentType){contentType=contentType||"";for(var byteCharacters=atob(base64Data),bytesLength=byteCharacters.length,slicesCount=Math.ceil(bytesLength/1024),byteArrays=new Array(slicesCount),sliceIndex=0;sliceIndex<slicesCount;++sliceIndex){for(var begin=1024*sliceIndex,end=Math.min(begin+1024,bytesLength),bytes=new Array(end-begin),offset=begin,i=0;offset<end;++i,++offset)bytes[i]=byteCharacters[offset].charCodeAt(0);byteArrays[sliceIndex]=new Uint8Array(bytes)}return new Blob(byteArrays,{type:contentType})}(payload.file.content),payload.file.filename),$scope.downloading=!1,resetProgress(),$.magnificPopup.close()),$scope.$applyAsync()},callbackIdentifier:"veconf_read",prefix:"P/"}),ApiService.call(path,null,"GET",!1,"json",!1).then(function(response){}).catch(function(response){response.data&&"error_message_code"in response.data&&downloadError(response.data.error_message_code,response.data.error_message,response.data.error_code)})},$scope.upload=function(files){VrmModalService.openUploadModal($scope,"veconf",function(files){if(1!=files.length||"rvsc"!==files[0].name.split(".").pop()&&"rvms"!==files[0].name.split(".").pop())$timeout(function(){VrmModalService.openErrorModal($scope,"remote-configuration.file-upload-error")},510);else{var file=files[0],data=new FormData;data.append("serviceName",$scope.model.servicename),function(file){var deferred=$q.defer(),reader=new FileReader;return reader.onload=function(){deferred.resolve(reader.result.split(",")[1])},reader.readAsDataURL(file),deferred.promise}(file).then(function(base64Content){data.append("file",base64Content),$scope.configuring=!0,$timeout(function(){VrmModalService.openConfiguringModal($scope)},510);var path="/installations/"+$stateParams.id+"/veconf-write";ApiService.call(path,data,"POST",!1,"json",!1).then(function(response){MQTTService.subscribeToPath({identifier:$scope.installation.identifier,dbusServiceType:"status/vrm_veconf_write",dbusPath:"",instance:"",callback:function(message){var payload=message.payload;$scope.progress=payload.progress,$scope.status=payload.status,$scope.progress<0&&($scope.configuring=!1,configurationError(payload.error_message_code,payload.error_message,payload.error_code)),100<=$scope.progress&&($scope.configuring=!1,$.magnificPopup.close(),VrmModalService.openSuccessModal($scope,"remote-configuration.configuration-success"),resetProgress()),$scope.$applyAsync()},callbackIdentifier:"veconf_write",prefix:"P/"})}).catch(function(response){response.data&&"error_message_code"in response.data&&configurationError(response.data.error_message_code,response.data.error_message,response.data.error_code)})})}})},$scope.$on("$destroy",function(){unsubscribe()})}RemoteConfigurationController.$inject=["$log","$scope","$stateParams","ApiService","MQTTService","$q","InstallationsService","vrmNotificationsService","vrmNotificationType","VrmModalService","locale","$timeout"],angular.module("vrm.core").controller("RemoteConfigurationController",RemoteConfigurationController)}(),function(){"use strict";function SettingsConfig($stateProvider){$stateProvider.state("base.installation.settings.geofence",{url:"/geofence",views:{settings:{templateUrl:"states/core/installation/settings/geofence.html",controller:"GeofenceSettingsController"}}})}SettingsConfig.$inject=["$stateProvider"],angular.module("vrm.core").config(SettingsConfig)}(),function(){"use strict";function GeofenceSettingsController($log,$scope,$state,$q,$stateParams,InstallationsService,uiGmapGoogleMapApi,VrmMapService,ApiService){$log.info("GeofenceSettingsController"),$q.all([InstallationsService.getInstallation($stateParams.id),uiGmapGoogleMapApi]).then(function(result){var installation=result[0],maps=result[1];try{$scope.options={enable:installation.geofenceEnabled,geofence:JSON.parse(installation.geofence)}}catch(error){$scope.options={enable:!1,geofence:null}}var drawOptions={strokeWeight:0,fillOpacity:.45,editable:!0};maps.visualRefresh=!0;var shape=null;try{shape=VrmMapService.getShape($scope.options.geofence,!0)}catch(e){}function onShapeChange(){$scope.options.geofence=function(shape){{if(shape instanceof google.maps.Circle)return{type:"circle",radius:shape.getRadius(),center:{lat:shape.getCenter().lat(),lng:shape.getCenter().lng()}};if(shape instanceof google.maps.Rectangle){var ne=shape.getBounds().getNorthEast(),sw=shape.getBounds().getSouthWest();return{type:"rectangle",coords:{northeast:{lat:ne.lat(),lng:ne.lng()},southwest:{lat:sw.lat(),lng:sw.lng()}}}}if(shape instanceof google.maps.Polygon)return{type:"polygon",coords:_.map(shape.getPath().getArray(),function(latlng){return{lat:latlng.lat(),lng:latlng.lng()}})}}}(shape)}function addEventListeners(shape){shape instanceof google.maps.Circle?(shape.addListener("center_changed",onShapeChange),shape.addListener("radius_changed",onShapeChange)):shape instanceof google.maps.Rectangle?shape.addListener("bounds_changed",onShapeChange):shape instanceof google.maps.Polygon&&(shape.getPath().addListener("set_at",onShapeChange),shape.getPath().addListener("insert_at",onShapeChange))}$scope.map={bounds:{},control:{},center:{latitude:installation.data.lt?installation.data.lt.rawValue:null,longitude:installation.data.lg?installation.data.lg.rawValue:null},coords:{latitude:installation.data.lt?installation.data.lt.rawValue:null,longitude:installation.data.lg?installation.data.lg.rawValue:null},zoom:7,markers:[],options:{styles:[{stylers:[{visibility:"simplified"}]}],mapTypeControl:!1,panControl:!1,zoomControl:!0,scaleControl:!1,rotateControl:!1,streetViewControl:!1,overviewMapControl:!1,scrollwheel:!1},markerOptions:{icon:VrmMapService.buildMarkerIcon(VrmMapService.getMarkerColor(installation))},drawingOptions:{drawingControlOptions:{position:google.maps.ControlPosition.TOP_LEFT,drawingModes:[google.maps.drawing.OverlayType.CIRCLE,google.maps.drawing.OverlayType.POLYGON,google.maps.drawing.OverlayType.RECTANGLE]},rectangleOptions:drawOptions,circleOptions:drawOptions,polygonOptions:drawOptions,drawingControl:null==shape},drawingCtrl:{},drawEvents:{overlaycomplete:function(drawManager,eventName,scope,args){$scope.map.drawingOptions.drawingControl=!1,$scope.options.enable=!0,shape=args[0].overlay,onShapeChange(),addEventListeners(shape)}}},$scope.$watch("map.control.getGMap",function(){shape&&$scope.map.control.getGMap&&(shape.setMap($scope.map.control.getGMap()),addEventListeners(shape))}),$scope.save=function(){ApiService.installationSettings($stateParams.id,{geofenceEnabled:$scope.options.enable,geofence:$scope.options.geofence?JSON.stringify($scope.options.geofence):null}).then(function(){installation.geofenceEnabled=$scope.options.enable,installation.geofence=$scope.options.geofence?JSON.stringify($scope.options.geofence):null})},$scope.reset=function(){shape&&(shape.setMap(null),shape=null,$scope.options.geofence=null,$scope.options.enable=!1,$scope.map.drawingOptions.drawingControl=!0)}})}GeofenceSettingsController.$inject=["$log","$scope","$state","$q","$stateParams","InstallationsService","uiGmapGoogleMapApi","VrmMapService","ApiService"],angular.module("vrm.core").controller("GeofenceSettingsController",GeofenceSettingsController)}(),function(){"use strict";function GeneralConfig($stateProvider){$stateProvider.state("base.installation.settings.general",{url:"/general",views:{settings:{templateUrl:"states/core/installation/settings/general.html",controller:"GeneralSettingsController"}}})}GeneralConfig.$inject=["$stateProvider"],angular.module("vrm.core").config(GeneralConfig)}(),function(){"use strict";function GeneralSettingsController($log,$scope,$rootScope,$state,$stateParams,InstallationsService,ApiService,vrmNotificationsService,vrmNotificationType,locale,VrmModalService,$location){$log.info("GeneralSettingsController"),$scope.transfer={selectedSite:null},$scope.forms={},$scope.generalModel={name:null,portal:null,gsm:null},$scope.users=[],ApiService.installations($stateParams.id,"users").then(function(response){$scope.users=response.data.users}),InstallationsService.getInstallation($stateParams.id).then(function(installation){$scope.installationName=installation.name,$scope.generalModel.name=installation.name,$scope.generalModel.portal=installation.identifier,$scope.generalModel.gsm=installation.phonenumber,$scope.save=function(){$scope.forms.generalForm.$valid&&ApiService.installationSettings($stateParams.id,{description:$scope.generalModel.name,phonenumber:$scope.generalModel.gsm}).then(function(){installation.name=$scope.generalModel.name,installation.phonenumber=$scope.generalModel.gsm})},"resetAuthToken"===$location.hash()&&$("body, html").stop().animate({scrollTop:angular.element("#resetAuthToken").offset().top},"slow")});var _next=function(){$scope.confirmed&&InstallationsService.reload()};$scope.confirmed=!1,$scope.unlink=function(){$scope.confirmed=!1,VrmModalService.openConfirmModal($scope,"unlink",function(confirmed){confirmed&&($scope.confirmed=!0,ApiService.installations($stateParams.id,"unlink",null,"POST").then(function(){vrmNotificationsService.add({type:vrmNotificationType.SUCCESS,message:locale.getString("general.unlinked")})}))}),VrmModalService.next(_next)},$scope.remove=function(){$scope.confirmed=!1,VrmModalService.openConfirmFieldModal($scope,"delete_site",$scope.installationName,function(confirmed){confirmed&&($scope.confirmed=!0,ApiService.installations($stateParams.id,"remove",null,"POST").then(function(){vrmNotificationsService.add({type:vrmNotificationType.SUCCESS,message:locale.getString("general.removed")})}))}),VrmModalService.next(_next)},$scope.hasAtLeastOneAdmin=function(users){for(var adminCount=0,i=0;i<users.length;i++)users[i].accessLevel&&adminCount++;return 1<adminCount},$scope.reset=function(){$scope.confirmed=!1,VrmModalService.openConfirmModal($scope,"reset",function(confirmed){confirmed&&($scope.confirmed=!0,ApiService.installations($stateParams.id,"reset",null,"POST").then(function(){$scope.installation.invalidVRMAuthTokenUsedInLogRequest=0,$scope.installation.invalidMqttPasswordSentAt=0,vrmNotificationsService.add({type:vrmNotificationType.SUCCESS,message:locale.getString("general.reset_successful")})}))}),VrmModalService.next(_next)},$scope.swap=function(){$scope.transfer.selectedSite&&($scope.confirmed=!1,VrmModalService.openConfirmFieldModal($scope,"swap",$scope.installationName,function(confirmed){confirmed&&($scope.confirmed=!0,ApiService.installations($stateParams.id,"transfer-site",{identifier:$scope.transfer.selectedSite.identifier},"POST").then(function(){vrmNotificationsService.add({type:vrmNotificationType.SUCCESS,message:locale.getString("general.swapped")})}))}),VrmModalService.next(_next))}}GeneralSettingsController.$inject=["$log","$scope","$rootScope","$state","$stateParams","InstallationsService","ApiService","vrmNotificationsService","vrmNotificationType","locale","VrmModalService","$location"],angular.module("vrm.core").controller("GeneralSettingsController",GeneralSettingsController).filter("swapInstallationFilter",function(){return function(installations,idSite){var output=[];return _.size(installations)&&(output=_.filter(installations,function(installation){return installation.idSite!=idSite&&installation.view_permissions.update_settings})),output}})}(),function(){"use strict";function AlarmsSettingsConfig($stateProvider){$stateProvider.state("base.installation.settings.alarms",{url:"/alarms",views:{settings:{templateUrl:"states/core/installation/settings/alarms.html",controller:"AlarmsSettingsController"}}})}AlarmsSettingsConfig.$inject=["$stateProvider"],angular.module("vrm.core").config(AlarmsSettingsConfig)}(),function(){"use strict";function AlarmsSettingsController($log,$scope,$stateParams,ApiService,$q,InstallationsService,vrmNotificationsService,vrmNotificationType,locale,UserService){$log.info("AlarmsSettingsController"),$scope.forms={},$scope.nodataalarm={collapsed:!1},$scope.automaticalarm={collapsed:!1},$scope.myUser={id:null},UserService.getUser().then(function(user){$scope.myUser=user}),InstallationsService.getInstallation($stateParams.id).then(function(installation){$scope.nodataalarm.noDataAlarmActive=null!=installation.noDataAlarmTimeout,$scope.nodataalarm.noDataAlarmTimeout=installation.noDataAlarmTimeout,$scope.automaticalarm.alarmMonitoring=installation.alarmMonitoring}),$scope.rateLimited=!1,ApiService.installations($stateParams.id,"alarms").then(function(response){for(var i in $scope.attributes={},_.each(response.data.attributes,function(dataAttribute){$scope.attributes[dataAttribute.idDataAttribute]=dataAttribute}),_.each(response.data.alarms,function(alarm){_.each(["highAlarm","highAlarmHysteresis","lowAlarm","lowAlarmHysteresis","NotifyAfterSeconds"],function(property){alarm[property]&&(alarm[property]=parseFloat(alarm[property]))})}),$scope.alarms=response.data.alarms,$scope.rateLimited=response.data.rateLimited,$scope.alarms){var alarm=$scope.alarms[i];if($scope.alarms[i].copy=_.clone($scope.alarms[i]),alarm.idDataAttribute&&"enum"==$scope.attributes[alarm.idDataAttribute].dataType){for(var n in alarm.toggles={},$scope.attributes[alarm.idDataAttribute].enumValues)alarm.toggles[$scope.attributes[alarm.idDataAttribute].enumValues[n].valueEnum]=!0;for(var n in alarm.active)alarm.toggles[alarm.active[n]]=!1}}for(var index in $scope.users=response.data.users,$scope.users)$scope.users[index].alarms=1==$scope.users[index].receivesAlarmNotifications;function updateReceiveAlarm(user){var receivesAlarmNotifications=user.alarms?1:0;return ApiService.installations($stateParams.id,"alarm-user/"+user.idUser,{receivesAlarmNotifications:receivesAlarmNotifications},"PUT").then(function(){user.receivesAlarmNotifications=receivesAlarmNotifications})}function updateAlarm(alarm){var data=_.pick(alarm,"idDataAttribute","instance");return alarm.idDataAttribute&&"enum"==$scope.attributes[alarm.idDataAttribute].dataType?(_.extend(data,_.pick(alarm,"notifyAfterSeconds","alarmEnabled","enumValues")),data.enumValues=alarm.active):alarm.idDataAttribute&&"float"==$scope.attributes[alarm.idDataAttribute].dataType&&_.extend(data,_.pick(alarm,"idDataAttributeLimit","NotifyAfterSeconds","AlarmEnabled","lowAlarm","lowAlarmHysteresis","highAlarm","highAlarmHysteresis")),ApiService.installations($stateParams.id,"alarms",data,"PUT").then(function(response){alarm.copy=_.omit(alarm,"copy","toggles","collapsed","$$hashKey")})}$scope.delete=function(alarm){ApiService.installations($stateParams.id,"alarms",{idDataAttribute:alarm.idDataAttribute,instance:alarm.instance},"DELETE").then(function(){locale.ready("alarms").then(function(){$scope.alarms=_.filter($scope.alarms,function(row){return row.idDataAttribute!=alarm.idDataAttribute&&row.instance!=alarm.instane}),vrmNotificationsService.add({type:vrmNotificationType.SUCCESS,message:locale.getString("alarms.alarm_deleted")})})})},$scope.resetRateLimiter=function(){ApiService.installations($stateParams.id,"reset-alarm-limiter",{idSite:$stateParams.id},"POST").then(function(){locale.ready("alarms").then(function(){$scope.rateLimited=!1,vrmNotificationsService.add({type:vrmNotificationType.SUCCESS,message:locale.getString("alarms.rate_limiter_reset")})})})},$scope.save=function(){var promises=[];if(!$scope.forms.alarms.$valid)return vrmNotificationsService.add({type:vrmNotificationType.ERROR,message:locale.getString("alarms.contains_error")}),void($scope.forms.alarms.$submitted=!0);for(var i in $scope.forms.alarms.$submitted=!1,$scope.nodataalarm.noDataAlarmActive==$scope.installation.noDataAlarmActive&&$scope.nodataalarm.noDataAlarmActive==$scope.installation.noDataAlarmActive&&$scope.automaticalarm.alarmMonitoring==$scope.installation.alarmMonitoring||($scope.nodataalarm.noDataAlarmActive?null==$scope.nodataalarm.noDataAlarmTimeout&&($scope.nodataalarm.noDataAlarmTimeout=300):$scope.nodataalarm.noDataAlarmTimeout=null,$scope.installation.view_permissions.update_settings&&ApiService.installationSettings($stateParams.id,{noDataAlarmTimeout:$scope.nodataalarm.noDataAlarmTimeout,alarmMonitoring:$scope.automaticalarm.alarmMonitoring},!1)),$scope.alarms){var alarm=$scope.alarms[i];alarm.idDataAttribute&&"enum"==$scope.attributes[alarm.idDataAttribute].dataType&&(alarm.active=[],_.each(alarm.toggles,function(val,key){val||alarm.active.push(parseInt(key))}),null!=alarm.active&&0!=alarm.active.length||delete alarm.active),_.isEqual(_.omit(alarm,"copy","toggles","collapsed","$$hashKey"),alarm.copy)||promises.push(updateAlarm(alarm))}for(var index in $scope.users)$scope.users[index].alarms!=(1==$scope.users[index].receivesAlarmNotifications)&&promises.push(updateReceiveAlarm($scope.users[index]));$q.all(promises).then(function(){locale.ready("core").then(function(){vrmNotificationsService.add({type:vrmNotificationType.SUCCESS,message:locale.getString("core.settings_saved")})})})}})}AlarmsSettingsController.$inject=["$log","$scope","$stateParams","ApiService","$q","InstallationsService","vrmNotificationsService","vrmNotificationType","locale","UserService"],angular.module("vrm.core").controller("AlarmsSettingsController",AlarmsSettingsController)}(),function(){"use strict";function AlarmLogConfig($stateProvider){$stateProvider.state("base.installation.alarmlogs",{url:"/alarmlogs",views:{body:{templateUrl:"states/core/installation/settings/alarm-logs.html",controller:"AlarmLogsController"}}})}AlarmLogConfig.$inject=["$stateProvider"],angular.module("vrm.core").config(AlarmLogConfig)}(),function(){"use strict";function AlarmLogsController($log,$scope,$stateParams,ApiService){$log.info("AlarmLogsController"),$scope.logs=[],ApiService.installations($stateParams.id,"alarm-log").then(function(response){$scope.logs=response.data.alarms?response.data.alarms:[]})}AlarmLogsController.$inject=["$log","$scope","$stateParams","ApiService"],angular.module("vrm.core").controller("AlarmLogsController",AlarmLogsController)}(),function(){"use strict";function AddAlarmsSettingsConfig($stateProvider){$stateProvider.state("base.installation.settings.alarmsadd",{url:"/alarms/add",views:{settings:{templateUrl:"states/core/installation/settings/add-alarm.html",controller:"AddAlarmsSettingsController"}}})}AddAlarmsSettingsConfig.$inject=["$stateProvider"],angular.module("vrm.core").config(AddAlarmsSettingsConfig)}(),function(){"use strict";function AddAlarmsSettingsController($log,$scope,$state,$stateParams,ApiService,vrmNotificationsService,vrmNotificationType,locale){$log.info("AddAlarmsSettingsController"),$scope.step=1,$scope.model={device:null,attribute:null,toggles:{}},$scope.forms={},ApiService.installations($stateParams.id,"alarms").then(function(response){$scope.attributes={},_.each(response.data.attributes,function(dataAttribute){$scope.attributes[dataAttribute.idDataAttribute]=dataAttribute});var arrAttributes=[];_.each(response.data.attributes,function(dataAttribute){("enum"!==dataAttribute.dataType||dataAttribute.enumValues)&&arrAttributes.push(dataAttribute)}),$scope.attributeList=arrAttributes,$scope.devices=response.data.devices,$scope.next=function(form){null==form||form.$valid?(null!=form&&(form.$submitted=!1),1==$scope.step&&$scope.model.attribute&&$scope.model.device.idDeviceType!=$scope.model.attribute.idDeviceType&&($scope.model.attribute=null,$scope.model.toggles={}),$scope.step++):form.$submitted=!0},$scope.previous=function(){$scope.step--},$scope.save=function(form){if(null==form||form.$valid){var data={instance:$scope.model.device.instance,idDataAttribute:$scope.model.attribute.idDataAttribute};if("float"==$scope.model.attribute.dataType)_.extend(data,_.pick($scope.model,"lowAlarm","lowAlarmHysteresis","highAlarm","highAlarmHysteresis")),data.NotifyAfterSeconds=$scope.model.timeout,data.AlarmEnabled=1;else if("enum"==$scope.model.attribute.dataType){for(var n in data.enumValues=[],$scope.model.attribute.enumValues){var value=$scope.model.attribute.enumValues[n].valueEnum;void 0===$scope.model.toggles[$scope.model.attribute.enumValues[n].valueEnum]&&($scope.model.toggles[value]=!1)}_.each($scope.model.toggles,function(val,key){val||data.enumValues.push(parseInt(key))}),data.notifyAfterSeconds=$scope.model.timeout,data.alarmEnabled=1}ApiService.installations($stateParams.id,"alarms",data,"POST").then(function(response){$state.go("base.installation.settings.alarms"),vrmNotificationsService.add({type:vrmNotificationType.SUCCESS,message:locale.getString("alarms.alarm_added")})})}else form.$submitted=!0}})}AddAlarmsSettingsController.$inject=["$log","$scope","$state","$stateParams","ApiService","vrmNotificationsService","vrmNotificationType","locale"],angular.module("vrm.core").controller("AddAlarmsSettingsController",AddAlarmsSettingsController)}(),function(){"use strict";function TwoFactorConfig($stateProvider){$stateProvider.state("base.profile.twofactor",{url:"/twofactor",views:{body:{templateUrl:"states/core/profile/twofactor.html",controller:"ProfileTwoFactorController"}}})}TwoFactorConfig.$inject=["$stateProvider"],angular.module("vrm.core").config(TwoFactorConfig)}(),function(){"use strict";function ProfileTwoFactorController($state,$log,$scope,UserService,ApiService,vrmNotificationsService,vrmNotificationType,locale){$log.info("ProfileTwoFactorController"),$scope.forms={},$scope.twofactorModel={current_password:null,twostepEnabled:!1},$scope.twofactorSettingsModel={countryCode:null,number:null},$scope.twoFactorCheckModel={authyVerificationToken:null},$scope.countries=[{code:1,name:"United States of America (+1)"},{code:1,name:"Canada (+1)"},{code:7,name:"Russia (+7)"},{code:7,name:"Kazakhstan (+7)"},{code:20,name:"Egypt (+20)"},{code:27,name:"South Africa (+27)"},{code:30,name:"Greece (+30)"},{code:31,name:"Netherlands (+31)"},{code:32,name:"Belgium (+32)"},{code:33,name:"France (+33)"},{code:34,name:"Spain (+34)"},{code:36,name:"Hungary (+36)"},{code:39,name:"Italy (+39)"},{code:40,name:"Romania (+40)"},{code:41,name:"Switzerland (+41)"},{code:43,name:"Austria (+43)"},{code:44,name:"United Kingdom (+44)"},{code:44,name:"Guernsey (+44)"},{code:44,name:"Isle of Man (+44)"},{code:44,name:"Jersey (+44)"},{code:45,name:"Denmark (+45)"},{code:46,name:"Sweden (+46)"},{code:47,name:"Norway (+47)"},{code:48,name:"Poland (+48)"},{code:49,name:"Germany (+49)"},{code:51,name:"Peru (+51)"},{code:52,name:"Mexico (+52)"},{code:53,name:"Cuba (+53)"},{code:54,name:"Argentina (+54)"},{code:55,name:"Brazil (+55)"},{code:56,name:"Chile (+56)"},{code:57,name:"Colombia (+57)"},{code:58,name:"Venezuela (+58)"},{code:60,name:"Malaysia (+60)"},{code:61,name:"Australia (+61)"},{code:62,name:"Indonesia (+62)"},{code:63,name:"Philippines (+63)"},{code:64,name:"New Zealand (+64)"},{code:65,name:"Singapore (+65)"},{code:66,name:"Thailand (+66)"},{code:81,name:"Japan (+81)"},{code:82,name:"Korea (+South) (+82)"},{code:84,name:"Vietnam (+84)"},{code:86,name:"China (+86)"},{code:90,name:"Turkey (+90)"},{code:91,name:"India (+91)"},{code:92,name:"Pakistan (+92)"},{code:93,name:"Afghanistan (+93)"},{code:94,name:"Sri Lanka (+94)"},{code:95,name:"Myanmar (+95)"},{code:98,name:"Iran (+98)"},{code:212,name:"Morocco (+212)"},{code:213,name:"Algeria (+213)"},{code:216,name:"Tunisia (+216)"},{code:218,name:"Libya (+218)"},{code:220,name:"Gambia (+220)"},{code:221,name:"Senegal (+221)"},{code:222,name:"Mauritania (+222)"},{code:223,name:"Mali Republic (+223)"},{code:224,name:"Guinea (+224)"},{code:225,name:"Ivory Coast (+225)"},{code:226,name:"Burkina Faso (+226)"},{code:227,name:"Niger (+227)"},{code:228,name:"Togo (+228)"},{code:229,name:"Benin (+229)"},{code:230,name:"Mauritius (+230)"},{code:231,name:"Liberia (+231)"},{code:232,name:"Sierra Leone (+232)"},{code:233,name:"Ghana (+233)"},{code:234,name:"Nigeria (+234)"},{code:235,name:"Chad (+235)"},{code:236,name:"Central African Republic (+236)"},{code:237,name:"Cameroon (+237)"},{code:238,name:"Cape Verde Islands (+238)"},{code:239,name:"Sao Tome and Principe (+239)"},{code:241,name:"Gabon (+241)"},{code:243,name:"Congo, Democratic Republ (+243)"},{code:244,name:"Angola (+244)"},{code:245,name:"Guinea-Bissau (+245)"},{code:248,name:"Seychelles (+248)"},{code:249,name:"Sudan (+249)"},{code:250,name:"Rwanda (+250)"},{code:251,name:"Ethiopia (+251)"},{code:252,name:"Somalia (+252)"},{code:253,name:"Djibouti (+253)"},{code:254,name:"Kenya (+254)"},{code:255,name:"Tanzania (+255)"},{code:256,name:"Uganda (+256)"},{code:257,name:"Burundi (+257)"},{code:258,name:"Mozambique (+258)"},{code:260,name:"Zambia (+260)"},{code:261,name:"Madagascar (+261)"},{code:262,name:"Reunion (+262)"},{code:263,name:"Zimbabwe (+263)"},{code:264,name:"Namibia (+264)"},{code:265,name:"Malawi (+265)"},{code:266,name:"Lesotho (+266)"},{code:267,name:"Botswana (+267)"},{code:268,name:"Swaziland (+268)"},{code:269,name:"Mayotte Island (+269)"},{code:297,name:"Aruba (+297)"},{code:298,name:"Faroe Islands (+298)"},{code:299,name:"Greenland (+299)"},{code:350,name:"Gibraltar (+350)"},{code:351,name:"Portugal (+351)"},{code:352,name:"Luxembourg (+352)"},{code:353,name:"Ireland (+353)"},{code:354,name:"Iceland (+354)"},{code:355,name:"Albania (+355)"},{code:356,name:"Malta (+356)"},{code:357,name:"Cyprus (+357)"},{code:358,name:"Finland (+358)"},{code:359,name:"Bulgaria (+359)"},{code:370,name:"Lithuania (+370)"},{code:371,name:"Latvia (+371)"},{code:372,name:"Estonia (+372)"},{code:373,name:"Moldova (+373)"},{code:374,name:"Armenia (+374)"},{code:375,name:"Belarus (+375)"},{code:376,name:"Andorra (+376)"},{code:377,name:"Monaco (+377)"},{code:378,name:"San Marino (+378)"},{code:380,name:"Ukraine (+380)"},{code:381,name:"Serbia (+381)"},{code:382,name:"Montenegro (+382)"},{code:385,name:"Croatia (+385)"},{code:386,name:"Slovenia (+386)"},{code:387,name:"Bosnia-Herzegovina (+387)"},{code:389,name:"Macedonia (+389)"},{code:420,name:"Czech Republic (+420)"},{code:421,name:"Slovakia (+421)"},{code:423,name:"Liechtenstein (+423)"},{code:500,name:"Falkland Islands (+500)"},{code:501,name:"Belize (+501)"},{code:502,name:"Guatemala (+502)"},{code:503,name:"El Salvador (+503)"},{code:504,name:"Honduras (+504)"},{code:505,name:"Nicaragua (+505)"},{code:506,name:"Costa Rica (+506)"},{code:507,name:"Panama (+507)"},{code:509,name:"Haiti (+509)"},{code:590,name:"Guadeloupe (+590)"},{code:591,name:"Bolivia (+591)"},{code:592,name:"Guyana (+592)"},{code:593,name:"Ecuador (+593)"},{code:594,name:"French Guiana (+594)"},{code:595,name:"Paraguay (+595)"},{code:596,name:"Martinique (+596)"},{code:597,name:"Suriname (+597)"},{code:598,name:"Uruguay (+598)"},{code:599,name:"Netherlands Antilles (+599)"},{code:670,name:"Timor-Leste (+670)"},{code:1671,name:"Guam (+1671)"},{code:673,name:"Brunei (+673)"},{code:674,name:"Nauru (+674)"},{code:675,name:"Papua New Guinea (+675)"},{code:676,name:"Tonga (+676)"},{code:677,name:"Solomon Islands (+677)"},{code:678,name:"Vanuatu (+678)"},{code:679,name:"Fiji Islands (+679)"},{code:682,name:"Cook Islands (+682)"},{code:685,name:"Samoa (+685)"},{code:687,name:"New Caledonia (+687)"},{code:689,name:"French Polynesia (+689)"},{code:850,name:"Korea (+North) (+850)"},{code:852,name:"HongKong (+852)"},{code:853,name:"Macau (+853)"},{code:855,name:"Cambodia (+855)"},{code:856,name:"Laos (+856)"},{code:880,name:"Bangladesh (+880)"},{code:882,name:"International (+882)"},{code:886,name:"Taiwan (+886)"},{code:960,name:"Maldives (+960)"},{code:961,name:"Lebanon (+961)"},{code:962,name:"Jordan (+962)"},{code:963,name:"Syria (+963)"},{code:964,name:"Iraq (+964)"},{code:965,name:"Kuwait (+965)"},{code:966,name:"Saudi Arabia (+966)"},{code:967,name:"Yemen (+967)"},{code:968,name:"Oman (+968)"},{code:970,name:"Palestine (+970)"},{code:971,name:"United Arab Emirates (+971)"},{code:972,name:"Israel (+972)"},{code:973,name:"Bahrain (+973)"},{code:974,name:"Qatar (+974)"},{code:975,name:"Bhutan (+975)"},{code:976,name:"Mongolia (+976)"},{code:977,name:"Nepal (+977)"},{code:992,name:"Tajikistan (+992)"},{code:993,name:"Turkmenistan (+993)"},{code:994,name:"Azerbaijan (+994)"},{code:995,name:"Georgia (+995)"},{code:996,name:"Kyrgyzstan (+996)"},{code:998,name:"Uzbekistan (+998)"},{code:1242,name:"Bahamas (+1242)"},{code:1246,name:"Barbados (+1246)"},{code:1264,name:"Anguilla (+1264)"},{code:1268,name:"Antigua and Barbuda (+1268)"},{code:1284,name:"Virgin Islands, British (+1284)"},{code:1345,name:"Cayman Islands (+1345)"},{code:1441,name:"Bermuda (+1441)"},{code:1473,name:"Grenada (+1473)"},{code:1649,name:"Turks and Caicos Islands (+1649)"},{code:1664,name:"Montserrat (+1664)"},{code:1758,name:"Saint Lucia (+1758)"},{code:1767,name:"Dominica (+1767)"},{code:1784,name:"St. Vincent and The Gren (+1784)"},{code:1787,name:"Puerto Rico (+1787)"},{code:1809,name:"Dominican Republic (+1809)"},{code:1829,name:"Dominican Republic2 (+1829)"},{code:1849,name:"Dominican Republic3 (+1849)"},{code:1868,name:"Trinidad and Tobago (+1868)"},{code:1869,name:"Saint Kitts and Nevis (+1869)"},{code:1876,name:"Jamaica (+1876)"},{code:242,name:"Congo (+242)"}],UserService.getUser().then(function(user){$scope.twofactorModel.twostepEnabled=user.twostepEnabled}),$scope.step=1,$scope.setTwoFactor=function(event){$scope.forms.twofactorForm.$valid&&UserService.setSettings($scope.twofactorModel).then(function(success){return success&&($scope.user.twostepEnabled=$scope.twofactorModel.twostepEnabled,$scope.user.twostepEnabled&&($scope.step=2),$scope.twofactorModel.current_password=null,$scope.forms.twofactorForm.$setPristine(),$scope.forms.twofactorForm.$setUntouched()),success})},$scope.saveTwoFactor=function(){$scope.forms.twofactorSettingsForm.$valid&&$scope.twofactorSettingsModel.countryCode&&UserService.setSettings({authyPhoneNumber:$scope.twofactorSettingsModel.number,authyPhoneLandCode:"+"+$scope.twofactorSettingsModel.countryCode.code}).then(function(success){return success&&($scope.user.twostepEnabled=$scope.twofactorModel.twostepEnabled,$scope.step=3),success})},$scope.checkTwoFactor=function(){$scope.forms.twofactorCheckForm.$valid&&ApiService.users("verifytoken",$scope.twoFactorCheckModel).then(function(response){vrmNotificationsService.add({type:vrmNotificationType.SUCCESS,message:locale.getString("twofactor.two_factor_configured")}),$scope.step=1,_.each($scope.forms,function(form){form.$setPristine(),form.$setUntouched()}),$state.go("base.profile.settings")})}}ProfileTwoFactorController.$inject=["$state","$log","$scope","UserService","ApiService","vrmNotificationsService","vrmNotificationType","locale"],angular.module("vrm.core").controller("ProfileTwoFactorController",ProfileTwoFactorController)}(),function(){"use strict";function SettingsConfig($stateProvider){$stateProvider.state("base.profile.settings",{url:"/settings",views:{body:{templateUrl:"states/core/profile/settings.html",controller:"ProfileSettingsController"}}})}SettingsConfig.$inject=["$stateProvider"],angular.module("vrm.core").config(SettingsConfig)}(),function(){"use strict";function ProfileSettingsController($log,$scope,$state,UserService,locale,localeEvents,$rootScope,VrmModalService,vrmNotificationsService,vrmNotificationType,localStorageService){function setScreenSaver(){$scope.user&&null===$scope.selected.screensaverTimeout&&($scope.selected.screensaverTimeout=_.find($scope.screensaverTimeouts,function(val){return $scope.user.screensaverTimeout?val.id==$scope.user.screensaverTimeout:0==val.id}))}function setScreenSaverTimeouts(){$scope.screensaverTimeouts=[{id:0,name:locale.getString("profilesettings.screensaver_disabled")},{id:6e4,name:locale.getString("profilesettings.screensaver_one_minute")},{id:18e4,name:locale.getString("profilesettings.screensaver_x_minutes",{minutes:3})},{id:3e5,name:locale.getString("profilesettings.screensaver_x_minutes",{minutes:5})},{id:6e5,name:locale.getString("profilesettings.screensaver_x_minutes",{minutes:10})},{id:9e5,name:locale.getString("profilesettings.screensaver_x_minutes",{minutes:15})},{id:18e5,name:locale.getString("profilesettings.screensaver_x_minutes",{minutes:30})}]}$log.info("ProfileSettingsController"),$scope.screensaverTimeouts=[],$scope.selected={screensaverTimeout:null},locale.ready("profilesettings").then(function(){setScreenSaverTimeouts(),$scope.$watch("user",function(){setScreenSaver()})}),$scope.$on(localeEvents.localeChanges,function(){locale.ready("profilesettings").then(function(){setScreenSaverTimeouts(),$scope.selected.screensaverTimeout=null,setScreenSaver()})}),$scope.doSave=function(){$scope.user.screensaverTimeout=$scope.selected.screensaverTimeout?$scope.selected.screensaverTimeout.id:null,$scope.profileForm.$valid&&UserService.save($scope.user).then(function(success){return success&&$state.go("base.installation-overview"),success})},$scope.deleteAccount=function(){$scope.confirmed=!1,UserService.getUser().then(function(user){VrmModalService.openConfirmFieldModal($scope,"delete_account",user.email,function(confirmed){confirmed&&UserService.deleteUserAccount().then(function(){vrmNotificationsService.add({type:vrmNotificationType.SUCCESS,message:locale.getString("profilesettings.delete_success")}),localStorageService.remove("token"),$scope.$emit("logout"),$state.go("login")}).catch(function(){vrmNotificationsService.add({type:vrmNotificationType.ERROR,message:locale.getString("profilesettings.delete_error")})})})})}}ProfileSettingsController.$inject=["$log","$scope","$state","UserService","locale","localeEvents","$rootScope","VrmModalService","vrmNotificationsService","vrmNotificationType","localStorageService"],angular.module("vrm.core").controller("ProfileSettingsController",ProfileSettingsController)}(),function(){"use strict";function DealerConfig($stateProvider){$stateProvider.state("base.profile.dealer",{url:"/dealer",views:{body:{templateUrl:"states/core/profile/dealer.html",controller:"ProfileDealerController"}}})}DealerConfig.$inject=["$stateProvider"],angular.module("vrm.core").config(DealerConfig)}(),function(){"use strict";function ProfileDealerController($log,$scope,UserService){$log.info("ProfileDealerController"),$scope.forms={},$scope.unlink=function(event){$scope.forms.unlinkForm.$valid&&UserService.setDealer(null).then(function(success){return success&&($scope.user.dealer=null),success})},$scope.unlinkMyself=function(event){$scope.forms.unlinkMyselfForm.$valid&&UserService.setDealer(null).then(function(success){return success&&($scope.user.dealer=null,$scope.reloadUser()),success})},$scope.linkModel={dealerCode:null},$scope.link=function(event){$scope.forms.linkForm.$valid&&UserService.setDealer($scope.linkModel.dealerCode).then(function(success){return success&&$scope.reloadUser(),success})}}ProfileDealerController.$inject=["$log","$scope","UserService"],angular.module("vrm.core").controller("ProfileDealerController",ProfileDealerController)}(),function(){"use strict";function SettingsConfig($stateProvider){$stateProvider.state("base.installation.settings",{url:"/settings",views:{body:{templateUrl:"states/core/installation/settings.html",controller:"InstallationSettingsController"}}})}SettingsConfig.$inject=["$stateProvider"],angular.module("vrm.core").config(SettingsConfig)}(),function(){"use strict";function InstallationSettingsController($log){$log.info("InstallationSettingsController")}InstallationSettingsController.$inject=["$log"],angular.module("vrm.core").controller("InstallationSettingsController",InstallationSettingsController)}(),function(){"use strict";function OverviewConfig($stateProvider){$stateProvider.state("base.installation.overview",{url:"/overview",views:{body:{templateUrl:"states/core/installation/overview.html",controller:"OverviewSettingsController"}}})}OverviewConfig.$inject=["$stateProvider"],angular.module("vrm.core").config(OverviewConfig)}(),function(){"use strict";function OverviewSettingsController($log,$scope,$stateParams,InstallationsService,ApiService,VrmModalService,vrmNotificationsService,locale,vrmNotificationType,$state,vrmConfig){$log.info("OverviewSettingsController"),$scope.visibleKeys=["productName","connection","firmwareVersion","productId","loggingInterval","lastConnection","lastPowerUpOrRestart","twoWayCommunication","remoteSupport","froniusDeviceType","updateTo","vncStatus","instance","pL","vmc","remoteOnLan"],$scope.users=[],ApiService.installations($stateParams.id,"users").then(function(response){$scope.users=response.data.users}),ApiService.installations($stateParams.id,"system-overview").then(function(response){$scope.devices=response.data.records.devices,_.each($scope.devices,function(device){device.idle=86400<new Date/1e3-device.lastConnection})}),$scope.messages={},$scope.hasAtLeastOneAdmin=function(users){for(var adminCount=0,i=0;i<users.length;i++)users[i].accessLevel&&adminCount++;return 1<adminCount},$scope.mqttEnabled=vrmConfig.enableMQTT,$scope.unlink=function(){VrmModalService.openConfirmModal($scope,"unlink",function(confirmed){confirmed&&ApiService.installations($stateParams.id,"unlink",null,"POST").then(function(){locale.ready("general").then(function(){vrmNotificationsService.add({type:vrmNotificationType.SUCCESS,message:locale.getString("general.unlinked")}),InstallationsService.reload(),$state.go("base.installation-overview")})})})},$scope.deleteDevice=function(device){VrmModalService.openDeleteModal($scope,"device",device.name,function(confirmed){confirmed&&ApiService.installations($stateParams.id,"delete-device",{idDeviceType:device.idDeviceType,instance:device.instance},"POST").then(function(res){res.data&&res.data.success&&($scope.devices=$scope.devices.filter(function(deviceItem){return deviceItem!==device}),locale.ready("general").then(function(){vrmNotificationsService.add({type:vrmNotificationType.SUCCESS,message:locale.getString("overview.device_deleted")})}))})})}}OverviewSettingsController.$inject=["$log","$scope","$stateParams","InstallationsService","ApiService","VrmModalService","vrmNotificationsService","locale","vrmNotificationType","$state","vrmConfig"],angular.module("vrm.core").controller("OverviewSettingsController",OverviewSettingsController)}(),function(){"use strict";function DiagnosticsConfig($stateProvider){$stateProvider.state("base.installation.diagnostics",{url:"/diagnostics",views:{body:{templateUrl:"states/core/installation/diagnostics.html",controller:"DiagnosticsSettingsController"}}})}DiagnosticsConfig.$inject=["$stateProvider"],angular.module("vrm.core").config(DiagnosticsConfig)}(),function(){"use strict";function DiagnosticsSettingsController($interval,MQTTService,$log,$scope,$stateParams,ApiService,$q,InstallationsService,$filter){$log.info("DiagnosticsSettingsController"),$scope.loading=!0,$scope.diagnostics=[];var mqttDataChanged=!($scope.site={}),evalInterval=$interval(function(){mqttDataChanged&&($scope.$evalAsync(),mqttDataChanged=!1)},500,0,!1);var mqttEnabled=!1;$q.all([ApiService.diagnostics($stateParams.id,{count:500}),InstallationsService.getInstallation($stateParams.id)]).then(function(result){$scope.site=result[1];var response=result[0];$scope.loading=!1,$scope.diagnostics=response.data.records,_.each($scope.diagnostics,function(record){record.dbusPath&&(record.firstMessageReceived=!1,record.mqttFetcher=_.bind(function(message){var value=message.payload.value,isEnum=!1;void 0!==this.dataAttributeEnumValues&&_.each(this.dataAttributeEnumValues,function(enumVal){enumVal.valueEnum==value&&(value=enumVal.nameEnum,isEnum=!0)}),this.firstMessageReceived?(this.timestamp=Math.floor(Date.now()/1e3),mqttEnabled=!0):this.firstMessageReceived=!0,mqttEnabled&&(this.formattedValue=isEnum?value:sprintf(this.formatWithUnit.replace("F","f"),value)),mqttDataChanged=!0},record))})}),$scope.$on("$destroy",function(){_.each($scope.diagnostics,function(record){void 0!==record.mqttFetcher&&record.mqttFetcher&&(record.mqttFetcher=null,MQTTService.unsubScribeFromPath({identifier:$scope.site.identifier,dbusServiceType:record.dbusServiceType,dbusPath:record.dbusPath,instance:record.instance,callbackIdentifier:"diagnostics"}))}),$interval.cancel(evalInterval)})}DiagnosticsSettingsController.$inject=["$interval","MQTTService","$log","$scope","$stateParams","ApiService","$q","InstallationsService","$filter"],angular.module("vrm.core").controller("DiagnosticsSettingsController",DiagnosticsSettingsController)}(),function(){"use strict";function DashboardConfig($stateProvider){$stateProvider.state("base.installation.dashboard",{url:"/dashboard",views:{body:{templateUrl:"states/core/installation/dashboard.html",controller:"InstallationDashboardController"}}})}DashboardConfig.$inject=["$stateProvider"],angular.module("vrm.core").config(DashboardConfig)}(),function(){"use strict";function InstallationDashboardController($timeout,$state,$log,$scope,$stateParams,$q,GraphService,uiGmapGoogleMapApi,VrmMapService,InstallationsService,VrmModalService,ApiService,locale){$log.info("InstallationDashboardController");var shape=null,map=null,mapInitialized=!1;$scope.showFaqAboutCharts=!1,$scope.weatherIcons={sunny:"sg-vrm-icon_64_clear-sky-16px","clear-night":"sg-vrm-icon_72_clear-sky-night-16px","partially-cloudy":"sg-vrm-icon_65_few-clouds-16px","partially-cloudy-night":"sg-vrm-icon_73_few-clouds-night-16px",cloudy:"sg-vrm-icon_66_scattered-clouds-16px","cloudy-with-rain":"sg-vrm-icon_68_shower-rain-16px","partially-cloudy-with-rain":"sg-vrm-icon_67_rain-16px","thunderstorm-with-rain":"sg-vrm-icon_69_thunderstorm-16px",snow:"sg-vrm-icon_70_snow-16px",fog:"sg-vrm-icon_71_mist-16px"},$scope.weather={},$scope.graphs={choices:[{id:"liveFeed",name:"live_feed",dataURL:"stats",type:"live_feed",available:"yes"},{id:"consumption",name:"consumption",dataURL:"stats",type:"consumption",available:"yes"},{id:"solar",name:"solar",dataURL:"stats",type:"solar_yield",available:"yes"}],current:null},$scope.isRealtime=!1,$q.all([InstallationsService.getInstallation($stateParams.id),uiGmapGoogleMapApi,GraphService.ready()]).then(function(result){var installation=result[0];$scope.$watch(function(){return installation&&installation.identifier&&InstallationsService.isSiteRealtime(installation.identifier)},function(){$scope.isRealtime=InstallationsService.isSiteRealtime(installation.identifier)},!0),ApiService.installations($stateParams.id,"weather").then(function(response){$scope.weather=response.data.records,0!=$scope.weather.temperature&&($scope.weather.temperature=sprintf("%.0f Â°C",$scope.weather.temperature))}),result[1].visualRefresh=!0,GraphService.highcharts.setOptions({global:{timezoneOffset:-installation.timezone_offset/60}}),$scope.map=!1,$scope.$watch("toggles.showMapOptions",function(){!0!==mapInitialized&&$scope.toggles.showMapOptions&&($scope.map={bounds:{},control:{},center:{latitude:installation.data.lt?installation.data.lt.rawValue:null,longitude:installation.data.lg?installation.data.lg.rawValue:null},coords:{latitude:installation.data.lt?installation.data.lt.rawValue:null,longitude:installation.data.lg?installation.data.lg.rawValue:null},zoom:7,markers:[],options:{styles:[{stylers:[{visibility:"simplified"}]}],mapTypeControl:!1,panControl:!1,zoomControl:!0,scaleControl:!1,rotateControl:!1,streetViewControl:!1,overviewMapControl:!1,scrollwheel:!1},markerOptions:{icon:VrmMapService.buildMarkerIcon(VrmMapService.getMarkerColor(installation))}},mapInitialized=!0)}),$scope.$watch("map.control.getGMap",function(){!1!==mapInitialized&&$scope.map.control.getGMap&&(map=$scope.map.control.getGMap(),shape&&shape.setMap($scope.map.control.getGMap()))}),$scope.$watch("installation",function(installation){if(null!=shape&&shape.setMap(null),installation){try{shape=VrmMapService.getShape(JSON.parse(installation.geofence),!1)}catch(e){shape=null}shape&&map&&shape.setMap(map)}}),$scope.$watchGroup(["installation.data.lt.rawValue","installation.data.lg.rawValue"],function(){!1!==mapInitialized&&($scope.map.center.latitude==$scope.map.coords.latitude&&$scope.map.center.longitude==$scope.map.coords.longitude&&($scope.map.center.latitude=installation.data.lt?installation.data.lt.rawValue:null,$scope.map.center.longitude=installation.data.lg?installation.data.lg.rawValue:null),$scope.map.coords.latitude=installation.data.lt?installation.data.lt.rawValue:null,$scope.map.coords.longitude=installation.data.lg?installation.data.lg.rawValue:null)})}),$scope.toggles={showMapOptions:!1},$scope.hasKwhData=!1,$scope.hasSolarKwhData=!1,$scope.hasSoc=!1,$scope.hasPdcData=!1,$scope.hasiOI1Data=!1,$scope.hasBvData=!1,$scope.getFromToGrid=function(){if(!$scope.installation||!$scope.installation.data||!$scope.installation.data.from_to_grid)return 0;var val=$scope.installation.data.from_to_grid.rawValue/$scope.installation.pvMax;return 1<val?1:val<-1?-1:val},$scope.datePicker={range:{},control:{}},$scope.$watch("installation.geofenceEnabled",function(enabled,oldValue){void 0!==oldValue&&enabled!=oldValue&&ApiService.installationSettings($stateParams.id,{geofenceEnabled:enabled})}),$q.all([locale.ready("dashboard"),GraphService.ready()]).then(function(){$scope.graphs.current=$scope.graphs.choices[0],$scope.charts={liveFeed:GraphService.getConfig("liveFeed"),consumption:GraphService.getConfig("consumption"),solar:GraphService.getConfig("solar"),economic:GraphService.getConfig("economic"),environmental:GraphService.getConfig("environmental"),consumptionPies:{today:_.clone(GraphService.getConfig("consumptionPie")),week:_.clone(GraphService.getConfig("consumptionPie")),month:_.clone(GraphService.getConfig("consumptionPie")),year:_.clone(GraphService.getConfig("consumptionPie"))},solarPies:{today:_.clone(GraphService.getConfig("solarPie")),week:_.clone(GraphService.getConfig("solarPie")),month:_.clone(GraphService.getConfig("solarPie")),year:_.clone(GraphService.getConfig("solarPie"))}};var pieTitles={today:locale.getString("dashboard.last_day"),week:locale.getString("dashboard.last_week"),month:locale.getString("dashboard.last_month"),year:locale.getString("dashboard.last_year")};for(var period in pieTitles)$scope.charts.consumptionPies[period].options.title.text=pieTitles[period],$scope.charts.solarPies[period].options.title.text=pieTitles[period];function emptyOnNull(data){return data=data||[],data=_.sortBy(data,function(data){return data[0]})}function loadData(){if($scope.installation&&$scope.datePicker.range.startDate){var roundedStartDate=$scope.datePicker.range.startDate,roundedEndDate=$scope.datePicker.range.endDate,remainder=$scope.datePicker.range.endDate%3600;0!==remainder&&(roundedEndDate=$scope.datePicker.range.endDate-remainder+3600,roundedStartDate=$scope.datePicker.range.startDate-remainder+3600);var interval=$scope.datePicker.range.interval,dataURL=$scope.graphs.current.dataURL,parameters={type:$scope.graphs.current.type};GraphService.getGraphData($stateParams.id,roundedStartDate,roundedEndDate,interval,dataURL,parameters).then(function(data){var dataFound=!1,maxLines=0;"liveFeed"==$scope.graphs.current.id?($scope.charts.liveFeed.series[0].data=emptyOnNull(data.records.total_consumption),$scope.charts.liveFeed.series[1].data=emptyOnNull(data.records.total_solar_yield),$scope.hasKwhData=0<$scope.charts.liveFeed.series[0].data.length||0<$scope.charts.liveFeed.series[1].data.length,$scope.hasSolarKwhData=0<$scope.charts.liveFeed.series[1].data.length,$scope.charts.liveFeed.series[2].data=emptyOnNull(data.records.bs),$scope.charts.liveFeed.series[3].data=function(data){var result=[];return _.each(data,function(record){result.push([record[0],record[2],record[3]])}),result}(emptyOnNull(data.records.bs)),$scope.hasSoc=0<$scope.charts.liveFeed.series[2].data.length,$scope.charts.liveFeed.series[4].data=emptyOnNull(data.records.Pdc),$scope.hasPdcData=0<$scope.charts.liveFeed.series[4].data.length,$scope.charts.liveFeed.series[5].data=emptyOnNull(data.records.iOI1),$scope.hasiOI1Data=0<$scope.charts.liveFeed.series[5].data.length,$scope.charts.liveFeed.series[6].data=emptyOnNull(data.records.bv),$scope.hasBvData=0<$scope.charts.liveFeed.series[6].data.length,$scope.hasKwhData?($scope.graphs.choices[1].available="yes",$scope.graphs.choices[2].available="yes"):($scope.graphs.choices[1].available="no",$scope.graphs.choices[2].available="no"),maxLines=6):"consumption"==$scope.graphs.current.id?($scope.charts.consumption.series[0].data=emptyOnNull(data.records.Gc),$scope.charts.consumption.series[1].data=emptyOnNull(data.records.gc),$scope.charts.consumption.series[2].data=emptyOnNull(data.records.Bc),$scope.charts.consumption.series[3].data=emptyOnNull(data.records.Pc),maxLines=3):"solar"==$scope.graphs.current.id&&($scope.charts.solar.series[0].data=emptyOnNull(data.records.Pg),$scope.charts.solar.series[1].data=emptyOnNull(data.records.Pb),$scope.charts.solar.series[2].data=emptyOnNull(data.records.Pc),maxLines=2);for(var i=0;i<=maxLines;i++)dataFound=dataFound||0<$scope.charts[$scope.graphs.current.id].series[i].data.length;if($scope.showFaqAboutCharts=!dataFound&&$scope.datePicker.range.startDate<$scope.installation.last_timestamp,$scope.charts[$scope.graphs.current.id].xAxis.tickInterval=null,dataFound)if($scope.charts[$scope.graphs.current.id].xAxis.min=dataFound?1e3*roundedStartDate:null,dataFound&&0===$scope.datePicker.range.precision){var date=new Date(1e3*$scope.datePicker.range.endDate);$scope.charts[$scope.graphs.current.id].xAxis.max=new Date(date.getFullYear(),date.getMonth(),1).getTime()}else $scope.charts[$scope.graphs.current.id].xAxis.tickInterval=1e3*(1===$scope.datePicker.range.precision?3600:$scope.datePicker.range.precision),$scope.charts[$scope.graphs.current.id].xAxis.max=dataFound?1e3*(roundedEndDate-(1===$scope.datePicker.range.precision?3600:$scope.datePicker.range.precision)):null}).catch(function(){"liveFeed"===$scope.graphs.current.id?($scope.charts.liveFeed.series[0].data=[],$scope.charts.liveFeed.series[1].data=[],$scope.charts.liveFeed.series[2].data=[],$scope.charts.liveFeed.series[3].data=[],$scope.charts.liveFeed.series[4].data=[],$scope.charts.liveFeed.series[5].data=[],$scope.charts.liveFeed.series[6].data=[]):"consumption"===$scope.graphs.current.id?($scope.charts.consumption.series[0].data=[],$scope.charts.consumption.series[1].data=[],$scope.charts.consumption.series[2].data=[],$scope.charts.consumption.series[3].data=[]):"solar"===$scope.graphs.current.id&&($scope.charts.solar.series[0].data=[],$scope.charts.solar.series[1].data=[],$scope.charts.solar.series[2].data=[])}).then(function(){"liveFeed"===$scope.graphs.current.id?($scope.hasKwhData?($scope.charts.liveFeed.yAxis[0].visible=!0,$scope.charts.liveFeed.series[0].visible=!0,$scope.charts.liveFeed.series[1].visible=!0):$scope.hasPdcData?($scope.charts.liveFeed.yAxis[2].visible=!0,$scope.charts.liveFeed.series[4].visible=!0):$scope.hasiOI1Data?($scope.charts.liveFeed.yAxis[4].visible=!0,$scope.charts.liveFeed.series[5].visible=!0):$scope.hasBvData&&($scope.charts.liveFeed.yAxis[3].visible=!0,$scope.charts.liveFeed.series[6].visible=!0),$scope.hasSoc?($scope.charts.liveFeed.yAxis[1].visible=!0,$scope.charts.liveFeed.series[2].visible=!0,$scope.charts.liveFeed.series[3].visible=!0):$scope.hasBvData&&($scope.hasKwhData||$scope.hasPdcData||$scope.hasiOI1Data)&&($scope.charts.liveFeed.yAxis[3].visible=!0,$scope.charts.liveFeed.yAxis[3].opposite=!0,$scope.charts.liveFeed.series[6].visible=!0)):"consumption"===$scope.graphs.current.id?($scope.charts.consumption.series[0].visible=!0,$scope.charts.consumption.series[1].visible=!0,$scope.charts.consumption.series[2].visible=!0,$scope.charts.consumption.series[3].visible=!0):"solar"===$scope.graphs.current.id&&($scope.charts.solar.series[0].visible=!0,$scope.charts.solar.series[1].visible=!0,$scope.charts.solar.series[2].visible=!0),$scope.charts[$scope.graphs.current.id].loading=!1})}}$scope.$watch("installation",loadData);function reloadData(){$scope.graphs.current&&($scope.charts[$scope.graphs.current.id].loading=!0,function resetZoomState(targetChart){if(targetChart&&targetChart.getHighcharts){var chart=targetChart.getHighcharts();chart.zoomOut()}else targetChart&&_.defer(_.once(function(){resetZoomState(targetChart)}))}($scope.charts[$scope.graphs.current.id])),loadData()}$scope.$watchGroup(["datePicker.range.startDate"," datePicker.range.endDate","graphs.current.id"],reloadData),$scope.$watch("economic",reloadData,!0);var consumptionLoaded=!1,solarLoaded=!1;$scope.$watch("graphs.current.id",function(chart){"consumption"!=chart||consumptionLoaded?"solar"!=chart||solarLoaded||GraphService.getOverallStatsData($stateParams.id,"solar_yield").then(function(data){for(var period in $scope.charts.solarPies)$scope.charts.solarPies[period].series[0].data=[data.records[period].percentages.Pg,data.records[period].percentages.Pb,data.records[period].percentages.Pc];solarLoaded=!0}).catch(function(){for(var period in $scope.charts.solarPies)$scope.charts.solarPies[period].series[0].data=[]}).then(function(){for(var period in $scope.charts.solarPies)$scope.charts.solarPies[period].series[0].visible=!0,$scope.charts.solarPies[period].loading=!1}):GraphService.getOverallStatsData($stateParams.id,"consumption").then(function(data){for(var period in $scope.charts.consumptionPies)$scope.charts.consumptionPies[period].series[0].data=[data.records[period].percentages.Gc,data.records[period].percentages.gc,data.records[period].percentages.Bc,data.records[period].percentages.Pc];consumptionLoaded=!0}).catch(function(){for(var period in $scope.charts.consumptionPies)$scope.charts.consumptionPies[period].series[0].data=[]}).then(function(){for(var period in $scope.charts.consumptionPies)$scope.charts.consumptionPies[period].series[0].visible=!0,$scope.charts.consumptionPies[period].loading=!1})})})}InstallationDashboardController.$inject=["$timeout","$state","$log","$scope","$stateParams","$q","GraphService","uiGmapGoogleMapApi","VrmMapService","InstallationsService","VrmModalService","ApiService","locale"],angular.module("vrm.core").controller("InstallationDashboardController",InstallationDashboardController)}(),function(){"use strict";function AdvancedConfig($stateProvider){$stateProvider.state("base.installation.advanced",{url:"/advanced",views:{body:{templateUrl:"states/core/installation/advanced.html",controller:"InstallationAdvancedController"}}})}AdvancedConfig.$inject=["$stateProvider"],angular.module("vrm.core").config(AdvancedConfig)}(),function(){"use strict";angular.module("vrm.core").filter("advancedWidgetFilter",function(){return function(widgets,widgetSearch){return _.filter(widgets,function(widget){return widget.active&&(!widgetSearch.term||0===widgetSearch.term.length||-1<widget.name.toLowerCase().indexOf(widgetSearch.term.toLowerCase()))})}})}(),function(){"use strict";function InstallationAdvancedController(VrmModalService,$log,$scope,$stateParams,$q,$timeout,InstallationsService,ApiService,GraphService,AdvancedGraphWidgetConfigs,AdvancedSummaryGraphWidgetConfigsGraphs,vrmNotificationsService,vrmNotificationType,locale,widgetTypeMapping,$filter){$log.info("InstallationAdvancedController"),$q.all([InstallationsService.getInstallation($stateParams.id),GraphService.ready()]).then(function(result){var installation=result[0];GraphService.timezoneString=installation.timezone,GraphService.highcharts.setOptions({global:{timezoneOffset:-installation.timezone_offset/60}}),GraphService.registerSyncEventListeners()}),$scope.attributeCodes=[],$scope.zoomstate={min:null,max:null},$scope.panels={search:!1,filter:!1},$scope.widgets=[],ApiService.installations($stateParams.id,"active-widgets").then(function(response){response.data.widgets&&response.data.widgets instanceof Array&&($scope.widgets=response.data.widgets),$scope.panels.filter=!0,_.each($scope.widgets,function(widget){void 0!==widgetTypeMapping[widget.code]&&(widget.code=widgetTypeMapping[widget.code]),widget.active&&($scope.panels.filter=!1)});var initial=!0;$scope.$watch("widgets",function(){if(initial)initial=!1;else{var widgets=[];for(var index in $scope.widgets)$scope.widgets[index].active&&widgets.push({idWidget:$scope.widgets[index].idWidget,instance:$scope.widgets[index].instance});ApiService.installations($stateParams.id,"settings",{widgets:widgets},"POST"),GraphService.registerSyncEventListeners()}var attributeCodes={};for(var index in $scope.widgets)if($scope.widgets[index].active){for(var serie in AdvancedGraphWidgetConfigs[$scope.widgets[index].code])for(var code in AdvancedGraphWidgetConfigs[$scope.widgets[index].code][serie].fields)$scope.widgets[index].instance in attributeCodes||(attributeCodes[$scope.widgets[index].instance]=[]),attributeCodes[$scope.widgets[index].instance].push(code);for(var serie in AdvancedSummaryGraphWidgetConfigsGraphs[$scope.widgets[index].code])for(var code in AdvancedSummaryGraphWidgetConfigsGraphs[$scope.widgets[index].code][serie].fields)$scope.widgets[index].instance in attributeCodes||(attributeCodes[$scope.widgets[index].instance]=[]),attributeCodes[$scope.widgets[index].instance].push(code)}$scope.attributeCodes=attributeCodes},!0)}),$scope.widgetSearch={term:null},$scope.datePicker={range:{},control:{}},$scope.graphData={},$scope.loading=!1;var reload=null;$scope.$on("$destroy",function(){$timeout.cancel(reload),$timeout.cancel(dataLoadTimeout),$scope.graphData={},$scope.promises=[]});var loadingUrls=[];function loadData(instance,url){if(!(-1<loadingUrls.indexOf(url)))return loadingUrls.push(url),ApiService.installations($scope.installation.id,url).then(function(response){$scope.graphData[instance]=response.data.records,_removeLoadingUrl(url)},function(){_removeLoadingUrl(url)})}function _removeLoadingUrl(url){var index=loadingUrls.indexOf(url);-1<index&&loadingUrls.splice(index,1)}var loaded=!($scope.promises=[]),lastLoadedHash={};$scope.$watchGroup(["installation","datePicker.range.startDate","datePicker.range.endDate","attributeCodes","zoomstate.min","zoomstate.max"],function(e){if($scope.attributeCodes&&$scope.installation&&$scope.datePicker.range.startDate){if(void 0!==document.hidden&&document.hidden&&loaded)return;var currentHash={start:$scope.zoomstate.min?Math.floor($scope.zoomstate.min/1e3):$scope.datePicker.range.startDate,end:$scope.zoomstate.max?Math.floor($scope.zoomstate.max/1e3):$scope.datePicker.range.endDate,attributes:$scope.attributeCodes};angular.equals(lastLoadedHash,currentHash)?$log.info("Skipping reload, range and attributes did not change"):($timeout.cancel(reload),start=(lastLoadedHash=currentHash).start,end=currentHash.end,$timeout.cancel(dataLoadTimeout),dataLoadTimeout=$timeout(function(){for(var instance in $scope.loading=!0,$scope.$evalAsync(),$scope.promises=[],$scope.attributeCodes){var url="widgets/Graph?start="+start+"&end="+end+"&instance="+instance;for(var i in $scope.attributeCodes[instance])"TOTAL"!=$scope.attributeCodes[instance][i]&&(url+="&attributeCodes[]="+$scope.attributeCodes[instance][i]);$scope.promises.push(loadData(instance,url))}$q.all($scope.promises).then(function(){loaded=!0,$scope.loading=!1,$scope.datePicker.range.isToday&&$scope.datePicker.range.endDate-$scope.datePicker.range.startDate<=86400&&($log.info("Scheduling reload... "),reload=$timeout(function(){$scope.zoomstate.min||$scope.zoomstate.max?$log.info("Skipping reload, zoomed in"):$scope.datePicker.control.updateDate()},6e4))})},300))}var start,end}),$scope.$watchGroup(["datePicker.range.startDate","datePicker.range.endDate"],function(e){$log.info("Resetting zoomstate"),$scope.zoomstate={min:null,max:null}});var dataLoadTimeout=null;var downloadPending=!1;$scope.download=function(format,datatype,debug){downloadPending?locale.ready("advanced").then(function(){vrmNotificationsService.add({type:vrmNotificationType.ERROR,message:locale.getString("advanced.download_pending")})}):(VrmModalService.openDownloadModal($scope,"advanced.preparing_download"),downloadPending=!0,ApiService.installationDownload($scope.installation.id,"data-download",{format:format,datatype:datatype,debug:debug,start:$scope.datePicker.range.startDate,end:$scope.datePicker.range.endDate},!0).then(function(response){var siteDescription=$scope.installation&&$scope.installation.name?$scope.installation.name.toString().replace(/[^a-zA-Z0-9]+/g,""):"",start=$filter("date")(1e3*$scope.datePicker.range.startDate,"yyyyMMdd-HHmm",$scope.installation.timezone),end=$filter("date")(1e3*$scope.datePicker.range.endDate,"yyyyMMdd-HHmm",$scope.installation.timezone);saveAs(response.data,siteDescription+"_"+start+"_to_"+end+(datatype?"_"+datatype:"")+"."+format),downloadPending=!1,$.magnificPopup.close()},function(){locale.ready("advanced").then(function(){vrmNotificationsService.add({type:vrmNotificationType.ERROR,message:locale.getString("advanced.download_timeout"),timeout:3e4})}),downloadPending=!1,$.magnificPopup.close()}))}}InstallationAdvancedController.$inject=["VrmModalService","$log","$scope","$stateParams","$q","$timeout","InstallationsService","ApiService","GraphService","AdvancedGraphWidgetConfigs","AdvancedSummaryGraphWidgetConfigsGraphs","vrmNotificationsService","vrmNotificationType","locale","widgetTypeMapping","$filter"],angular.module("vrm.core").controller("InstallationAdvancedController",InstallationAdvancedController)}(),function(){"use strict";angular.module("vrm.core").config(["$stateProvider",function($stateProvider){$stateProvider.state("base.admin.users-add",{url:"/users/add",views:{body:{templateUrl:"states/core/admin/users/form.html",controller:"AdminUsersFormController"}}}).state("base.admin.users-update",{url:"/users/{id:int}/update",views:{body:{templateUrl:"states/core/admin/users/form.html",controller:"AdminUsersFormController"}}}).state("base.admin.users-detail",{url:"/users/{id:int}/detail",views:{body:{templateUrl:"states/core/admin/users/detail.html",controller:"AdminUsersDetailController"}}}).state("base.admin.users",{url:"/users",views:{body:{templateUrl:"states/core/admin/users.html",controller:"AdminUsersController"}}})}])}(),function(){"use strict";function AdminUsersDetailController($log,$scope,ApiService,$stateParams){$log.info("AdminUsersDetailController"),$scope.user=null,$scope.installations=[],$scope.loading=!0,ApiService.call("/users/"+$stateParams.id+"/installations?extended=1").then(function(response){var rawInstallations=response.data.records,ids=[];_.each(response.data.records,function(installation){ids.push(installation.idSite)}),ApiService.admin("installations",{"filter[idSite][]":ids}).then(function(response){$scope.installations=rawInstallations,$scope.loading=!1,_.each($scope.installations,function(installation,key){$scope.installations[key].admin_data=_.find(response.data.records,function(record){return record.id==installation.idSite})})})}),ApiService.admin("users",{"filter[idUser]":$stateParams.id}).then(function(response){response.data.num_records<1&&$state.go(base.admin.users),$scope.user=response.data.records[0]})}function AdminUsersController($timeout,$log,$state,UserService,$scope,AdminTableService,GraphService,ApiService,locale,vrmNotificationsService,vrmNotificationType,VrmModalService,localStorageService,$location,$window){$log.info("AdminUserController"),$scope.searchModel={value:""};$scope.table=new AdminTableService(function(params){return $scope.searchModel.value&&""!=$scope.searchModel.value&&(params.q=$scope.searchModel.value),ApiService.admin("users",params)}),$scope.searchTimeout=null,$scope.$watch("searchModel.value",function(val){val&&""!=val&&($timeout.cancel($scope.searchTimeout),$scope.searchTimeout=$timeout(function(){$scope.table.params.reload()},500))}),GraphService.ready().then(function(){$scope.chart={size:{height:200},options:{},xAxis:{categories:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]},yAxis:{title:{text:locale.getString("admin.chart_new_users_title")}},chart:{zoomType:"x",marginTop:45},tooltip:{shared:!0,animation:!1,headerFormat:""},title:{text:""},subtitle:{text:""},legend:{enabled:!0},credits:{enabled:!1},series:[],loading:!0},ApiService.call("/admin/user-stats/").then(function(response){$scope.chart.series=response.data.series,$scope.chart.loading=!1})}),$scope.remove=function(id){VrmModalService.openConfirmModal($scope,"delete",function(confirmed){confirmed&&id&&ApiService.admin("users/"+id,{},"DELETE").then(function(){locale.ready("admin").then(function(){vrmNotificationsService.add({type:vrmNotificationType.SUCCESS,message:locale.getString("admin.user_deleted")}),$scope.table.params.reload()})})})},$scope.impersonate=function(id){ApiService.call("/auth/generateImpersonationToken",{idUser:id}).then(function(response){response.data.success&&response.data.token&&(localStorageService.set("adminToken",localStorageService.get("token")),$state.go("login",{token:response.data.token}))})}}function AdminUsersFormController(vrmUserAccessLevel,$log,$rootScope,$scope,$stateParams,ApiService,UserService,$state,vrmNotificationsService,locale,vrmNotificationType,$q){$log.info("AdminUsersFormController"),$scope.errors={};$scope.languages=[{id:null,name:"Select language"},{id:"en",name:"English"},{id:"da",name:"Dansk"},{id:"de",name:"Deutsch"},{id:"es",name:"EspaÃ±ol"},{id:"fr",name:"FranÃ§ais"},{id:"it",name:"Italiano"},{id:"pt",name:"PortuguÃªs"},{id:"sv",name:"Svenska"},{id:"ru",name:"Russian"}],$scope.accessLevels=[{id:null,name:"Select an access level"},{id:vrmUserAccessLevel.DEMO,name:"Demo"},{id:vrmUserAccessLevel.USER,name:"User"},{id:vrmUserAccessLevel.ADMIN,name:"Admin"},{id:vrmUserAccessLevel.RESTRICTED_ADMIN,name:"Restricted admin"},{id:vrmUserAccessLevel.DEALER,name:"Dealer"},{id:vrmUserAccessLevel.AUTOMATION,name:"Automation"}],UserService.getUser().then(function(user){if($scope.currentUser=user,$scope.currentUser.accessLevel==vrmUserAccessLevel.RESTRICTED_ADMIN)for(var i=0;i<$scope.accessLevels.length;i++)if($scope.accessLevels[i].id==vrmUserAccessLevel.ADMIN){$scope.accessLevels.splice(i,1);break}}),$scope.whitelabels=[{id:null,name:"Use VRM dealer whitelabel"}],$scope.dealers=[{id:null,name:"No VRM dealer"}],$scope.user={selected_whitelabel:$scope.whitelabels[0],selected_dealer:$scope.dealers[0],selected_accessLevel:$scope.accessLevels[0],selected_language:$scope.languages[0]},$scope.editing=!!$stateParams.id,$q.all([ApiService.call("/admin/whitelabels",{},"GET"),ApiService.call("/admin/dealers",{},"GET")]).then(function(responses){var whitelabels=responses[0],dealers=responses[1];$scope.whitelabels=$scope.whitelabels.concat(whitelabels.data.records),$scope.dealers=$scope.dealers.concat(dealers.data.records),$stateParams.id&&ApiService.admin("users",{"filter[idUser]":$stateParams.id}).then(function(response){var user,res;response.data.num_records<1&&$state.go("base.admin.users"),$scope.user=(user=response.data.records[0],(res=_.clone(user)).name=user.name,res.allowLogin=1==user.allowLogin,res.selected_whitelabel=_.find($scope.whitelabels,function(record){return record.id==user.idWhiteLabel}),res.selected_dealer=_.find($scope.dealers,function(record){return record.id==user.idDealer}),res.selected_accessLevel=_.find($scope.accessLevels,function(record){return record.id==user.accessLevel}),res.selected_language=_.find($scope.languages,function(record){return record.id==user.language}),res)})}),$scope.doSave=function(){var data=_.clone($scope.user);data.idWhiteLabel=data.selected_whitelabel.id,data.idDealer=data.selected_dealer.id,null!=data.selected_accessLevel&&(data.accessLevel=data.selected_accessLevel.id),data.language=data.selected_language.id,data.allowLogin=data.allowLogin?1:0,delete data.selected_whitelabel,delete data.selected_dealer,delete data.selected_accessLevel,delete data.selected_language,ApiService.admin("users/"+($scope.editing?$stateParams.id:""),data,$scope.editing?"PUT":"POST",!0).then(function(response){response.data.success?locale.ready("admin").then(function(){vrmNotificationsService.add({type:vrmNotificationType.SUCCESS,message:locale.getString("admin.user_saved")}),$state.go("base.admin.users")}):($scope.errors=response.data.errors,vrmNotificationsService.add({type:vrmNotificationType.ERROR,message:response.data.errors}))})}}AdminUsersController.$inject=["$timeout","$log","$state","UserService","$scope","AdminTableService","GraphService","ApiService","locale","vrmNotificationsService","vrmNotificationType","VrmModalService","localStorageService","$location","$window"],AdminUsersFormController.$inject=["vrmUserAccessLevel","$log","$rootScope","$scope","$stateParams","ApiService","UserService","$state","vrmNotificationsService","locale","vrmNotificationType","$q"],AdminUsersDetailController.$inject=["$log","$scope","ApiService","$stateParams"],angular.module("vrm.core").controller("AdminUsersController",AdminUsersController).controller("AdminUsersFormController",AdminUsersFormController).controller("AdminUsersDetailController",AdminUsersDetailController)}(),function(){"use strict";angular.module("vrm.core").config(["$stateProvider",function($stateProvider){$stateProvider.state("base.admin.diagnostics",{url:"/:id/diagnostics",views:{body:{templateUrl:"states/core/admin/diagnostics.html",controller:"AdminDiagnosticsController"}}})}])}(),function(){"use strict";function AdminDiagnosticsController($log,$scope,AdminTableService,$stateParams,ApiService,InstallationsService,$filter){$log.info("AdminDiagnosticsController"),$scope.table=new AdminTableService(function(params){return ApiService.diagnostics($stateParams.id,params)}),$scope.table.params.count(500),$scope.id=$stateParams.id,$scope.site={},InstallationsService.getInstallation($stateParams.id).then(function(response){$scope.site=response})}AdminDiagnosticsController.$inject=["$log","$scope","AdminTableService","$stateParams","ApiService","InstallationsService","$filter"],angular.module("vrm.core").controller("AdminDiagnosticsController",AdminDiagnosticsController)}(),function(){"use strict";angular.module("vrm.core").config(["$stateProvider",function($stateProvider){$stateProvider.state("base.admin.installations",{url:"/installations",views:{body:{templateUrl:"states/core/admin/installations.html",controller:"AdminInstallationsController"}}})}])}(),function(){"use strict";function AdminInstallationsController($log,$scope,AdminTableService,GraphService,locale,ApiService){$log.info("AdminInstallationsController"),$scope.table=new AdminTableService("installations"),GraphService.ready().then(function(){$scope.chart={size:{height:200},options:{},xAxis:{categories:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]},yAxis:{title:{text:locale.getString("admin.chart_installations_title")}},chart:{zoomType:"x",marginTop:45},tooltip:{shared:!0,animation:!1,headerFormat:""},title:{text:""},subtitle:{text:""},legend:{enabled:!0},credits:{enabled:!1},series:[],loading:!0},ApiService.call("/admin/installation-stats/").then(function(response){$scope.chart.series=response.data.series,$scope.chart.loading=!1})})}AdminInstallationsController.$inject=["$log","$scope","AdminTableService","GraphService","locale","ApiService"],angular.module("vrm.core").controller("AdminInstallationsController",AdminInstallationsController)}(),function(){"use strict";angular.module("vrm.core").config(["$stateProvider",function($stateProvider){$stateProvider.state("base.admin.devices",{url:"/devices",views:{body:{templateUrl:"states/core/admin/devices.html",controller:"AdminDevicesController"}}})}])}(),function(){"use strict";function AdminDevicesController($timeout,$log,$location,UserService,$scope,AdminTableService,GraphService,ApiService,locale,vrmNotificationsService,vrmNotificationType,VrmModalService){$log.info("AdminDevicesController"),$scope.searchModel={value:$location.search().q||""};$scope.table=new AdminTableService(function(params){return params.q=$scope.searchModel.value,ApiService.admin("devices",params)}),$scope.searchTimeout=null,$scope.$watch("searchModel.value",function(val){val&&""!=val&&($timeout.cancel($scope.searchTimeout),$scope.searchTimeout=$timeout(function(){$scope.table.params.reload()},500))})}AdminDevicesController.$inject=["$timeout","$log","$location","UserService","$scope","AdminTableService","GraphService","ApiService","locale","vrmNotificationsService","vrmNotificationType","VrmModalService"],angular.module("vrm.core").controller("AdminDevicesController",AdminDevicesController)}(),function(){"use strict";angular.module("vrm.core").config(["$stateProvider",function($stateProvider){$stateProvider.state("base.admin.dealers-add",{url:"/dealers/add",views:{body:{templateUrl:"states/core/admin/dealers/form.html",controller:"AdminDealersFormController"}}}).state("base.admin.dealers-update",{url:"/dealers/{id:int}/update",views:{body:{templateUrl:"states/core/admin/dealers/form.html",controller:"AdminDealersFormController"}}}).state("base.admin.dealers",{url:"/dealers",views:{body:{templateUrl:"states/core/admin/dealers.html",controller:"AdminDealersController"}}}).state("base.admin.dealer-detail",{url:"/dealers/{id:int}/detail",views:{body:{templateUrl:"states/core/admin/dealers/detail.html",controller:"AdminDealersDetailController"}}})}])}(),function(){"use strict";function AdminDealersController($log,$scope,AdminTableService,VrmModalService,vrmNotificationsService,vrmNotificationType,ApiService,locale){$log.info("AdminDealersController"),$scope.table=new AdminTableService("dealers"),$scope.remove=function(id){VrmModalService.openConfirmModal($scope,"delete",function(confirmed){confirmed&&id&&ApiService.admin("dealers/"+id,{},"DELETE").then(function(){locale.ready("admin").then(function(){vrmNotificationsService.add({type:vrmNotificationType.SUCCESS,message:locale.getString("admin.dealer_deleted")}),$scope.table.params.reload()})})})}}function AdminDealersFormController($log,$scope,$stateParams,ApiService,$state,vrmNotificationsService,locale,vrmNotificationType){$log.info("AdminDealersFormController");$scope.whitelabels=[{id:null,name:"-"}],$scope.dealer={whitelabel:$scope.whitelabels[0]},$scope.editing=!!$stateParams.id,ApiService.call("/admin/whitelabels",{},"GET").then(function(response){$scope.whitelabels=$scope.whitelabels.concat(response.data.records),$stateParams.id&&ApiService.admin("dealers",{"filter[idDealer]":$stateParams.id}).then(function(response){var dealer,res;response.data.num_records<1&&$state.go("base.admin.dealers"),$scope.dealer=(dealer=response.data.records[0],(res={}).name=dealer.name,res.whitelabel=_.find($scope.whitelabels,function(record){return record.id==dealer.idWhiteLabel}),res)})}),$scope.doSave=function(){var data={name:$scope.dealer.name,idWhiteLabel:$scope.dealer.whitelabel.id};ApiService.admin("dealers/"+($scope.editing?$stateParams.id:""),data,$scope.editing?"PUT":"POST").then(function(){locale.ready("admin").then(function(){vrmNotificationsService.add({type:vrmNotificationType.SUCCESS,message:locale.getString("admin.dealer_saved")}),$state.go("base.admin.dealers")})})}}function AdminDealersDetailController($log,$scope,ApiService,$stateParams,vrmUserAccessLevel){$log.info("AdminDealersDetailController"),$scope.users=[],$scope.dealer={},ApiService.admin("users",{"filter[idDealer]":$stateParams.id,count:1e3,"sorting[email]":"asc"}).then(function(response){$scope.users=response.data.records}),ApiService.admin("dealers",{"filter[idDealer]":$stateParams.id}).then(function(response){response.data.num_records<1&&$state.go(base.admin.dealers),$scope.dealer=response.data.records[0]}),$scope.getAccessLevel=function(accessLevel){var res="";return _.each(vrmUserAccessLevel,function(val,key){val==accessLevel&&(res=key)}),res.toLocaleLowerCase().replace("_"," ")}}AdminDealersController.$inject=["$log","$scope","AdminTableService","VrmModalService","vrmNotificationsService","vrmNotificationType","ApiService","locale"],AdminDealersFormController.$inject=["$log","$scope","$stateParams","ApiService","$state","vrmNotificationsService","locale","vrmNotificationType"],AdminDealersDetailController.$inject=["$log","$scope","ApiService","$stateParams","vrmUserAccessLevel"],angular.module("vrm.core").controller("AdminDealersController",AdminDealersController).controller("AdminDealersFormController",AdminDealersFormController).controller("AdminDealersDetailController",AdminDealersDetailController)}(),function(){"use strict";angular.module("vrm.core").config(["$stateProvider",function($stateProvider){$stateProvider.state("base.admin.ccgx",{url:"/ccgx",views:{body:{templateUrl:"states/core/admin/ccgx.html",controller:"AdminCcgxController"}}})}])}(),function(){"use strict";function AdminCcgxController($log,$scope,AdminTableService){$log.info("AdminCcgxController"),$scope.table=new AdminTableService("color-controls")}AdminCcgxController.$inject=["$log","$scope","AdminTableService"],angular.module("vrm.core").controller("AdminCcgxController",AdminCcgxController)}(),function(){"use strict";angular.module("vrm.core").config(["$stateProvider",function($stateProvider){$stateProvider.state("base.admin.attributes",{url:"/attributes",views:{body:{templateUrl:"states/core/admin/attributes/attributes.html",controller:"AdminAttributesController"}}}).state("base.admin.attributes-changelog",{url:"/attributes/changelog",views:{body:{templateUrl:"states/core/admin/attributes/changelog.html",controller:"AdminAttributesChangelogController"}}})}])}(),function(){"use strict";function AdminAttributesController($log,$scope,ApiService,$stateParams,vrmNotificationsService,vrmNotificationType,locale,hotRegisterer,$location,$timeout){$log.info("AdminAttributesController"),$scope.saving=!1,$scope.discarding=!1,$scope.paginationEnabled=!1;var lockedColumnNames=["idDataAttribute","code","idDeviceType","dataType"];function fetchDataAttributes(){$scope.pendingChanges=[],ApiService.admin("data-attributes",{page:1,count:500}).then(function(res){res.data.records&&($scope.columns=Object.keys(res.data.records[0]).map(function(key){return{data:""+key,title:""+key.charAt(0).toUpperCase()+key.slice(1),readOnly:-1<lockedColumnNames.indexOf(key.toString())}}),$scope.items=res.data.records,$scope.searchModel={value:$location.search().q||""},$scope.discarding=!1)})}$scope.pendingChanges=[],$scope.tableSettings={colHeaders:!0,rowHeaders:!0,comments:!0,stretchH:"all",afterChange:function(changes){for(var changeIndex in changes){var change=changes[changeIndex];if(change[2]===change[3])return;var formatedChange={attributeColumn:change[1],oldValue:change[2]||"",newValue:change[3]||"",idDataAttribute:$scope.filteredItems[change[0]].idDataAttribute};$scope.pendingChanges.push(formatedChange)}}},$scope.searchModel={value:$location.search().q||""},$scope.searchTimeout=null,$scope.$watch("searchModel.value",function(val){$timeout.cancel($scope.searchTimeout),$scope.searchTimeout=$timeout(function(){!function(search){for(var data=$scope.items,results=[],row=0,r_len=data.length;row<r_len;row++)for(var property in data[row])if(data[row].hasOwnProperty(property)&&-1<(""+data[row][property]).toLowerCase().indexOf(search)){results.push(data[row]);break}$scope.filteredItems=results,hotRegisterer.getInstance("attributes-table").loadData(results)}(val)},500)}),fetchDataAttributes(),$scope.discardChanges=function(){$scope.discarding=!0,fetchDataAttributes()},$scope.applyChanges=function(){0<$scope.pendingChanges.length&&($scope.saving=!0,ApiService.admin("data-attributes",$scope.pendingChanges,"POST").then(function(res){res.data.success?($scope.pendingChanges=[],locale.ready("attributes").then(function(){vrmNotificationsService.add({type:vrmNotificationType.SUCCESS,message:locale.getString("attributes.apply-success")})})):locale.ready("attributes").then(function(){vrmNotificationsService.add({type:vrmNotificationType.SUCCESS,message:locale.getString("attributes.apply-error")})}),$scope.saving=!1}))},$scope.$on("$locationChangeStart",function(event){0<$scope.pendingChanges.length&&locale.ready("attributes").then(function(){confirm(locale.getString("attributes.leave-message"))||event.preventDefault()})})}AdminAttributesController.$inject=["$log","$scope","ApiService","$stateParams","vrmNotificationsService","vrmNotificationType","locale","hotRegisterer","$location","$timeout"],angular.module("vrm.core").controller("AdminAttributesController",AdminAttributesController)}(),function(){"use strict";function AdminAttributesChangelogController($log,$scope,ApiService,AdminTableService,vrmNotificationsService,vrmNotificationType,$stateParams,$timeout,locale){$log.info("AdminAttributesChangelogController"),$scope.searchModel={value:""};$scope.table=new AdminTableService(function(params){return $scope.searchModel.value&&""!=$scope.searchModel.value&&(params.q=$scope.searchModel.value),ApiService.admin("data-attributes-changelog",params)}),$scope.table.params.sorting("timestamp","desc"),$scope.searchTimeout=null,$scope.$watch("searchModel.value",function(val){val&&""!=val&&($timeout.cancel($scope.searchTimeout),$scope.searchTimeout=$timeout(function(){$scope.table.params.reload()},500))}),$scope.restore=function(changelogEntry){console.log("Change to restore:",changelogEntry);var changeToRestore={attributeColumn:changelogEntry.attributeColumn,oldValue:changelogEntry.newValue,newValue:changelogEntry.oldValue,idDataAttribute:changelogEntry.idDataAttribute};ApiService.admin("data-attributes",[changeToRestore],"POST").then(function(res){res.data.success?($scope.pendingChanges=[],locale.ready("attributes").then(function(){vrmNotificationsService.add({type:vrmNotificationType.SUCCESS,message:locale.getString("attributes.restore-success")})})):locale.ready("attributes").then(function(){vrmNotificationsService.add({type:vrmNotificationType.SUCCESS,message:locale.getString("attributes.restore-error")})})}),console.log($scope.table)}}AdminAttributesChangelogController.$inject=["$log","$scope","ApiService","AdminTableService","vrmNotificationsService","vrmNotificationType","$stateParams","$timeout","locale"],angular.module("vrm.core").controller("AdminAttributesChangelogController",AdminAttributesChangelogController)}(),function(){"use strict";function WhitelabelService($rootScope,$log){var currentWhitelabel=!1;return{setWhitelabel:function(whitelabel){$rootScope.defaultLogo="img/victron_logo_white.svg",$rootScope.defaultLogoRGB="img/victron_logo_rgb.svg",currentWhitelabel=!1;var stylesheet=jQuery('link[rel="stylesheet"][href*=".css"]');whitelabel&&whitelabel.stylesheet?($log.info("Setting whitelabel to: "+whitelabel.name),$rootScope.logo="img/whitelabels/"+whitelabel.stylesheet.replace(".less","-diap.svg"),$rootScope.logoRGB="img/whitelabels/"+whitelabel.stylesheet.replace(".less","-rgb.svg"),stylesheet.attr("data-oldhref")||stylesheet.attr("data-oldhref",stylesheet.attr("href")),stylesheet.attr("href","css/"+whitelabel.stylesheet.replace(".less",".min.css")),currentWhitelabel=whitelabel):($rootScope.logo=$rootScope.defaultLogo,$rootScope.logoRGB=$rootScope.defaultLogoRGB,stylesheet.attr("data-oldhref")&&stylesheet.attr("href",stylesheet.attr("data-oldhref")));$rootScope.$emit("whitelabelChanged")},getGraphColors:function(){{if(currentWhitelabel&&"OceanVolt"==currentWhitelabel.name)return{orange:"#f7ab3e",red:"#fa716f",blue:"#000c78",green:"#8bc964",black:"black",grey:"#64635f",indigo:"#9683ec",lightRed:"#fcb8b7",lightBlue:"#a3c7e7",lightBlue2:"#6eb3f0",lightBlue3:"#b0c6f7",lightOrange:"#fbd59e",lightGreen:"#c5e4b1",lightGrey:"#969591",lightIndigo:"#c3b8f5"};if(currentWhitelabel&&"Offgrid Energy"==currentWhitelabel.name)return{orange:"#f8941d",red:"#ee1a3b",blue:"#0054a6",green:"#0db14b",black:"#121114",grey:"#64635f",indigo:"#9683ec",lightRed:"#e40c20",lightBlue:"#a3c7e7",lightBlue2:"#6eb3f0",lightBlue3:"#b0c6f7",lightOrange:"#f68115",lightGreen:"#0ba33f",lightGrey:"#969591",lightIndigo:"#c3b8f5"}}if(currentWhitelabel&&"Energy Solutions"==currentWhitelabel.name)return{orange:"#f7ab3e",red:"#fa716f",blue:"#004990",green:"#00a1b1",black:"#333333",grey:"#64635f",indigo:"#9683ec",lightRed:"#f35c58",lightBlue:"#a3c7e7",lightBlue2:"#6eb3f0",lightBlue3:"#b0c6f7",lightOrange:"#f0962e",lightGreen:"#008fa1",lightGrey:"#969591",lightIndigo:"#c3b8f5"};if(currentWhitelabel&&"Smartflower"==currentWhitelabel.name)return{orange:"#d2ad2b",red:"#bc3c8e",blue:"#0098a0",green:"#2f872a",black:"black",grey:"#64635f",indigo:"#9683ec",lightRed:"#ad2e7b",lightBlue:"#a3c7e7",lightBlue2:"#6eb3f0",lightBlue3:"#b0c6f7",lightOrange:"#c79c20",lightGreen:"#24741f",lightGrey:"#969591",lightIndigo:"#c3b8f5"};if(currentWhitelabel&&"Powercore"==currentWhitelabel.name)return{orange:"#f7ab3e",red:"#fa716f",blue:"#00c0f3",green:"#8bc964",black:"black",grey:"#64635f",indigo:"#9683ec",lightRed:"#fcb8b7",lightBlue:"#a3c7e7",lightBlue2:"#6eb3f0",lightBlue3:"#b0c6f7",lightOrange:"#fbd59e",lightGreen:"#c5e4b1",lightGrey:"#969591",lightIndigo:"#c3b8f5"};return{orange:"#f7ab3e",red:"#fa716f",blue:"#4790d0",green:"#8bc964",black:"black",grey:"#64635f",indigo:"#9683ec",lightRed:"#fcb8b7",lightBlue:"#a3c7e7",lightBlue2:"#6eb3f0",lightBlue3:"#b0c6f7",lightOrange:"#fbd59e",lightGreen:"#c5e4b1",lightGrey:"#969591",lightIndigo:"#c3b8f5"}},getMarkerSprite:function(){{if(currentWhitelabel&&"OceanVolt"==currentWhitelabel.name)return"/img/whitelabels/oce-vrm-markers.png";if(currentWhitelabel&&"Offgrid Energy"==currentWhitelabel.name)return"/img/whitelabels/oge-vrm-markers.png";if(currentWhitelabel&&"Energy Solutions"==currentWhitelabel.name)return"/img/whitelabels/es-vrm-markers.png";if(currentWhitelabel&&"Smartflower"==currentWhitelabel.name)return"/img/whitelabels/sf-vrm-markers.png"}return"/img/vrm-markers.png"}}}WhitelabelService.$inject=["$rootScope","$log"],angular.module("vrm.core").service("WhitelabelService",WhitelabelService)}(),function(){"use strict";function InstallationShareConfig($stateProvider){$stateProvider.state("share",{url:"/installation/{id:int}/share/{token:string}",views:{base:{templateUrl:"states/core/share.html",controller:"InstallationShareController"}}})}InstallationShareConfig.$inject=["$stateProvider"],angular.module("vrm.core").config(InstallationShareConfig)}(),function(){"use strict";function InstallationShareController(localStorageService,$q,$scope,$log,$stateParams,ApiService,vrmNotificationsService,vrmNotificationType,locale,$state,vrmUserAccessLevel,InstallationsService,UserService){function login(response){response=response[0],vrmNotificationsService.add({type:vrmNotificationType.SUCCESS,message:locale.getString("share.share_success")}),localStorageService.set("token",response.data.token),$scope.$emit("login"),$state.go("base.installation.dashboard",{id:$stateParams.id})}function error(response){$scope.loading=!1,"password_required"!=response&&$state.go("base.installation-overview")}function verifyShare(){var data={token:$stateParams.token,idSite:$stateParams.id};$scope.password&&(data.password=$scope.password),ApiService.isLoggedIn()?UserService.getUser().then(function(){if(!UserService.user||UserService.user.accessLevel!==vrmUserAccessLevel.ADMIN&&UserService.user.accessLevel!==vrmUserAccessLevel.RESTRICTED_ADMIN)if(InstallationsService.installations&&0<InstallationsService.installations.length){var found=!1;_.each(InstallationsService.installations,function(installation){installation.idSite==$stateParams.id&&($state.go("base.installation.dashboard",{id:$stateParams.id}),found=!0)}),found||$q.all([ApiService.auth("/verifyshare/",data),locale.ready("share")]).then(login,error)}else $q.all([ApiService.auth("/verifyshare/",data),locale.ready("share")]).then(login,error);else $state.go("base.installation.dashboard",{id:$stateParams.id})},function(){$q.all([ApiService.auth("/verifyshare/",data),locale.ready("share")]).then(login,error)}):$q.all([ApiService.auth("/verifyshare/",data),locale.ready("share")]).then(login,error)}$log.info("InstallationShareController"),$scope.password=null,$scope.loading=!0,$scope.verifyShare=function(){verifyShare()},verifyShare()}InstallationShareController.$inject=["localStorageService","$q","$scope","$log","$stateParams","ApiService","vrmNotificationsService","vrmNotificationType","locale","$state","vrmUserAccessLevel","InstallationsService","UserService"],angular.module("vrm.core").controller("InstallationShareController",InstallationShareController)}(),function(){"use strict";function ResetPasswordService(ApiService,vrmNotificationsService,vrmNotificationType){var service={formModel:{password:"",password_confirm:"",email:"",password_reset_hash:""},updatePasswordRequest:function(){return ApiService.call("/auth/updatepassword",service.formModel).then(function(response){return!!response.data.success||(vrmNotificationsService.add({type:vrmNotificationType.DANGER,message:ApiService.formatErrors(response)}),!1)})}};return service}ResetPasswordService.$inject=["ApiService","vrmNotificationsService","vrmNotificationType"],angular.module("vrm.core").service("ResetPasswordService",ResetPasswordService)}(),function(){"use strict";function ResetPasswordRoute($stateProvider){$stateProvider.state("reset-password",{url:"/reset-password/:email/:password_reset_hash",views:{base:{templateUrl:"states/core/reset-password.html",controller:"ResetPasswordController"}}})}ResetPasswordRoute.$inject=["$stateProvider"],angular.module("vrm.core").config(ResetPasswordRoute)}(),function(){"use strict";function ResetPasswordController($scope,$stateParams,ResetPasswordService,LoginService,$state,vrmNotificationsService,vrmNotificationType,locale){ResetPasswordService.formModel.password_reset_hash=$stateParams.password_reset_hash,ResetPasswordService.formModel.email=$stateParams.email,$scope.formModel=ResetPasswordService.formModel,$scope.doResetPassword=function(){$scope.resetForm.$valid&&ResetPasswordService.updatePasswordRequest().then(function(success){$scope.requestComplete=success,LoginService.loginModel.username=ResetPasswordService.formModel.email,LoginService.loginModel.password=ResetPasswordService.formModel.password,LoginService.login().then(function(success){"token"===success?$state.go("login"):success&&($scope.$emit("login"),LoginService.loginModel.username="",LoginService.loginModel.password="",LoginService.loginModel.sms_token=null,locale.ready("forgotpassword").then(function(){$state.go("base.installation-overview"),vrmNotificationsService.add({type:vrmNotificationType.SUCCESS,message:locale.getString("forgotpassword.password_changed")})}))})})}}ResetPasswordController.$inject=["$scope","$stateParams","ResetPasswordService","LoginService","$state","vrmNotificationsService","vrmNotificationType","locale"],angular.module("vrm.core").controller("ResetPasswordController",ResetPasswordController)}(),function(){"use strict";function RegistrationService($log,ApiService,vrmNotificationsService,vrmNotificationType){var service={registrationModel:{name:null,email:null,phone:null,company:null,city:null,country:null,language:"en",dealer:null,password:null,invite_key:null},register:function(){return ApiService.call("/auth/register",service.registrationModel).then(function(response){return!!response.data.success||(vrmNotificationsService.add({type:vrmNotificationType.DANGER,message:ApiService.formatErrors(response)}),!1)})}};return service}RegistrationService.$inject=["$log","ApiService","vrmNotificationsService","vrmNotificationType"],angular.module("vrm.core").service("RegistrationService",RegistrationService)}(),function(){"use strict";function RegistrationRoute($stateProvider){$stateProvider.state("registration",{url:"/register",views:{base:{templateUrl:"states/core/registration.html",controller:"RegistrationController"}},params:{invite:{value:null}}}).state("registration.invite",{url:"/invite/{invite:string}"})}RegistrationRoute.$inject=["$stateProvider"],angular.module("vrm.core").config(RegistrationRoute)}(),function(){"use strict";function RegistrationController($stateParams,$scope,RegistrationService){$scope.registrationModel=RegistrationService.registrationModel,$stateParams.invite&&($scope.registrationModel.invite_key=$stateParams.invite),$scope.registrationComplete=!1,$scope.doRegister=function(event){$scope.registrationForm.$valid&&RegistrationService.register().then(function(success){success&&($scope.registrationComplete=!0)})}}RegistrationController.$inject=["$stateParams","$scope","RegistrationService"],angular.module("vrm.core").controller("RegistrationController",RegistrationController)}(),function(){"use strict";function SettingsConfig($stateProvider){$stateProvider.state("base.profile",{abstract:!0,url:"/profile",views:{main:{templateUrl:"states/core/profile/profile.html",controller:"ProfileController"}}})}SettingsConfig.$inject=["$stateProvider"],angular.module("vrm.core").config(SettingsConfig)}(),function(){"use strict";function ProfileController($log,$scope,UserService){$log.info("ProfileController"),UserService.getUser().then(function(user){$scope.user=user}),$scope.reloadUser=function(){UserService.loading=UserService.reload().then(function(user){$scope.user=user})}}ProfileController.$inject=["$log","$scope","UserService"],angular.module("vrm.core").controller("ProfileController",ProfileController)}(),function(){"use strict";function MQTTService($timeout,vrmConfig,$log,$interval,UserService,$rootScope,ApiService){var retryConnectionLimit=10,self=this;function reset(){_.each(self.subscriptions,function(value,path){try{self.client&&self.client.unsubscribe(path)}catch(e){$log.info("MQTT :: Error:"+e.message)}}),self.activePortals={},self.subscriptions={}}function disconnect(){if($log.info("MQTT :: Disconnecting"),self.connected=!1,self.disconnected=!0,$interval.cancel(self.keepAliveTimeout),self.client)try{self.client&&self.client.disconnect()}catch(e){$log.info("MQTT :: Error:"+e.message)}}function connect(){self.connecting=!0,ApiService.isLoggedIn()?void 0!==vrmConfig.enableMQTT&&vrmConfig.enableMQTT?($log.info("MQTT :: Connecting"),self.disconnected=!1,UserService.getUser().then(function(user){try{self.client=new Paho.MQTT.Client(vrmConfig.mqttHost,vrmConfig.mqttPort,user.email+"_"+(new Date).getTime()),self.client.onConnectionLost=onConnectionLost,self.client.onMessageArrived=onMessageArrived;var login={onSuccess:onConnect,onFailure:onConnectFailure,useSSL:!0,userName:"vrmlogin_"+vrmConfig.mqttApiEnvironment+"_"+user.email,password:ApiService.token(),cleanSession:!0,keepAliveInterval:self.keepAliveInterval};self.client.connect(login)}catch(e){self.connecting=!1,$log.info("MQTT :: Error:"+e.message)}})):$log.info("MQTT :: Disabled in config.js"):$log.info("MQTT :: Not logged in, aborting connection")}function tryReconnect(){0<self.reconnectTriesLeft&&($log.info("MQTT :: Retrying to connect..."),self.reconnectTriesLeft--,connect())}function onConnect(){function _sendKeepAlives(){$log.info("MQTT :: Sending keepalives..."),_.each(self.activePortals,function(active,portalId){if(!angular.equals({},active)){var message=new Paho.MQTT.Message("");message.destinationName="R/"+portalId+"/system/0/Serial";try{self.client&&self.client.send(message)}catch(e){$log.info("MQTT :: Error:"+e.message)}}})}$log.info("MQTT :: Connected"),self.connected=!0,self.connecting=!1,self.reconnectTriesLeft=retryConnectionLimit,_.each(self.subscriptions,function(callbackArray,path){try{self.client&&self.client.subscribe(path,{onFailure:onFailure})}catch(e){$log.info("MQTT :: Error:"+e.message)}}),$interval.cancel(self.keepAliveTimeout),self.keepAliveTimeout=$interval(function(){_sendKeepAlives()},1e3*self.keepAliveInterval,0,!1),_sendKeepAlives()}function onFailure(res){$log.info("MQTT :: Subscribe/unsubsribe failure: "+res.errorCode)}function onConnectFailure(res){self.connected=!1,self.connecting=!1,self.disconnected||($log.info("MQTT :: Connection failed"),$log.error(res),tryReconnect())}function getPath(portalId,dbusServiceType,dbusPath,instance){return"N/"+portalId+"/"+dbusServiceType+"/"+instance+dbusPath}function getPath(portalId,dbusServiceType,dbusPath,instance,prefix){return void 0===prefix&&(prefix="N/"),""!==instance&&""!==dbusPath?prefix+portalId+"/"+dbusServiceType+"/"+instance+dbusPath:(console.log(prefix+portalId+"/"+dbusServiceType),prefix+portalId+"/"+dbusServiceType)}function onConnectionLost(responseObject){self.connected=!1,self.disconnected||($log.info("MQTT :: Connection lost"),0!==responseObject.errorCode&&$log.info("MQT :: onConnectionLost:"+responseObject.errorMessage),$interval.cancel(self.keepAliveTimeout),tryReconnect())}function onMessageArrived(message){try{message.payload=JSON.parse(message.payloadString)}catch(err){return void $log.info("MQTT :: Error decoding payload: "+err.message)}void 0!==self.subscriptions[message.destinationName]&&_.each(self.subscriptions[message.destinationName],function(callbackObject){"function"==typeof callbackObject.callback&&callbackObject.callback(message)})}function _validateSubscriptionObject(object,needsCallback){if(needsCallback=void 0!==needsCallback&&needsCallback,void 0===object||!angular.isObject(object))throw"No subscription object given";var required=["identifier","dbusServiceType","dbusPath","instance","callbackIdentifier"];needsCallback&&required.push("callback"),_.each(required,function(property){if(void 0===object[property])throw"No "+property+" property set on subscription object"})}return this.subscriptions={},this.activePortals={},this.reconnectTriesLeft=retryConnectionLimit,this.connected=!1,this.disconnected=!1,this.connecting=!1,this.keepAliveInterval=30,this.keepAliveTimeout=null,this.client=null,$rootScope.$on("logout",function(){reset(),disconnect()}),$rootScope.$on("login",function(){reset()}),$rootScope.$on("tokenChange",function(token){token&&self.connected&&($log.info("MQTT :: Got new token, init reconnect..."),reset(),disconnect(),connect())}),{parseSiteIdFromPath:function(path){return 1<(path=path.split("/")).length&&"#"!=path[1]&&"+"!=path[1]?path[1]:null},subscribeToPath:function(subscription){try{_validateSubscriptionObject(subscription,!0)}catch(e){return void $log.info("MQTT :: Error:"+e.message)}var path=getPath(subscription.identifier,subscription.dbusServiceType,subscription.dbusPath,subscription.instance,subscription.prefix);void 0===self.activePortals[subscription.identifier]&&(self.activePortals[subscription.identifier]={}),self.activePortals[subscription.identifier][path]=!0,function(path,callback,callbackIdentifier){if(self.connected||self.connecting||connect(),callback=callback||function(){},(void 0===self.subscriptions[path]||0==self.subscriptions[path].length)&&(self.subscriptions[path]=[],self.connected))try{self.client&&self.client.subscribe(path,{onFailure:onFailure})}catch(e){$log.info("MQTT :: Error:"+e.message)}self.subscriptions[path]=_.filter(self.subscriptions[path],function(entry){return entry.identifier!==callbackIdentifier}),self.subscriptions[path].push({identifier:callbackIdentifier,callback:callback})}(path,subscription.callback,subscription.callbackIdentifier)},unsubScribeFromPath:function(subscription){try{_validateSubscriptionObject(subscription)}catch(e){return void $log.info("MQTT :: Error:"+e.message)}var path=getPath(subscription.identifier,subscription.dbusServiceType,subscription.dbusPath,subscription.instance,subscription.prefix);if(void 0!==self.activePortals[subscription.identifier]&&delete self.activePortals[subscription.identifier][path],void 0!==self.subscriptions[path]&&(self.subscriptions[path]=_.filter(self.subscriptions[path],function(entry){return entry.identifier!==subscription.callbackIdentifier}),self.connected&&self.subscriptions[path].length<1))try{self.client&&self.client.unsubscribe(path,{onFailure:onFailure})}catch(e){$log.info("MQTT :: Error:"+e.message)}}}}MQTTService.$inject=["$timeout","vrmConfig","$log","$interval","UserService","$rootScope","ApiService"],angular.module("vrm.core").service("MQTTService",MQTTService)}(),function(){"use strict";function LogoutRoute($stateProvider){$stateProvider.state("logout",{url:"/logout",views:{base:{templateUrl:"states/core/logout.html",controller:"LogoutController"}}})}LogoutRoute.$inject=["$stateProvider"],angular.module("vrm.core").config(LogoutRoute)}(),function(){"use strict";function LogoutController(LoginService,$state,$scope,localStorageService,ApiService){ApiService.call("/auth/logout").finally(function(){localStorageService.remove("token"),$scope.$emit("logout");var adminToken=localStorageService.get("adminToken");adminToken?(localStorageService.set("token",adminToken),localStorageService.remove("adminToken"),$scope.$emit("login"),$state.go("base.admin.users")):$state.go("login")})}LogoutController.$inject=["LoginService","$state","$scope","localStorageService","ApiService"],angular.module("vrm.core").controller("LogoutController",LogoutController)}(),function(){"use strict";function LoginService($log,ApiService,jwtHelper,localStorageService,vrmNotificationsService,vrmNotificationType,locale){var notificationId,service={loginModel:{username:"",password:"",sms_token:null,remember_me:!1},login:function(){return vrmNotificationsService.remove(notificationId),ApiService.auth("/login",service.loginModel).then(function(response){return angular.isDefined(response.data.token)?_.isString(response.data.token)&&0<response.data.token.length?(localStorageService.set("token",response.data.token),!0):!1!==response.data.verification_sent?response.data.verification_sent?"token":(vrmNotificationsService.add({type:vrmNotificationType.ERROR,message:locale.getString("login.login_failed")}),!1):void vrmNotificationsService.add({type:vrmNotificationType.ERROR,message:locale.getString("login.verification_failed")}):(notificationId=vrmNotificationsService.add({type:vrmNotificationType.ERROR,message:response.data.message}),!1)},function(error){return!1})}};return service}LoginService.$inject=["$log","ApiService","jwtHelper","localStorageService","vrmNotificationsService","vrmNotificationType","locale"],angular.module("vrm.core").service("LoginService",LoginService)}(),function(){"use strict";function LoginRoute($stateProvider){$stateProvider.state("login",{url:"/login",views:{base:{templateUrl:"states/core/login.html",controller:"LoginController"}},params:{returnUrl:{value:"base.installation-overview"},returnParams:{value:null},invite:{value:null},token:{value:null},evt:{value:null}}}).state("login.invite",{url:"/invite/{invite:string}"}).state("login.verify_register",{url:"/evt/{evt:string}"})}LoginRoute.$inject=["$stateProvider"],angular.module("vrm.core").config(LoginRoute)}(),function(){"use strict";function LoginController(InstallationsService,$scope,LoginService,$state,$log,$stateParams,ApiService,vrmNotificationsService,vrmNotificationType,locale,jwtHelper,$location,localStorageService){$scope.loginModel=LoginService.loginModel;var _redirect=function(){$state.go($stateParams.returnUrl,$stateParams.returnParams).then(function(){},function(){$state.go("base.installation-overview")})},_acceptInvite=function(){return ApiService.call("/auth/verifyinvite",{invite_key:$stateParams.invite},"POST").then(function(inviteValidationResult){var idSite;InstallationsService.reload(),vrmNotificationsService.add({type:vrmNotificationType.SUCCESS,message:locale.getString("login.invite_accepted")}),idSite=inviteValidationResult.data.data.idSite,$state.go("base.installation.dashboard",{id:idSite}).then(function(){},function(){$state.go("base.installation-overview")}),$scope.loginModel.username="",$scope.loginModel.password="",$scope.loginModel.sms_token=null}).catch(_redirect())};if($scope.demo=function(){return ApiService.call("/auth/loginAsDemo",null,!0).then(function(response){angular.isDefined(response.data.token)&&_.isString(response.data.token)&&0<response.data.token.length&&(localStorageService.set("token",response.data.token),$scope.$emit("login"),$state.go("base.installation-overview"))},function(error){return!1})},$scope.doLogin=function(event){$scope.$emit("logout"),$scope.loginForm&&!$scope.loginForm.$valid||LoginService.login().then(function(success){return"token"===success?$scope.tokenRequired=!0:success&&($scope.$emit("login"),$stateParams.invite?_acceptInvite():(_redirect(),$scope.loginForm&&($scope.loginForm.$setPristine(),$scope.loginForm.$setUntouched()),$scope.loginModel.username="",$scope.loginModel.password="",$scope.loginModel.sms_token=null)),success})},$stateParams.invite&&ApiService.isLoggedIn()&&_acceptInvite(),$stateParams.evt)return ApiService.auth("/verify",{verification_hash:$stateParams.evt}).then(function(){vrmNotificationsService.add({type:vrmNotificationType.SUCCESS,message:locale.getString("login.email_verified")}),ApiService.isLoggedIn()&&($scope.$emit("logout"),$scope.$emit("login"),_redirect())});var urlParams=$location.search(),tokenString=urlParams.token?urlParams.token:$stateParams.token;if($scope.loggingInUsingToken=!1,tokenString)try{jwtHelper.decodeToken(tokenString)&&($scope.$emit("logout"),$scope.loggingInUsingToken=!0,localStorageService.set("token",tokenString),$scope.$emit("login"),urlParams.redirect&&""!==urlParams.redirect?$location.path(urlParams.redirect):_redirect())}catch(e){}}LoginController.$inject=["InstallationsService","$scope","LoginService","$state","$log","$stateParams","ApiService","vrmNotificationsService","vrmNotificationType","locale","jwtHelper","$location","localStorageService"],angular.module("vrm.core").controller("LoginController",LoginController)}(),function(){"use strict";function vrmLandingspageredirector($log,$window,$state){return{restrict:"A",link:link,compile:function($element,$attr){return link}};function link(scope,$element,$attr){scope.onResize=function(){$window.innerWidth<1024&&($state.go("login"),angular.element($window).off("resize"))},scope.onResize(),angular.element($window).bind("resize",function(){scope.onResize()}),scope.$on("$destroy",function(){angular.element($window).off("resize")})}}vrmLandingspageredirector.$inject=["$log","$window","$state"],angular.module("vrm.components").directive("vrmLandingspageredirector",vrmLandingspageredirector)}(),function(){"use strict";function LandingpageRoute($stateProvider){$stateProvider.state("landingpage",{url:"/landingpage",views:{base:{templateUrl:"states/core/landingpage.html",controller:"LandingpageController"}}})}LandingpageRoute.$inject=["$stateProvider"],angular.module("vrm.core").config(LandingpageRoute)}(),function(){"use strict";function LandingpageController($scope,$state,$http,ApiService,localStorageService,$log,vrmNotificationsService,vrmNotificationType){$scope.languages=[{id:"en",name:"English"},{id:"es",name:"EspaÃ±ol"},{id:"fr",name:"FranÃ§ais"},{id:"de",name:"Deutsch"},{id:"nl",name:"Nederlands"}],$scope.subscriber={name:"",email:"",language:$scope.languages[0]},$scope.demo=function(){return ApiService.call("/auth/loginAsDemo",null,!0).then(function(response){angular.isDefined(response.data.token)&&_.isString(response.data.token)&&0<response.data.token.length&&(localStorageService.set("token",response.data.token),$scope.$emit("login"),$state.go("base.installation-overview"))},function(error){return!1})},$scope.subscribeForNewsletter=function(subscriber){if($scope.subscribe.$valid){var xwfu="name="+encodeURIComponent(subscriber.name)+"&email="+encodeURIComponent(subscriber.email)+"&language="+encodeURIComponent(subscriber.language.id);$http.post("https://www.victronenergy.com/subscribe",xwfu,{headers:{"Content-Type":"application/x-www-form-urlencoded; charset=utf-8"}}).then(function(response){"ok"===response.data.status&&vrmNotificationsService.add({type:vrmNotificationType.SUCCESS,message:"Thank you for your subscription!"})})}else vrmNotificationsService.add({type:vrmNotificationType.WARNING,title:"Warning",message:"Please provide a valid e-mail address"})}}LandingpageController.$inject=["$scope","$state","$http","ApiService","localStorageService","$log","vrmNotificationsService","vrmNotificationType"],angular.module("vrm.core").controller("LandingpageController",LandingpageController)}(),function(){"use strict";function InstallationOverviewConfig($stateProvider){$stateProvider.state("base.installation-overview",{url:"/installation-overview?search",views:{main:{templateUrl:"states/core/installation-overview.html",controller:"InstallationOverviewController"}}})}InstallationOverviewConfig.$inject=["$stateProvider"],angular.module("vrm.core").config(InstallationOverviewConfig)}(),function(){"use strict";angular.module("vrm.core").filter("installationOverviewFilter",function(){return function(installations,overviewSearch,hasAlarm){var output=_.toArray(installations);return(output=function(output,hasAlarm){return void 0===hasAlarm?output:_.filter(output,function(installation){return hasAlarm?installation.alarm:!installation.alarm})}(output=function(output,overviewSearch){return 0===overviewSearch.term.length?output:_.filter(output,function(installation){return!!installation.name&&-1<installation.name.toString().toLowerCase().indexOf(overviewSearch.term.toLowerCase())})}(output=function(output,overviewSearch){return 0===overviewSearch.tags.length?output:_.filter(output,function(installation){return _.intersection(_.map(installation.tags,"idTag"),_.map(overviewSearch.tags,"idTag")).length})}(output,overviewSearch),overviewSearch),hasAlarm)).sort(_sortByName),output};function _sortByName(a,b){return a.name<b.name?-1:a.name>b.name?1:0}})}(),function(){"use strict";function InstallationOverviewController($timeout,$scope,$state,$stateParams,$injector,VrmMapService,InstallationsService,ApiService,vrmNotificationsService,vrmNotificationType,locale,VrmModalService){$scope.tags=InstallationsService.tags,$scope.overviewSearch={term:$stateParams.search||"",tags:[]},$scope.$watch("tags",function(tags){$scope.overviewSearch.tags.length=0,_.each(_.filter(tags,{selected:!0}),function(tag){$scope.overviewSearch.tags.push(tag)})},!0),$scope.isRealtime=function(installation){return InstallationsService.isSiteRealtime(installation.identifier)},$scope.map={bounds:{},control:{},center:{latitude:0,longitude:0},filter:"all",zoom:7,markers:[],options:{styles:[{stylers:[{visibility:"simplified"}]}],mapTypeControl:!1,panControl:!1,zoomControl:!0,scaleControl:!1,rotateControl:!1,streetViewControl:!1,overviewMapControl:!1,scrollwheel:!1},clusterOptions:VrmMapService.clusterOptions,markersEvents:{click:function(marker,eventName,model){$state.go("base.installation.dashboard",{id:model.id})},mouseover:function(marker,eventName,model){$scope.map.window.model=model,$scope.map.window.show=!0,$scope.map.window.coords={latitude:model.coords.latitude,longitude:model.coords.longitude}},mouseout:function(marker,eventName,model){$scope.map.window.model==model&&($scope.map.window.show=!1)}},window:{show:!1,closeClick:function(){this.show=!1},options:{pixelOffset:{width:30,height:-70},boxClass:"siteinfo"}}},$scope.animating=!1,$scope.panels={search:$stateParams.search||!1,map:!1,tags:0<_.filter($scope.tags,{selected:!0}).length};var animateTimer=null;$scope.$watchCollection("panels",function(newPanels,oldPanels){for(var i in newPanels)if(!oldPanels[i]&&newPanels[i])for(var n in $scope.panels)i!=n&&$scope.panels[n]&&($timeout.cancel(animateTimer),$scope.animating=!0,animateTimer=$timeout(function(){$scope.animating=!1,$scope.$evalAsync()},700,!1),$scope.panels[n]=!1)});var downloadPending=!1;$scope.downloadReport=function(){downloadPending?locale.ready("installationoverview").then(function(){vrmNotificationsService.add({type:vrmNotificationType.ERROR,message:locale.getString("installationoverview.download_pending")})}):(VrmModalService.openDownloadModal($scope,"installationoverview.preparing_download"),downloadPending=!0,ApiService.download(window.__config.reportUrl,null,!0).then(function(response){saveAs(response.data,"production_report_30days.xlsx"),downloadPending=!1,$.magnificPopup.close()},function(){locale.ready("installationoverview").then(function(){vrmNotificationsService.add({type:vrmNotificationType.ERROR,message:locale.getString("installationoverview.download_timeout"),timeout:3e4})}),downloadPending=!1,$.magnificPopup.close()}))},$scope.openModal=function(){VrmModalService.openDownloadProductionReportModal($scope)},$scope.googleMapsLoaded=!1,$scope.$watch("panels.map",function(panel){panel&&!$scope.googleMapsLoaded&&($scope.googleMapsLoaded=!0,$injector.invoke(["uiGmapGoogleMapApi",function(uiGmapGoogleMapApi){uiGmapGoogleMapApi.then(function(maps){function updateMapMarkers(){"my"==$scope.map.filter?$scope.mapInstallations=$scope.myInstallations:"customer"==$scope.map.filter?$scope.mapInstallations=$scope.customerInstallations:$scope.mapInstallations=$scope.installations}maps.zoomControlOptions={position:maps.ControlPosition.LEFT_CENTER,style:maps.ZoomControlStyle.SMALL},maps.visualRefresh=!0,$scope.$watchCollection("installations",updateMapMarkers),$scope.$watch("map.filter",updateMapMarkers),$scope.$watchCollection("mapInstallations",function(mapInstallations){VrmMapService.updateMarkers($scope.map,mapInstallations)}),$scope.$watch("panels.map",function(visible){visible&&VrmMapService.setCenterAndBoundsForCoordinatesList($scope.map)})})}]))})}InstallationOverviewController.$inject=["$timeout","$scope","$state","$stateParams","$injector","VrmMapService","InstallationsService","ApiService","vrmNotificationsService","vrmNotificationType","locale","VrmModalService"],angular.module("vrm.core").controller("InstallationOverviewController",InstallationOverviewController)}(),function(){"use strict";function InstallationConfig($stateProvider){$stateProvider.state("base.installation",{abstract:!0,url:"/installation/{id:int}",views:{main:{templateUrl:"states/core/installation/installation.html",controller:"InstallationController"}}})}InstallationConfig.$inject=["$stateProvider"],angular.module("vrm.core").config(InstallationConfig)}(),function(){"use strict";function InstallationController($log,$rootScope,$scope,$stateParams,InstallationsService,$timeout,$document,vrmNotificationsService,vrmNotificationType,$filter,locale,$state){$log.info("InstallationController");var title=null,invalidVrmTokenNotificationId=null;$scope.$watchCollection("installations",function(){InstallationsService.getInstallation($stateParams.id).then(function(installation){if(installation){$scope.installation=installation,$rootScope.viewTitle=installation.name,title=$rootScope.viewTitle;var invalidTokenUsedAt=installation.invalidVRMAuthTokenUsedInLogRequest&&0<installation.invalidVRMAuthTokenUsedInLogRequest?installation.invalidVRMAuthTokenUsedInLogRequest:installation.invalidMqttPasswordSentAt;0<invalidTokenUsedAt&&installation.view_permissions.update_settings?invalidVrmTokenNotificationId||locale.ready("general").then(function(){invalidVrmTokenNotificationId=vrmNotificationsService.add({type:vrmNotificationType.ERROR,message:locale.getString("general.confirm_reset_description_link",{ago:$filter("amTimeAgo")(1e3*invalidTokenUsedAt),url:$state.href("base.installation.settings.general",{id:installation.id})+"#resetAuthToken"}),timeout:6e4})}):invalidVrmTokenNotificationId&&vrmNotificationsService.remove(invalidVrmTokenNotificationId)}})}),$scope.screensaver=!1;var screensaverTimeout=null,screensaverTime=0,lastMouseX=null,lastMouseY=null,lastPressedKey=null;$scope.$watch("user.screensaverTimeout",function(timeout){!timeout||parseInt(timeout)<=0||(screensaverTime=parseInt(timeout),scheduleScreensaverTimeout())});var handleScreenSaverEvent=function(e){if("mousemove"==e.type){if(e.pageX==lastMouseX&&e.pageY==lastMouseY)return;lastMouseX=e.pageX,lastMouseY=e.pageY}else if("body"==e.target.nodeName.toLowerCase()&&"keyup"==e.type)return 83==lastPressedKey&&83==e.which?(e.stopPropagation(),lastPressedKey=null,void($scope.screensaver||($scope.screensaver=!0,$log.info("Enabling screensaver"),$scope.$evalAsync()))):void(lastPressedKey=e.which);scheduleScreensaverTimeout()};$document.on("scroll keydown keyup mousemove mousedown",handleScreenSaverEvent);var scheduleScreensaverTimeout=function(){$timeout.cancel(screensaverTimeout),$scope.screensaver&&($log.info("Disabling screensaver"),$scope.screensaver=!1,$scope.$evalAsync()),0<!screensaverTime||(screensaverTimeout=$timeout(function(){$log.info("Enabling screensaver"),$scope.screensaver=!0,$scope.$evalAsync()},screensaverTime,!1))};$scope.$on("$destroy",function(){$timeout.cancel(screensaverTimeout),$document.off("scroll keydown keyup mousemove mousedown",handleScreenSaverEvent),title===$rootScope.viewTitle&&($rootScope.viewTitle=null),invalidVrmTokenNotificationId&&vrmNotificationsService.remove(invalidVrmTokenNotificationId)})}InstallationController.$inject=["$log","$rootScope","$scope","$stateParams","InstallationsService","$timeout","$document","vrmNotificationsService","vrmNotificationType","$filter","locale","$state"],angular.module("vrm.core").controller("InstallationController",InstallationController)}(),function(){"use strict";function ForgotPasswordService($log,ApiService){var service={model:{email:null},requestPasswordReset:function(){return ApiService.call("/auth/resetpassword",service.model).then(function(response){return response.data.success})}};return service}ForgotPasswordService.$inject=["$log","ApiService"],angular.module("vrm.core").service("ForgotPasswordService",ForgotPasswordService)}(),function(){"use strict";function ForgotPasswordRoute($stateProvider){$stateProvider.state("forgot-password",{url:"/forgot-password",views:{base:{templateUrl:"states/core/forgot-password.html",controller:"ForgotPasswordController"}}})}ForgotPasswordRoute.$inject=["$stateProvider"],angular.module("vrm.core").config(ForgotPasswordRoute)}(),function(){"use strict";function ForgotPasswordController($scope,ForgotPasswordService,LoginService){$scope.model=ForgotPasswordService.model,$scope.requestReceived=!1,LoginService.loginModel.username&&($scope.model.email=LoginService.loginModel.username),$scope.requestPasswordReset=function(){$scope.forgotpasswordForm.$valid&&ForgotPasswordService.requestPasswordReset().then(function(success){success&&(ForgotPasswordService.model.email=null,$scope.requestReceived=!0)})}}ForgotPasswordController.$inject=["$scope","ForgotPasswordService","LoginService"],angular.module("vrm.core").controller("ForgotPasswordController",ForgotPasswordController)}(),function(){"use strict";function UserService($rootScope,ApiService,vrmUserAccessLevel,vrmNotificationsService,vrmNotificationType,locale,$q,WhitelabelService){var service={user:null,loading:_getUser(),getUser:function(){return service.loading},reload:function(){return service.loading=_getUser(),service.loading},save:function(user){return ApiService.users("update",{name:user.name,email:user.email,phone:user.phone,company:user.company,city:user.city,country:user.country,dealer:user.dealer_name,password:user.password,screensaverTimeout:user.screensaverTimeout}).then(function(response){return service.user=user,response.data.success&&vrmNotificationsService.add({type:vrmNotificationType.SUCCESS,message:locale.getString("core.settings_saved")}),response.data.success},function(){return!1})},setDealer:function(dealer){return setSettings({dealer_code:dealer})},setSettings:setSettings,deleteUserAccount:function(){return ApiService.deleteUserAccount()}};function _getUser(){if(ApiService.isShare()){WhitelabelService.setWhitelabel(!1);var reject=$q.defer();return reject.reject(!1),reject.promise}return ApiService.users("info",[]).then(function(response){return WhitelabelService.setWhitelabel(!!response.data.whiteLabel&&response.data.whiteLabel),service.user=response.data,service.user},function(){return WhitelabelService.setWhitelabel(!1),!1})}function setSettings(settings){return ApiService.users("settings",settings).then(function(response){return response.data.success?vrmNotificationsService.add({type:vrmNotificationType.SUCCESS,message:locale.getString("core.settings_saved")}):vrmNotificationsService.add({type:vrmNotificationType.ERROR,message:response.data.errors}),response.data.success},function(){return!1})}return $rootScope.vrmUserAccessLevel=vrmUserAccessLevel,$rootScope.$on("logout",function(){service.user=null,WhitelabelService.setWhitelabel(!1)}),$rootScope.$on("login",function(){service.loading=_getUser()}),service}UserService.$inject=["$rootScope","ApiService","vrmUserAccessLevel","vrmNotificationsService","vrmNotificationType","locale","$q","WhitelabelService"],angular.module("vrm.core").constant("vrmUserAccessLevel",{DEMO:0,USER:1,ADMIN:2,RESTRICTED_ADMIN:3,DEALER:4,SITE_SHARE:5,AUTOMATION:6}).constant("vrmShareUserId",1).service("UserService",UserService)}(),function(){"use strict";function InstallationsService(MQTTService,$log,$q,$rootScope,ApiService,$interval,$state){var lastSiteMessages={},service={installations:[],installation:null,activeInstallation:null,isSiteRealtime:function(site){return void 0!==lastSiteMessages[site]&&lastSiteMessages[site]>(new Date).getTime()-2e4},tags:[],loading:getInstallations(),reload:reload,getInstallation:function(id){return $q.when(service.loading,function(){var installation=_.find(service.installations,{idSite:id});return null==installation?(service.installation&&service.installation.id==id?service.installation.id==id&&service.installation.promise.then(function(response){service.activeInstallation=response}):service.installation={id:id,promise:ApiService.users("installations?extended=1&idSite="+id,[]).then(function(response){if(void 0===response.data.records[0])return null;var installation=response.data.records[0];return _parseInstallation(installation),service.activeInstallation=installation})},service.installation.promise):service.activeInstallation=installation})}},redirectedToAddSite=!1;function getInstallations(){return ApiService.users("installations?extended=1",[]).then(function(response){var installations;return response.data.success&&(!function(installations){var allTags=[],selectedTags=_.filter(service.tags,function(tag){return 1==tag.selected});_.each(installations,function(installation){_.each(installation.tags,function(tag,key){var selected=_.find(selectedTags,function(curTag){return curTag.idTag==tag.idTag});allTags.push({idTag:tag.idTag,selected:!!selected,label:tag.name})})});var uniqueTags=_.uniqWith(allTags,function(a,b){return a.idTag==b.idTag});service.tags.length=0,_.each(uniqueTags,function(tag){service.tags.push(tag)})}(response.data.records),service.installations.length=0,installations=response.data.records,_.each(installations,function(installation){_parseInstallation(installation),service.installations.push(installation)}),0===service.installations.length&&(!$rootScope.userState||$rootScope.userState.isShare||$rootScope.userState.isDemo||redirectedToAddSite||($state.current.name.indexOf("add-installation")<0&&$state.go("base.add-installation"),redirectedToAddSite=!0))),!0},function(){return service.installations.length=0,service.installations=[],service.tags.length=0,!(service.tags=[])})}var mqttDataChanged=!1;function _scheduleScopeEval(siteId){null!==siteId&&(lastSiteMessages[siteId]=(new Date).getTime()),mqttDataChanged=!0}function _getFormattedValue(dataAttr,rawValue){if(dataAttr.dataType&&"enum"==dataAttr.dataType){var enumVal=_.find(dataAttr.dataAttributeEnumValues,function(record){return record.valueEnum==rawValue});return enumVal?enumVal.nameEnum:null}return dataAttr.formatWithUnit?sprintf(dataAttr.formatWithUnit.replace("F","f"),rawValue):null}function _parseInstallation(installation){installation.data={},installation.id=installation.idSite,installation.timezone_offset_textual=(0<installation.timezone_offset?"+":"-")+function(num,size){for(var s=num+"";s.length<size;)s="0"+s;return s}(installation.timezone_offset/3600,2)+"00",_.each(installation.extended,function(dataAttribute,index){installation.data[installation.extended[index].code]=installation.extended[index]});var skipMqttForThisCodes=["lt","lg","ls"];installation.extended&&_.each(installation.extended,function(dataAttr,key){void 0===dataAttr.mqttFetcher&&skipMqttForThisCodes.indexOf(dataAttr.code)<0&&(dataAttr.dbusPath?dataAttr.mqttFetcher=_.bind(function(message){this.rawValue=message.payload.value;var formattedValue=_getFormattedValue(dataAttr,this.rawValue);null!==formattedValue&&(this.formattedValue=formattedValue),dataAttr.dataType&&"enum"==dataAttr.dataType&&formattedValue&&(this.textValue=formattedValue),void 0!==this.firstMessageReceived&&this.firstMessageReceived&&_scheduleScopeEval(MQTTService.parseSiteIdFromPath(message.destinationName)),this.firstMessageReceived=!0},installation.extended[key]):dataAttr.dataAttributes&&(dataAttr.lastMqttValues={},dataAttr.mqttFetcher=_.bind(function(message){this.lastMqttValues[message.destinationName]=message.payload.value;var value=null;_.each(this.lastMqttValues,function(lastMqttVal){value+=lastMqttVal}),this.rawValue=value;var formattedValue=_getFormattedValue(dataAttr,this.rawValue);null!==formattedValue&&(this.formattedValue=formattedValue),dataAttr.dataType&&"enum"==dataAttr.dataType&&formattedValue&&(this.textValue=formattedValue),void 0!==this.firstMessageReceived&&this.firstMessageReceived&&_scheduleScopeEval(MQTTService.parseSiteIdFromPath(message.destinationName)),this.firstMessageReceived=!0},dataAttr),_.each(dataAttr.dataAttributes,function(attribute){})))})}function reload(){service.loading=getInstallations()}return $interval(function(){mqttDataChanged&&($rootScope.$evalAsync(),mqttDataChanged=!1)},500,0,!1),$rootScope.$on("logout",function(){service.installations.length=0,redirectedToAddSite=!1}),$rootScope.$on("login",function(){reload()}),service}InstallationsService.$inject=["MQTTService","$log","$q","$rootScope","ApiService","$interval","$state"],angular.module("vrm.core").service("InstallationsService",InstallationsService).constant("vrmInstallationAccessLevel",{MONITORING:0,FULL_CONTROL:1})}(),function(){"use strict";angular.module("vrm.core").constant("dataAttribute",dataAttribute);var dataAttribute={Battery_State_of_Charge:"bs"}}(),function(){"use strict";function BaseController($rootScope,$scope,InstallationsService,UserService,VrmLangService,$timeout,locale,ApiService,vrmUserAccessLevel,amMoment){VrmLangService.getLang().then(function(lang){locale.setLocale(lang),amMoment.changeLocale(lang)}),$scope.loading=!0,$scope.installations=[],$scope.myInstallations=[],$scope.customerInstallations=[],$scope.activeInstallation=null,$rootScope.user=null,$rootScope.userState={isDemo:!1,isShare:ApiService.isShare(),isAdmin:!1},$rootScope.userState.isShare||UserService.getUser().then(function(){UserService.user&&($rootScope.user=UserService.user,$rootScope.userState.isDemo=$rootScope.user.accessLevel==vrmUserAccessLevel.DEMO,$rootScope.userState.isAdmin=$rootScope.user.accessLevel===vrmUserAccessLevel.ADMIN||$rootScope.user.accessLevel===vrmUserAccessLevel.RESTRICTED_ADMIN)});var reload=null;$scope.$watch(function(){return InstallationsService.installations},function(){var installations=InstallationsService.installations;$scope.myInstallations=_.filter(installations,{owner:!ApiService.isShare()}),$scope.customerInstallations=_.filter(installations,{owner:!!ApiService.isShare()}),$scope.installations=installations,null===reload&&scheduleInstallationReload()},!0);var scheduleInstallationReload=function(){reload=$timeout(function(){void 0!==document.hidden&&document.hidden?scheduleInstallationReload():(InstallationsService.reload(),InstallationsService.loading.then(function(){scheduleInstallationReload()}))},6e4)};$scope.$watch(function(){return InstallationsService.activeInstallation},function(){$scope.activeInstallation=InstallationsService.activeInstallation},!0),$scope.$on("$destroy",function(){$timeout.cancel(reload)}),InstallationsService.loading.then(function(){$scope.loading=!1})}BaseController.$inject=["$rootScope","$scope","InstallationsService","UserService","VrmLangService","$timeout","locale","ApiService","vrmUserAccessLevel","amMoment"],angular.module("vrm.core").controller("BaseController",BaseController)}(),function(){"use strict";angular.module("vrm.core").config(["$stateProvider",function($stateProvider){$stateProvider.state("base.admin",{abstract:!0,url:"/admin",views:{main:{templateUrl:"states/core/admin/admin.html",controller:"AdminController"}}})}])}(),function(){"use strict";function AdminController($log){$log.info("AdminController")}AdminController.$inject=["$log"],angular.module("vrm.core").controller("AdminController",AdminController)}(),function(){"use strict";function AdminTableService($location,NgTableParams,ApiService,$rootScope,$q,$timeout){return function(endPoint){var self=this;return this.filterTimeout=null,this.getParams=function(override){return override=void 0===override?{}:override,new NgTableParams(angular.extend({count:100},angular.extend($location.search(),override)),{counts:[],filterOptions:{filterDelay:1},getData:function(params){var promise=$q.defer();return $timeout.cancel(self.filterTimeout),self.state.isLoading=!0,$location.search(params.url()),self.filterTimeout=$timeout(function(){("string"==typeof endPoint?ApiService.admin(endPoint,params.url()):endPoint(params.url())).then(function(response){var data=response.data;params.total(data.num_records),angular.extend(self.state,{isLoading:!1,total:data.num_records,fetchedData:!0}),void 0!==data.num_active&&angular.extend(self.state,{total_active:data.num_active}),promise.resolve(data.records)},function(){promise.reject()})},500),promise.promise}})},this.params=self.getParams(),$rootScope.$on("$locationChangeSuccess",function(){angular.equals($location.search(),self.params.url())||angular.equals({},$location.search())||!self.state.fetchedData||(self.params=self.getParams())}),this.state={fetchedData:!1,total:0,total_active:0,isLoading:!0},this}}AdminTableService.$inject=["$location","NgTableParams","ApiService","$rootScope","$q","$timeout"],angular.module("vrm.core").service("AdminTableService",AdminTableService)}(),function(){"use strict";function ApiService($rootScope,vrmConfig,$log,$http,$q,vrmNotificationsService,vrmNotificationType,jwtHelper,localStorageService,locale,vrmShareUserId){return{auth:function(path,data){return call("/auth"+path,data,"POST",!0)},users:function(path,data,skipResultChecks){if(_token())return call("/users/"+_token().uid+"/"+path,data,void 0,void 0,void 0,skipResultChecks);var promise=$q.defer();return promise.reject("Unauthorized"),promise.promise},deleteUserAccount:function(){if(_token())return call("/users/"+_token().uid+"/delete",void 0,"DELETE",void 0,void 0,void 0);var promise=$q.defer();return promise.reject("Unauthorized"),promise.promise},admin:function(path,params,method,skipResultChecks){return call("/admin/"+path,params,method=void 0===method?"GET":method,void 0,void 0,skipResultChecks)},token:function(){var token=localStorageService.get("token");return token||null},diagnostics:function(siteId,params){return call("/installations/"+siteId+"/diagnostics",params,"GET")},installations:function(id,path,data,method){null==method&&(method="GET");return call("/installations/"+id+"/"+path,data,method)},installationSettings:function(id,data,showNotification){null==showNotification&&(showNotification=!0);return $q.all([call("/installations/"+id+"/settings",data,"POST"),locale.ready("graph")]).then(function(result){return showNotification&&vrmNotificationsService.add({type:vrmNotificationType.SUCCESS,message:locale.getString("core.settings_saved")}),result[0]})},installationDownload:function(id,path,data,skipResultChecks){return download("/installations/"+id+"/"+path,data,skipResultChecks)},download:download,call:call,formatErrors:formatErrors,isLoggedIn:function(){var token=localStorageService.get("token");return!!token&&!jwtHelper.isTokenExpired(token)},isShare:function(){var token=_token();if(token)return token.share;return!1}};function formatErrors(response){return response.data.error_code&&"invalid_token"==response.data.error_code?locale.getString("core.invalid_token"):!_.isObject(response.data.errors)&&response.data&&response.data.errors?response.data.errors:_.isObject(response.data.errors)?_.reduce(response.data.errors,function(result,message){return result+=message+"\n"},""):locale.getString("core.unknown_error")}function download(path,data,skipResultChecks){return call(path,data,"GET",!1,"blob",skipResultChecks)}function call(path,data,method,skipAuthorization,responseType,skipResultChecks){var promise=$q.defer();null==method&&(method="POST"),null==skipResultChecks&&(skipResultChecks=!1),null==skipAuthorization&&(skipAuthorization=!1),null==responseType&&(responseType="json");var successCallback=function(response){skipResultChecks?promise.resolve(response):function(response,promise){var refreshToken=response.headers?response.headers("X-Token"):null;null!=refreshToken&&($log.info("Got new token, saving it"),localStorageService.set("token",refreshToken),$rootScope.$broadcast("tokenChange",refreshToken));response.data&&"success"in response.data&&!response.data.success?response.data.errors?(locale.ready("core").then(function(){vrmNotificationsService.add({type:vrmNotificationType.ERROR,message:formatErrors(response)})}),promise.reject(response.data.error_code),vrmConfig.debug&&$log.error("API error",response.data.error_code)):response.data&&"error_message_code"in response.data?(vrmConfig.debug&&$log.error("External error",response.data.error_message_code),promise.reject(response)):(locale.ready("core").then(function(){vrmNotificationsService.add({type:vrmNotificationType.ERROR,message:locale.getString("core.unknown_error")})}),promise.reject("Errors"),vrmConfig.debug&&$log.error("API error","Unknown error")):promise.resolve(response)}(response,promise)},errorCallback=function(response){skipResultChecks?promise.reject(response):function(error,promise){var refreshToken=error.headers?error.headers("X-Token"):null;null!=refreshToken&&(localStorageService.set("token",refreshToken),$rootScope.$broadcast("tokenChange",refreshToken));error.data&&error.data.message?vrmNotificationsService.add({type:vrmNotificationType.DANGER,message:error.data.message}):error.data&&error.data.errors?locale.ready("core").then(function(){vrmNotificationsService.add({type:vrmNotificationType.DANGER,message:formatErrors(error)})}):error.statusText&&""!=error.statusText?"Internal Server Error"===error.statusText?locale.ready("core").then(function(){vrmNotificationsService.add({type:vrmNotificationType.DANGER,message:locale.getString("core.backend_unavailable")})}):vrmNotificationsService.add({type:vrmNotificationType.DANGER,message:error.statusText}):locale.ready("core").then(function(){vrmNotificationsService.add({type:vrmNotificationType.DANGER,message:locale.getString("core.unknown_error")})});vrmConfig.debug&&$log.error("API error",error);promise.reject(error)}(response,promise)},pattern=/^((http|https):\/\/)/;return"POST"==method||"DELETE"==method||"PUT"==method?$http({method:method,url:pattern.test(path)?path:vrmConfig.api+path,data:data,responseType:responseType,skipAuthorization:skipAuthorization,headers:{"Content-Type":data instanceof FormData?void 0:"application/json"},processData:!1}).then(successCallback,errorCallback):$http({method:"GET",url:pattern.test(path)?path:vrmConfig.api+path,params:data,responseType:responseType,skipAuthorization:skipAuthorization}).then(successCallback,errorCallback),promise.promise}function _token(){var data;return localStorageService.get("token")?((data=jwtHelper.decodeToken(localStorageService.get("token"))).share=!1,null!=typeof data.uid&&angular.isString(data.uid)&&-1<data.uid.indexOf("site_share")&&(data.uid=vrmShareUserId,data.share=!0),data):null}}ApiService.$inject=["$rootScope","vrmConfig","$log","$http","$q","vrmNotificationsService","vrmNotificationType","jwtHelper","localStorageService","locale","vrmShareUserId"],angular.module("vrm.core").service("ApiService",ApiService)}(),function(){"use strict";function AddInstallationService($log,ApiService,InstallationsService,locale,vrmNotificationsService,vrmNotificationType){var service={model:{installation_identifier:null},addInstallation:function(){return ApiService.users("addsite",service.model,!0).then(function(response){if(response.data.success)service.model.installation_identifier=null,vrmNotificationsService.add({type:vrmNotificationType.SUCCESS,message:locale.getString("addinstallation.INSTALLATION_ADDED")}),InstallationsService.reload();else if("installation_already_bound_to_account"===response.data.error_code)service.model.installation_identifier=null,locale.ready("common").then(function(){var message=locale.getString("addinstallation.INSTALLATION_ALREADY_BOUND_TO_ACCOUNT",{link:'<a href="/installation/'+response.data.idSite+'/dashboard" data-ui-sref="base.installation.dashboard({id: \''+response.data.idSite+"'})\">"+locale.getString("common.here")+"</a>"});vrmNotificationsService.add({type:vrmNotificationType.INFO,message:message,timeout:2e4})});else if("installation_identifier_unknown"===response.data.error_code)vrmNotificationsService.add({type:vrmNotificationType.ERROR,message:locale.getString("addinstallation.INSTALLATION_IDENTIFIER_UNKNOWN"),timeout:2e4});else if("admin_mail_sent"===response.data.error_code)return service.model.installation_identifier=null,vrmNotificationsService.add({type:vrmNotificationType.INFO,message:locale.getString("addinstallation.INSTALLATION_ADMIN_MAIL_SENT"),timeout:2e4}),response.data;return response.data})}};return service}AddInstallationService.$inject=["$log","ApiService","InstallationsService","locale","vrmNotificationsService","vrmNotificationType"],angular.module("vrm.core").service("AddInstallationService",AddInstallationService)}(),function(){"use strict";function AddInstallationConfig($stateProvider){$stateProvider.state("base.add-installation",{url:"/add-installation",views:{main:{templateUrl:"states/core/addinstallation/addinstallation.html",controller:"AddInstallationController"}}})}AddInstallationConfig.$inject=["$stateProvider"],angular.module("vrm.core").config(AddInstallationConfig)}(),function(){"use strict";function AddInstallationController($scope,$state,AddInstallationService,InstallationsService,VrmModalService,locale,ApiService,vrmNotificationsService,vrmNotificationType){$scope.model=AddInstallationService.model,$scope.device=!1,$scope.placeholder="addinstallation.PLACEHOLDER_VGR_VER",$scope.setDevice=function(device){$scope.device=device,$scope.placeholder="addinstallation.PLACEHOLDER_"+device.toUpperCase(),$("body, html").animate({scrollTop:angular.element("#enter-number").offset().top},"slow")},$scope.addInstallation=function(){$scope.addInstallationForm.$valid&&AddInstallationService.addInstallation().then(function(data){$scope.addInstallationForm.$setPristine(),$scope.addInstallationForm.$setUntouched(),data.idSite?(InstallationsService.reload(),$state.go("base.installation.settings.general",{id:data.idSite})):"admin_mail_sent"===data.error_code&&$state.go("base.installation-overview")})},$scope.openCCGXUploadModal=function(){VrmModalService.openUploadModal($scope,"ccgx",function(files){if(files||1===files.length){var file=files[0];if(file.size>64*Math.pow(10,6))locale.ready("dashboard").then(function(){vrmNotificationsService.add({type:vrmNotificationType.ERROR,message:locale.getString("dashboard.ccgx_file_too_big")})});else{var data=new FormData;data.append("data",file),ApiService.call("/installations/data-upload",data).then(function(response){locale.ready("dashboard").then(function(){vrmNotificationsService.add({type:vrmNotificationType.SUCCESS,message:locale.getString("dashboard.ccgx_uploaded",{count:response.data.num_processed})})})})}}})}}AddInstallationController.$inject=["$scope","$state","AddInstallationService","InstallationsService","VrmModalService","locale","ApiService","vrmNotificationsService","vrmNotificationType"],angular.module("vrm.core").controller("AddInstallationController",AddInstallationController)}(),function(){"use strict";function ActivityFeedService($log,ApiService){return{doActivityFeedStuff:function(){$log("doActivityFeedStuff called")}}}ActivityFeedService.$inject=["$log","ApiService"],angular.module("vrm.core").service("ActivityFeedService",ActivityFeedService)}(),function(){"use strict";function ForgotPasswordRoute($stateProvider){$stateProvider.state("with-nav.activity-feed",{url:"/activity-feed",views:{main:{templateUrl:"states/core/activity-feed.html",controller:"ActivityFeedController"}}})}ForgotPasswordRoute.$inject=["$stateProvider"],angular.module("vrm.core").config(ForgotPasswordRoute)}(),function(){"use strict";function ActivityFeedController($log){$log.info("ActivityFeedController")}ActivityFeedController.$inject=["$log"],angular.module("vrm.core").controller("ActivityFeedController",ActivityFeedController)}(),function(){"use strict";function AccessTokensRoute($stateProvider){$stateProvider.state("base.access-tokens",{url:"/access-tokens",views:{main:{templateUrl:"states/core/access-tokens.html",controller:"AccessTokensController"}}})}AccessTokensRoute.$inject=["$stateProvider"],angular.module("vrm.core").config(AccessTokensRoute)}(),function(){"use strict";function AccessTokensController($scope,AccessTokensService,vrmNotificationsService,vrmNotificationType,VrmModalService,locale){function _init(){AccessTokensService.requestActiveTokens().then(function(response){$scope.activeTokens=response.tokens})}$scope.createToken=function(){var name=$scope.name;$scope.name="",AccessTokensService.createToken(name).then(function(response){$scope.token=response.token,_init(),VrmModalService.openAccessTokenModal($scope,response.token)})},$scope.revokeToken=function(token){AccessTokensService.revokeToken(token.idAccessToken).then(function(response){_init(),vrmNotificationsService.add({type:vrmNotificationType.SUCCESS,message:locale.getString("accesstokens.notification_revoke")})})},_init()}AccessTokensController.$inject=["$scope","AccessTokensService","vrmNotificationsService","vrmNotificationType","VrmModalService","locale"],angular.module("vrm.core").controller("AccessTokensController",AccessTokensController)}(),function(){"use strict";function AccessTokensService($log,ApiService,UserService){return{requestActiveTokens:function(){return getUserId().then(function(idUser){return ApiService.call("/users/"+idUser+"/accesstokens/list",null,"GET")}).then(function(response){return response.data})},createToken:function(name){var data=JSON.stringify({name:name});return getUserId().then(function(idUser){return ApiService.call("/users/"+idUser+"/accesstokens/create",data,"POST").then(function(response){return response.data})})},revokeToken:function(idAccessToken){return getUserId().then(function(idUser){return ApiService.call("/users/"+idUser+"/accesstokens/"+idAccessToken+"/revoke",null,"GET")}).then(function(response){return response.data})}};function getUserId(){return UserService.getUser().then(function(data){return data.id})}}AccessTokensService.$inject=["$log","ApiService","UserService"],angular.module("vrm.core").service("AccessTokensService",AccessTokensService)}(),function(){"use strict";angular.module("vrm",["vrm.core"])}();
//# sourceMappingURL=victron-gonzales-frontend.min.js.map